{"pageProps":{"postData":{"_id":"5fb66a1b9f9e7f16fd324b48","id":"esformatter-ignore","crawlTimestamp":"19/11/2020 12:50:34","packageName":"esformatter-ignore","description":"an esformatter plugin to make esformatter ignore certain lines and blocks of code","repository":{"type":"git","url":"git+https://github.com/royriojas/esformatter-ignore.git"},"readme":"# [esformatter](https://github.com/millermedeiros/esformatter)-jsx\n> an esformatter plugin to make esformatter ignore certain lines and blocks of code\n\n[![NPM Version](http://img.shields.io/npm/v/esformatter-ignore.svg?style=flat)](https://npmjs.org/package/esformatter-ignore)\n[![Build Status](http://img.shields.io/travis/royriojas/esformatter-ignore.svg?style=flat)](https://travis-ci.org/royriojas/esformatter-ignore)\n\n## Overview\n\n**esformatter-ignore** is a plugin for [esformatter](https://github.com/millermedeiros/esformatter) meant to allow\ncertain lines and blocks of code to be ignored by esformatter\n\n**Example**\n\n```javascript\nvar someVar = 'foo';\nif (someVar) {\n  /*esfmt-ignore-start*/\n// you want for some reason this block to remain untoched by the formatter\n// most use cases are for certain cases where the formatter produces some buggy\n// output like these cases:\n// - https://github.com/millermedeiros/esformatter/issues/359\n// - https://github.com/millermedeiros/esformatter/issues/358\n// - https://github.com/millermedeiros/esformatter/issues/347\ncache.setKey( 'persistifyArgs', {\ncache: browserifyOpts.cache,\npackageCache: browserifyOpts.packageCache\n} );\n    /*esfmt-ignore-end*/\n}\n```\n\nIf you want to ignore only a single line you can also do it by doing\n\n```javascript\nif (someKey) {\n  // ignoring next line cause esformatter@7.0.3\n  // mistakenly move the semicolon to the next line\n  delete objectCache[someKey]; // esfmt-ignore-line\n}\n```\n\n## Installation\n\n```sh\n$ npm install esformatter-ignore --save-dev\n```\n\n## Config\n\nNewest esformatter versions autoload plugins from your `node_modules` [See this](https://github.com/millermedeiros/esformatter#plugins)\n\nAdd to your esformatter config file:\n\nIn order for this to work, this plugin should be the first one! (I Know too picky, but who isn't).\n\n```javascript\n{\n  \"plugins\": [\n    \"esformatter-ignore\"\n  ]\n}\n```\n\nOr you can manually register your plugin:\n\n```js\n// register plugin\nesformatter.register(require('esformatter-ignore'));\n```\n\n## node usage\n\n```js\nvar fs = require('fs');\nvar esformatter = require('esformatter');\n//register plugin manually\nesformatter.register(require('esformatter-ignore'));\n\nvar str = fs.readFileSync('./someKewlFile.js').toString();\nvar output = esformatter.format(str);\n//-> output will now contain the formatted code with the blocks marked to be ignored remain intact\n```\n\nSee [esformatter](https://github.com/millermedeiros/esformatter) for more options and further usage info.\n\n## License\n\n[MIT](License)\n","homepage":"https://github.com/royriojas/esformatter-ignore#readme","trustScore":12,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":0,"dependent_projects":2,"dependent_repositories":3,"stars":0,"contributors":0,"subscribers":0,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":12},"versions":[{"versionNumber":"0.1.0","timestamp":"2015-09-22T04:48:10.150Z","trustScore":6,"dependencies":[]},{"versionNumber":"0.1.1","timestamp":"2015-09-22T05:05:19.771Z","trustScore":5,"dependencies":[]},{"versionNumber":"0.1.2","timestamp":"2015-10-01T17:16:32.713Z","trustScore":6,"dependencies":[]},{"versionNumber":"0.1.3","timestamp":"2015-10-08T18:31:41.910Z","trustScore":12,"dependencies":[]}]}},"__N_SSG":true}