{"pageProps":{"postData":{"_id":"5fb663e59f9e7f16fd324650","id":"emoji-regex","crawlTimestamp":"19/11/2020 12:24:04","packageName":"emoji-regex","description":"A regular expression to match all Emoji-only symbols as per the Unicode Standard.","repository":{"type":"git","url":"git+https://github.com/mathiasbynens/emoji-regex.git"},"readme":"# emoji-regex [![Build status](https://travis-ci.org/mathiasbynens/emoji-regex.svg?branch=master)](https://travis-ci.org/mathiasbynens/emoji-regex)\n\n_emoji-regex_ offers a regular expression to match all emoji symbols and sequences (including textual representations of emoji) as per the Unicode Standard.\n\nThis repository contains a script that generates this regular expression based on [Unicode data](https://github.com/node-unicode/node-unicode-data). Because of this, the regular expression can easily be updated whenever new emoji are added to the Unicode standard.\n\n## Installation\n\nVia [npm](https://www.npmjs.com/):\n\n```bash\nnpm install emoji-regex\n```\n\nIn [Node.js](https://nodejs.org/):\n\n```js\nconst emojiRegex = require('emoji-regex/RGI_Emoji.js');\n// Note: because the regular expression has the global flag set, this module\n// exports a function that returns the regex rather than exporting the regular\n// expression itself, to make it impossible to (accidentally) mutate the\n// original regular expression.\n\nconst text = `\n\\u{231A}: ‚åö default emoji presentation character (Emoji_Presentation)\n\\u{2194}\\u{FE0F}: ‚ÜîÔ∏è default text presentation character rendered as emoji\n\\u{1F469}: üë© emoji modifier base (Emoji_Modifier_Base)\n\\u{1F469}\\u{1F3FF}: üë©üèø emoji modifier base followed by a modifier\n`;\n\nconst regex = emojiRegex();\nlet match;\nwhile (match = regex.exec(text)) {\n  const emoji = match[0];\n  console.log(`Matched sequence ${ emoji } ‚Äî code points: ${ [...emoji].length }`);\n}\n```\n\nConsole output:\n\n```\nMatched sequence ‚åö ‚Äî code points: 1\nMatched sequence ‚åö ‚Äî code points: 1\nMatched sequence ‚ÜîÔ∏è ‚Äî code points: 2\nMatched sequence ‚ÜîÔ∏è ‚Äî code points: 2\nMatched sequence üë© ‚Äî code points: 1\nMatched sequence üë© ‚Äî code points: 1\nMatched sequence üë©üèø ‚Äî code points: 2\nMatched sequence üë©üèø ‚Äî code points: 2\n```\n\n## Regular expression flavors\n\nThe package comes with three distinct regular expressions:\n\n```js\n// This is the recommended regular expression to use. It matches all\n// emoji recommended for general interchange, as defined via the\n// `RGI_Emoji` property in the Unicode Standard.\n// https://unicode.org/reports/tr51/#def_rgi_set\n// When in doubt, use this!\nconst emojiRegexRGI = require('emoji-regex/RGI_Emoji.js');\n\n// This is the old regular expression, prior to `RGI_Emoji` being\n// standardized. In addition to all `RGI_Emoji` sequences, it matches\n// some emoji you probably don‚Äôt want to match (such as emoji component\n// symbols that are not meant to be used separately).\nconst emojiRegex = require('emoji-regex/index.js');\n\n// This regular expression matches even more emoji than the previous\n// one, including emoji that render as text instead of icons (i.e.\n// emoji that are not `Emoji_Presentation` symbols and that aren‚Äôt\n// forced to render as emoji by a variation selector).\nconst emojiRegexText = require('emoji-regex/text.js');\n```\n\nAdditionally, in environments which support ES2015 Unicode escapes, you may `require` ES2015-style versions of the regexes:\n\n```js\nconst emojiRegexRGI = require('emoji-regex/es2015/RGI_Emoji.js');\nconst emojiRegex = require('emoji-regex/es2015/index.js');\nconst emojiRegexText = require('emoji-regex/es2015/text.js');\n```\n\n## For maintainers\n\n### How to update emoji-regex after new Unicode Standard releases\n\n1. Update the Unicode data dependency in `package.json` by running the following commands:\n\n    ```sh\n    # Example: updating from Unicode v12 to Unicode v13.\n    npm uninstall @unicode/unicode-12.0.0\n    npm install @unicode/unicode-13.0.0 --save-dev\n    ````\n\n1. Generate the new output:\n\n    ```sh\n    npm run build\n    ```\n\n1. Verify that tests still pass:\n\n    ```sh\n    npm test\n    ```\n\n1. Send a pull request with the changes, and get it reviewed & merged.\n\n1. On the `master` branch, bump the emoji-regex version number in `package.json`:\n\n    ```sh\n    npm version patch -m 'Release v%s'\n    ```\n\n    Instead of `patch`, use `minor` or `major` [as needed](https://semver.org/).\n\n    Note that this produces a Git commit + tag.\n\n1. Push the release commit and tag:\n\n    ```sh\n    git push               # push the commit\n    git push origin v0.1.2 # push the tag\n    ```\n\n    Our CI then automatically publishes the new release to npm.\n\n## Author\n\n| [![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](https://mathiasbynens.be/) |\n\n## License\n\n_emoji-regex_ is available under the [MIT](https://mths.be/mit) license.\n","homepage":"https://mths.be/emoji-regex","trustScore":26,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":1,"not_brand_new":1,"one_point_oh":1,"dependent_projects":6,"dependent_repositories":5,"stars":3,"contributors":1,"subscribers":2,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":26},"versions":[{"versionNumber":"1.0.0","timestamp":"2014-09-28T11:10:47.034Z","trustScore":12,"dependencies":[]},{"versionNumber":"1.0.1","timestamp":"2014-09-29T15:38:43.645Z","trustScore":11,"dependencies":[]},{"versionNumber":"2.0.0","timestamp":"2014-11-04T06:29:44.152Z","trustScore":11,"dependencies":[]},{"versionNumber":"3.0.0","timestamp":"2014-11-27T11:49:34.181Z","trustScore":12,"dependencies":[]},{"versionNumber":"4.0.0","timestamp":"2014-12-17T23:29:54.222Z","trustScore":11,"dependencies":[]},{"versionNumber":"5.0.0","timestamp":"2015-02-13T22:46:20.711Z","trustScore":10,"dependencies":[]},{"versionNumber":"6.0.0","timestamp":"2015-07-04T11:57:13.288Z","trustScore":12,"dependencies":[]},{"versionNumber":"6.1.0","timestamp":"2016-12-21T19:26:57.851Z","trustScore":12,"dependencies":[]},{"versionNumber":"6.1.1","timestamp":"2017-03-08T19:30:43.274Z","trustScore":11,"dependencies":[]},{"versionNumber":"6.1.3","timestamp":"2017-03-09T12:59:14.686Z","trustScore":11,"dependencies":[]},{"versionNumber":"6.2.0","timestamp":"2017-03-15T12:43:50.440Z","trustScore":13,"dependencies":[]},{"versionNumber":"6.3.0","timestamp":"2017-03-15T19:54:04.590Z","trustScore":11,"dependencies":[]},{"versionNumber":"6.4.0","timestamp":"2017-03-15T20:45:40.423Z","trustScore":12,"dependencies":[]},{"versionNumber":"6.4.1","timestamp":"2017-03-15T21:05:09.685Z","trustScore":13,"dependencies":[]},{"versionNumber":"6.4.2","timestamp":"2017-04-06T11:37:02.494Z","trustScore":12,"dependencies":[]},{"versionNumber":"6.4.3","timestamp":"2017-07-02T08:55:21.949Z","trustScore":12,"dependencies":[]},{"versionNumber":"6.5.0","timestamp":"2017-07-15T22:10:04.552Z","trustScore":14,"dependencies":[]},{"versionNumber":"6.5.1","timestamp":"2017-07-26T13:42:07.910Z","trustScore":13,"dependencies":[]},{"versionNumber":"7.0.0","timestamp":"2018-06-08T09:12:15.142Z","trustScore":10,"dependencies":[]},{"versionNumber":"7.0.1","timestamp":"2018-08-31T19:24:00.344Z","trustScore":11,"dependencies":[]},{"versionNumber":"7.0.2","timestamp":"2018-12-20T11:08:57.200Z","trustScore":11,"dependencies":[]},{"versionNumber":"7.0.3","timestamp":"2018-12-21T10:26:45.903Z","trustScore":12,"dependencies":[]},{"versionNumber":"8.0.0","timestamp":"2019-03-05T18:58:23.040Z","trustScore":11,"dependencies":[]},{"versionNumber":"9.0.0","timestamp":"2020-04-10T09:35:09.769Z","trustScore":21,"dependencies":[]},{"versionNumber":"9.1.1","timestamp":"2020-10-13T13:21:55.541Z","trustScore":26,"dependencies":[]},{"versionNumber":"9.2.0","timestamp":"2020-10-20T17:12:40.635Z","trustScore":26,"dependencies":[]}]}},"__N_SSG":true}