{"pageProps":{"postData":{"_id":"5fb067f7a28b82fef5a67a99","id":"ensure-async","crawlTimestamp":"14/11/2020 23:27:49","packageName":"ensure-async","description":"Wrap an async function and ensure it calls its callback on a later tick of the event loop.","repository":{"type":"git","url":"git+https://github.com/kikobeats/ensure-async.git"},"readme":"# ensure-async\n\n![Last version](https://img.shields.io/github/tag/Kikobeats/ensure-async.svg?style=flat-square)\n[![Dependency status](http://img.shields.io/david/Kikobeats/ensure-async.svg?style=flat-square)](https://david-dm.org/Kikobeats/ensure-async)\n[![Dev Dependencies Status](http://img.shields.io/david/dev/Kikobeats/ensure-async.svg?style=flat-square)](https://david-dm.org/Kikobeats/ensure-async#info=devDependencies)\n[![NPM Status](http://img.shields.io/npm/dm/ensure-async.svg?style=flat-square)](https://www.npmjs.org/package/ensure-async)\n[![Gratipay](https://img.shields.io/gratipay/Kikobeats.svg?style=flat-square)](https://gratipay.com/~Kikobeats/)\n\n> Wrap an async function and ensure it calls its callback on a later tick of the event loop. Based on [async#ensureAsync](https://github.com/caolan/async#ensureAsync) as module.\n\n## Install\n\n```bash\nnpm install ensure-async --save\n```\n\nIf you want to use in the browser (powered by [Browserify](http://browserify.org/)):\n\n```bash\nbower install ensure-async --save\n```\n\nand later link in your HTML:\n\n```html\n<script src=\"bower_components/ensure-async/dist/ensure-async.js\"></script>\n```\n\n## Usage\n\n```js\nvar ensureAsync = require('ensure-async');\n\nfunction sometimesAsync(arg, callback) {\n  if (cache[arg]) {\n    return callback(null, cache[arg]); // this would be synchronous!!\n  } else {\n    doSomeIO(arg, callback); // this IO would be asynchronous\n  }\n}\n\n// this has a risk of stack overflows if many results are cached in a row\nasync.mapSeries(args, sometimesAsync, done);\n\n// this will defer sometimesAsync's callback if necessary,\n// preventing stack overflows\nasync.mapSeries(args, ensureAsync(sometimesAsync), done);\n```\n\n## API\n\n### ensureAsync(fn)\n\nWrap an async function and ensure it calls its callback on a later tick of the event loop.  If the function already calls its callback on a next tick, no extra deferral is added. This is useful for preventing stack overflows (`RangeError: Maximum call stack size exceeded`) and generally keeping [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony) contained.\n\n__Arguments__\n\n* `fn` - an async function, one that expects a node-style callback as its last argument\n\nReturns a wrapped function with the exact same call signature as the function passed in.\n\n## License\n\nMIT Â© [Kiko Beats](http://www.kikobeats.com)\n","homepage":"https://github.com/Kikobeats/ensure-async","trustScore":8,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":0,"dependent_repositories":0,"stars":0,"contributors":0,"subscribers":0,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":8},"versions":[{"versionNumber":"0.1.0","timestamp":"2015-07-16T15:14:01.395Z","trustScore":7,"dependencies":[{"packageName":"lodash.restparam","version":"~3.6.1"},{"packageName":"setimmediate","version":"~1.0.2"}]},{"versionNumber":"1.0.0","timestamp":"2015-07-16T15:29:38.042Z","trustScore":8,"dependencies":[{"packageName":"lodash.restparam","version":"~3.6.1"},{"packageName":"setimmediate","version":"~1.0.2"}]}]}},"__N_SSG":true}