{"pageProps":{"postData":{"_id":"5fb0653b4c9226c5e86aee21","id":"is-extended","crawlTimestamp":"14/11/2020 23:16:11","packageName":"is-extended","description":"Module for type detection","repository":{"type":"git","url":"git@github.com:doug-martin/is-extended.git"},"readme":"[![build status](https://secure.travis-ci.org/doug-martin/is-extended.png)](http://travis-ci.org/doug-martin/is-extended)\n\n# is-extended\n\n`is-extended` is a Javascript library that can be used standalone or incorporated into [`extended`](https://github.com/doug-martin/extended)\n\n```javascript\nvar is = require(\"is-extended\");\n```\n\nOr\n\n```javascript\nvar myextended = require(\"extended\")\n\t.register(require(\"is-extended\"));\n```\n\n## Installation\n\n```\nnpm install is-extended\n```\n\nOr [download the source](https://raw.github.com/doug-martin/is-extended/master/index.js) ([minified](https://raw.github.com/doug-martin/is-extended/master/is-extended.min.js))\n\n## Usage\n\n`is-extended` includes the following type coercion methods.\n\n* `isFunction` : Test if something is a function\n* `isObject` : Test if something is an object.\n* `isEmpty` : Test if something is empty.\n* `isHash` : Test if something is a hash.\n\n```javascript\nis.isHash({}); //true\nis.isHash(new Number(1)); //false\n\nis.isObject({}); //true\nis.isObject(new Number(1)); //true\n```\n\n* `isNumber` : Test if something is a number.\n* `isString` : Test if something is a string.\n* `isDate` : Test if something is a `Date`.\n* `isArray` : Test if something is an `Object`\n* `isBoolean` : Test if something is a boolean value.\n* `isUndefined` : Test if something is strictly equal to `undefined`.\n* `isDefined` : Test if something is strictly not equal to `undefined`.\n* `isUndefinedOrNull` : Test if something is strictly equal to `null` or `undefined`.\n* `isNull` : Test if something is strictly equal to `null`.\n* `isArguments` : Test if something is an `Object`\n* `instanceOf` : Test if something is an `Object`\n* `isRegExp` : Test if something is a `RegExp`\n* `isTrue` : Test if something is strictly equal to `true`\n* `isFalse` : Test if something is strictly equal to `false`\n* `isNotNull` : Test if something is strictly not equal to `null`.\n\n**`deepEqual`**\n\nTests if two object are deep equal.\n\n```javascript\n\nis.deepEqual([1,2,3], [1,2,3]); //true\nis([1,2,3]).deepEqual([1,2,3]); //true\n\n\nis.deepEqual({ a: { b: \"c\"}}, {a : false}); //false\nis({ a: { b: \"c\"}}).deepEqual({ a: { b: \"c\"}}); //true\n\n```\n\n\n**`isEq`**\n\nTest if two objects are `==`\n\n**`isNeq`**\n\nTest if two objects are `!=`\n\n**`isSeq`**\n\nTest if two objects are `===`\n\n**`isSneq`**\n\nTest if two objects are `!==`\n\n**`isIn`**\n\nTest if an object is in a array.\n\n```javascript\nis.isIn('a', ['a', 'b', 'c']); //true\n\nis('a').isIn(['a', 'b', 'c']); //true\n```\n\n**`isNotIn`**\n\nTest if something is not in an array.\n\n```javascript\nis.isIn('d', ['a', 'b', 'c']); //true\n\nis('d').isIn(['a', 'b', 'c']); //true\n```\n\n**`isLt`**\n\nCheck if a value is `<` a given value.\n\n```javascript\nis.isLt(1, 2); //true\nis(\"a\").isLt(\"b\"); //true\n```\n\n**`isLte`**\n\nCheck if a value is `<=` a given value.\n\n```javascript\nis.isLte(2, 2); //true\nis(\"a\").isLte(\"b\"); //true\n```\n\n**`isGt`**\n\nCheck if a value is `>` a given value.\n\n```javascript\nis.isGt(2, 1); //true\nis(\"b\").isGt(\"a\"); //true\n```\n\n**`isGte`**\n\nCheck if a value is `>=` a given value.\n\n```javascript\nis.isGte(2, 2); //true\nis(\"b\").isLt(\"a\"); //true\n```\n\n**`isLike`**\n\nCheck if a value is like a given regexp.\n\n```javascript\nis.isLike(\"a\", /a/); //true\nis.isLike(\"a\", \"a\"); //true\nis(1).isLike(/\\d/); //true\nis.isLike(1, \"\\\\d\"); //true\n```\n\n**`isNotLike`**\n\nCheck if a value is not like a given regexp.\n\n```javascript\nis.isNotLike(\"a\", /\\d/); //true\nis(\"a\").isNotLike(\"b\"); //true\n```\n\n**`contains`**\n\nChecks if an array contains a given value.\n\n```javascript\nis.contains([1,2,3], 2); //true\nis([1,2,3]).contains(2); //true\n```\n\n**`notContains`**\n\nChecks if an array does not contain a given value.\n\n```javascript\nis.notContains([1,2,3], 2); //true\nis([1,2,3]).notContains(2); //true\n```\n\n\n## Creating a custom tester.\n\nTo create a custom type tester you can use the `tester` method.\n\n```javascript\nvar tester = is.tester().isArray().isDate().isBoolean().tester();\ntester([]); //true\ntester(new Array()); //true\ntester(new Date()); //true\ntester(true); //true\ntester(false); //true\ntester(new Boolean()); //true\n\ntester(\"hello\"); //false\ntester(); //false\ntester(new String()); //false\ntester({}); //false\ntester(new Object()); //false\n```\n\n## `switcher`\n\nThe `is-exteded` `switcher` method allows you to create a structure that executes certain code when a value passes a test.\n\n```javascript\nvar mySwitcher = is.switcher()\n    .isLt(0, function (num) {\n        return num + \" is lt 0\";\n    })\n    .isLte(5, function (num) {\n        return num + \" is gte 0 lte 5\";\n    })\n    .isLte(10, function (num) {\n        return num + \" is gt 5 lte 10\";\n    })\n    .isGt(10, function (num) {\n        return num + \" is gt 10\";\n    })\n    .def(function (num) {\n        return num + \" is unknown value\";\n    })\n    .switcher();\n\nfor (var i = -1; i < 12; i++) {\n    console.log(mySwitcher(i));\n}\n```\n\n\nOutputs the following\n\n```\n-1 is lt 0\n0 is gte 0 lte 5\n1 is gte 0 lte 5\n2 is gte 0 lte 5\n3 is gte 0 lte 5\n4 is gte 0 lte 5\n5 is gte 0 lte 5\n6 is gt 5 lte 10\n7 is gt 5 lte 10\n8 is gt 5 lte 10\n9 is gt 5 lte 10\n10 is gt 5 lte 10\n11 is gt 10\n```\n\n","homepage":"","trustScore":12,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":0,"dependent_projects":2,"dependent_repositories":3,"stars":0,"contributors":0,"subscribers":0,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":12},"versions":[{"versionNumber":"0.0.1","timestamp":"2013-01-16T21:24:45.735Z","trustScore":11,"dependencies":[{"packageName":"extender","version":"0.0.4"}]},{"versionNumber":"0.0.2","timestamp":"2013-01-19T01:41:59.514Z","trustScore":10,"dependencies":[{"packageName":"extended","version":"0.0.2"}]},{"versionNumber":"0.0.3","timestamp":"2013-01-22T06:21:18.822Z","trustScore":12,"dependencies":[{"packageName":"extended","version":"~0.0.3"}]},{"versionNumber":"0.0.4","timestamp":"2013-02-23T05:41:16.845Z","trustScore":10,"dependencies":[{"packageName":"extended","version":"~0.0.3"}]},{"versionNumber":"0.0.5","timestamp":"2013-04-03T14:59:18.127Z","trustScore":12,"dependencies":[{"packageName":"extended","version":"~0.0.3"}]},{"versionNumber":"0.0.6","timestamp":"2013-04-05T13:31:21.236Z","trustScore":10,"dependencies":[{"packageName":"extended","version":"~0.0.3"}]},{"versionNumber":"0.0.7","timestamp":"2013-04-09T17:21:32.931Z","trustScore":11,"dependencies":[{"packageName":"extended","version":"~0.0.3"}]},{"versionNumber":"0.0.8","timestamp":"2013-04-16T16:14:12.536Z","trustScore":12,"dependencies":[{"packageName":"extended","version":"~0.0.3"}]},{"versionNumber":"0.0.9","timestamp":"2013-06-05T05:40:12.684Z","trustScore":13,"dependencies":[{"packageName":"extended","version":"~0.0.3"}]},{"versionNumber":"0.0.10","timestamp":"2013-06-06T21:34:49.276Z","trustScore":11,"dependencies":[{"packageName":"extended","version":"~0.0.3"}]}]}},"__N_SSG":true}