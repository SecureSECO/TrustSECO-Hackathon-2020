{"pageProps":{"postData":{"_id":"5fb66b349f9e7f16fd324c24","id":"connect-livereload","crawlTimestamp":"19/11/2020 12:55:14","packageName":"connect-livereload","description":"connect middleware for adding the livereload script to the response","repository":{"type":"git","url":"git://github.com/intesso/connect-livereload.git"},"readme":"\nconnect-livereload\n==================\nconnect middleware for adding the livereload script to the response.\nno browser plugin is needed.\nif you are happy with a browser plugin, then you don't need this middleware.\n\n[![NPM](https://nodei.co/npm/connect-livereload.png?downloads=true&downloadRank=true)](https://nodei.co/npm-dl/connect-livereload/)\n\n\n[![Build Status](https://travis-ci.org/intesso/connect-livereload.png)](https://travis-ci.org/intesso/connect-livereload)\n[![Coverage Status](https://coveralls.io/repos/intesso/connect-livereload/badge.svg)](https://coveralls.io/r/intesso/connect-livereload)\n\n\ninstall\n=======\n```bash\nnpm install connect-livereload --save-dev\n```\n\nuse\n===\nnote: if you use this middleware, you should make sure to switch off the Browser LiveReload Extension if you have it installed.\n\nthis middleware can be used with a LiveReload module e.g. [grunt-contrib-connect](https://github.com/gruntjs/grunt-contrib-connect) or [grunt-contrib-watch](https://github.com/gruntjs/grunt-contrib-watch).\n\n`connect-livereload` itself does not serve the `livereload.js` script.\n\nIn your connect or express application add this after the static and before the dynamic routes.\nIf you need liveReload on static html files, then place it before the static routes.\n`ignore` gives you the possibility to ignore certain files or url's from being handled by `connect-livereload`.\n\n## connect/express example\n```javascript\n  app.use(require('connect-livereload')({\n    port: 35729\n  }));\n```\n\nplease see the [examples](https://github.com/intesso/connect-livereload/tree/master/examples) for the app and Grunt configuration.\n\n## options\nOptions are not mandatory: `app.use(require('connect-livereload')());`\nThe Options have to be provided when the middleware is loaded:\n\ne.g.:\n```\n  app.use(require('connect-livereload')({\n    port: 35729,\n    ignore: ['.js', '.svg']\n  }));\n\n```\n\nThese are the available options with the following defaults:\n\n```javascript\n  // `ignore` and `include`: array with strings and regex expressions elements.\n  // strings: included/ignored when the url contains this string\n  // regex: any expression: e.g. starts with pattern: /^.../ ends with pattern: /...$/\n  ignore: [\n    /\\.js(\\?.*)?$/, /\\.css(\\?.*)?$/, /\\.svg(\\?.*)?$/, /\\.ico(\\?.*)?$/, /\\.woff(\\?.*)?$/,\n    /\\.png(\\?.*)?$/, /\\.jpg(\\?.*)?$/, /\\.jpeg(\\?.*)?$/, /\\.gif(\\?.*)?$/, /\\.pdf(\\?.*)?$/\n  ],\n\n  // include all urls by default\n  include: [/.*/],\n\n  // this function is used to determine if the content of `res.write` or `res.end` is html.\n  html: function (str) {\n    if (!str) return false;\n    return /<[:_-\\w\\s\\!\\/\\=\\\"\\']+>/i.test(str);\n  },\n\n  // rules are provided to find the place where the snippet should be inserted.\n  // the main problem is that on the server side it can be tricky to determine if a string will be valid html on the client.\n  // the function `fn` of the first `match` is executed like this `body.replace(rule.match, rule.fn);`\n  // the function `fn` has got the arguments `fn(w, s)` where `w` is the matches string and `s` is the snippet.\n  rules: [{\n    match: /<\\/body>(?![\\s\\S]*<\\/body>)/i,\n    fn: prepend\n  }, {\n    match: /<\\/html>(?![\\s\\S]*<\\/html>)/i,\n    fn: prepend\n  }, {\n    match: /<\\!DOCTYPE.+?>/i,\n    fn: append\n  }],\n\n  // port where the script is loaded\n  port: 35729,\n\n  // location where the script is provided (not by connect-livereload). Change this e.g. when serving livereload with a proxy.\n  src: \"http://localhost:35729/livereload.js?snipver=1\",\n\n  // Set this option to `true` to set `req.headers['accept-encoding']` to 'identity' (disabling compression)\n  disableCompression: false,\n\n  // Locations where livereload plugins are provided (not by connect-livereload).\n  // These plugins should handle being loaded before _or_ after the livereload\n  // script itself (the order is not guaranteed), like\n  // https://github.com/mixmaxhq/livereload-require-js-includes/blob/5a431793d6fdfcf93d66814ddc58338515a3254f/index.js#L40-L45\n  plugins: [\n    \"http://localhost:3001/livereload-require-js-includes/index.js\"\n  ]\n```\n\nplease see the [examples](https://github.com/intesso/connect-livereload/tree/master/examples) for the app and Grunt configuration.\n\n\n## grunt example\n\nThe following example is from an actual Gruntfile that uses [grunt-contrib-connect](https://github.com/gruntjs/grunt-contrib-connect)\n\n```javascript\nconnect: {\n  options: {\n    port: 3000,\n    hostname: 'localhost'\n  },\n  dev: {\n    options: {\n      middleware: function (connect) {\n        return [\n          require('connect-livereload')(), // <--- here\n          checkForDownload,\n          mountFolder(connect, '.tmp'),\n          mountFolder(connect, 'app')\n        ];\n      }\n    }\n  }\n}\n```\nFor use as middleware in grunt simply add the following to the **top** of your array of middleware.\n\n```javascript\n  require('connect-livereload')(),\n```\nYou can pass in options to this call if you do not want the defaults.\n\n`dev` is simply the name of the server being used with the task `grunt connect:dev`. The other items in the `middleware` array are all functions that either are of the form `function (req, res, next)` like `checkForDownload` or return that like `mountFolder(connect, 'something')`.\n\nalternative\n===========\nAn alternative would be to install the [LiveReload browser plugin](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei).\n\n\ncredits\n=======\n* The initial middleware code was mainly extracted from: [grunt-contrib-livereload/util.js](https://github.com/gruntjs/grunt-contrib-livereload/blob/master/lib/utils.js)\n* [LiveReload Creator](http://livereload.com/)\n\ntests\n=====\nrun the tests with\n```\nmocha\n```\n\nlicense\n=======\n[MIT License](https://github.com/intesso/connect-livereload/blob/master/LICENSE)\n","homepage":"https://github.com/intesso/connect-livereload#readme","trustScore":22,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":0,"dependent_projects":6,"dependent_repositories":5,"stars":2,"contributors":1,"subscribers":1,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":22},"versions":[{"versionNumber":"0.0.2","timestamp":"2013-04-16T07:33:44.589Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.0.3","timestamp":"2013-04-19T08:47:35.171Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.1.0","timestamp":"2013-04-23T09:27:33.380Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.1.1","timestamp":"2013-05-01T09:33:06.882Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.1.2","timestamp":"2013-05-04T18:21:45.604Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.1.3","timestamp":"2013-05-05T20:16:43.201Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.1.4","timestamp":"2013-05-18T18:42:15.324Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.2.0","timestamp":"2013-06-04T13:01:26.578Z","trustScore":8,"dependencies":[]},{"versionNumber":"0.3.0","timestamp":"2013-09-12T15:50:40.112Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.3.1","timestamp":"2013-12-11T08:18:38.587Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.3.2","timestamp":"2014-01-04T16:06:19.053Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.4.0","timestamp":"2014-04-11T15:49:47.026Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.4.1","timestamp":"2014-10-16T14:27:31.987Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.5.0","timestamp":"2014-10-16T14:37:41.472Z","trustScore":12,"dependencies":[]},{"versionNumber":"0.5.1","timestamp":"2014-11-24T17:13:35.573Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.5.2","timestamp":"2014-11-25T20:14:45.551Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.5.3","timestamp":"2015-02-13T07:50:26.480Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.5.4","timestamp":"2015-11-24T21:01:41.874Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.6.0","timestamp":"2016-09-12T19:45:52.034Z","trustScore":9,"dependencies":[]},{"versionNumber":"0.6.1","timestamp":"2018-12-20T13:42:58.845Z","trustScore":22,"dependencies":[]}]}},"__N_SSG":true}