{"pageProps":{"postData":{"_id":"5fb669959f9e7f16fd324adc","id":"fs.extra","crawlTimestamp":"19/11/2020 12:48:20","packageName":"fs.extra","description":"fs.move and fs.copy for Node.JS","repository":{"type":"git","url":"git://github.com/coolaj86/utile-fs.git"},"readme":"fs.extra\n===\n\nExtra file utilities for node.js\n\n**Includes**\n\n* `copy`\n* `copyRecursive`\n* `mkdirp`\n* `move`\n* `walk`\n* `rmrf`\n\n**Install**\n\n``` bash\nnpm install --save fs.extra\n````\n\n**Usage**\n\n```javascript\n// this will have all of a copy of the normal fs methods as well\nvar fs = require('fs.extra');\n```\n\nfs.copy\n===\n\nCreates an `fs.readStream` and `fs.writeStream` and uses `util.pump` to efficiently copy.\n\n```javascript\nfs.copy('foo.txt', 'bar.txt', { replace: false }, function (err) {\n  if (err) {\n    // i.e. file already exists or can't write to directory\n    throw err;\n  }\n\n  console.log(\"Copied 'foo.txt' to 'bar.txt');\n});\n```\n\nOptions are optional. `replace` defaults to false, but will replace existing files if set to `true`.\n\nfs.copyRecursive\n===\n\nBasically a local `rsync`, uses `fs.copy` to recursively copy files and folders (with correct permissions).\n\n```javascript\nfs.copyRecursive('./foo', './bar', function (err) {\n  if (err) {\n    throw err;\n  }\n\n  console.log(\"Copied './foo' to './bar');\n});\n```\n\nfs.mkdirRecursive\n===\n\nIncluded from <https://github.com/substack/node-mkdirp>\n\n```javascript\n// fs.mkdirp(path, mode=(0777 & (~process.umask())), cb);\n\nfs.mkdirp('/tmp/foo/bar/baz', function (err) {\n  if (err) {\n    console.error(err);\n  } else {\n    console.log('pow!')\n  }\n});\n```\n\nfs.mkdirRecursiveSync\n===\n\nIncluded from <https://github.com/substack/node-mkdirp>\n\n```javascript\n// fs.mkdirpSync(path, mode=(0777 & (~process.umask())));\n\ntry {\n  fs.mkdirpSync('/tmp/foo/bar/baz');\n} catch(e) {\n  throw e;\n}\n```\n\nfs.move\n===\n\nAttempts `fs.rename`, then tries `fs.copy` + `fs.unlink` before failing.\n\n```javascript\nfs.move('foo.txt', 'bar.txt', function (err) {\n  if (err) {\n    throw err;\n  }\n\n  console.log(\"Moved 'foo.txt' to 'bar.txt');\n});\n```\n\nfs.rmRecursive\n===\n\nIncluded from <https://github.com/jprichardson/node-fs-extra>\n\nRecursively deletes a directory (like `rm -rf`)\n\n```javascript\n// fs.rmrf(dir, callback);\n\nfs.rmrf('/choose/me/carefully/', function (err) {\n  if (err) {\n    console.error(err);\n  }\n});\n```\n\nfs.rmRecursiveSync\n===\n\nIncluded from <https://github.com/jprichardson/node-fs-extra>\n\nRecursively deletes a directory (like `rm -rf`)\n\n```javascript\n// fs.rmrfSync(dir);\n\nfs.rmrfSync('/choose/me/carefully/');\n```\n\nfs.walk\n===\n\nSee <https://github.com/coolaj86/node-walk>\n\n```javascript\nvar walker = fs.walk(dir)\n  ;\n\n// file, files, directory, directories\nwalker.on(\"file\", function (root, stat, next) {\n  var filepath = path.join(root, stat.name)\n    ;\n\n  console.log(filepath);\n});\n```\n\nAliases and Backwards Compatibility\n===\n\nFor the sake of backwards compatability, you can call the recursive functions with their names as such\n\n    fs.remove <- fs.rmRecursive <- fs.rmrf\n    fs.removeSync <- fs.rmRecursiveSync <- fs.rmrfSync\n    fs.mkdirRecursive <- fs.mkdirp\n    fs.mkdirRecursiveSync <- fs.mkdirpSync\n\nLicense\n===\n\nCopyright AJ ONeal 2011-2015\n\nThis project is available under the MIT and Apache v2 licenses.\n\n  * http://www.opensource.org/licenses/mit-license.php\n  * http://www.apache.org/licenses/LICENSE-2.0.html\n","homepage":"https://github.com/coolaj86/utile-fs","trustScore":17,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":6,"dependent_repositories":3,"stars":1,"contributors":0,"subscribers":0,"all_prereleases":0,"any_outdated_dependencies":-1,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":17},"versions":[{"versionNumber":"1.0.0","timestamp":"2011-11-10T07:39:10.302Z","trustScore":8,"dependencies":[]},{"versionNumber":"1.0.1","timestamp":"2012-01-04T19:52:37.236Z","trustScore":8,"dependencies":[]},{"versionNumber":"1.1.1","timestamp":"2012-05-23T01:31:05.339Z","trustScore":8,"dependencies":[{"packageName":"mkdirp","version":"0.3.x"},{"packageName":"fs-extra","version":"0.0.x"},{"packageName":"walk","version":"2.x"}]},{"versionNumber":"1.1.2","timestamp":"2012-06-02T17:52:23.553Z","trustScore":8,"dependencies":[{"packageName":"mkdirp","version":"0.3.x"},{"packageName":"fs-extra","version":"0.0.x"},{"packageName":"walk","version":"2.x"}]},{"versionNumber":"1.1.3","timestamp":"2012-06-03T02:49:07.400Z","trustScore":8,"dependencies":[{"packageName":"mkdirp","version":"0.3.x"},{"packageName":"fs-extra","version":"0.1.x"},{"packageName":"walk","version":"2.x"}]},{"versionNumber":"1.1.5","timestamp":"2012-07-13T07:19:38.039Z","trustScore":8,"dependencies":[{"packageName":"mkdirp","version":"0.3.x"},{"packageName":"fs-extra","version":"0.1.x"},{"packageName":"walk","version":"2.x"}]},{"versionNumber":"1.2.0","timestamp":"2012-07-26T05:42:05.124Z","trustScore":8,"dependencies":[{"packageName":"mkdirp","version":"0.3.x"},{"packageName":"fs-extra","version":"0.1.2"},{"packageName":"walk","version":"2.x"}]},{"versionNumber":"1.2.1","timestamp":"2013-05-29T03:36:29.716Z","trustScore":8,"dependencies":[{"packageName":"mkdirp","version":"~0.3.5"},{"packageName":"fs-extra","version":"~0.6.1"},{"packageName":"walk","version":"~2.2.1"}]},{"versionNumber":"1.3.0","timestamp":"2015-01-09T18:53:03.103Z","trustScore":7,"dependencies":[{"packageName":"mkdirp","version":"~0.3.5"},{"packageName":"fs-extra","version":"~0.6.1"},{"packageName":"walk","version":"~2.2.1"}]},{"versionNumber":"1.3.2","timestamp":"2015-01-15T19:48:15.706Z","trustScore":17,"dependencies":[{"packageName":"fs-extra","version":"~0.6.1"},{"packageName":"mkdirp","version":"~0.3.5"},{"packageName":"walk","version":"^2.3.9"}]}]}},"__N_SSG":true}