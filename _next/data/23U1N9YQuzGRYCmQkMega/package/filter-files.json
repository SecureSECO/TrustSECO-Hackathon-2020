{"pageProps":{"postData":{"_id":"5fb066eda28b82fef5a679d3","id":"filter-files","crawlTimestamp":"14/11/2020 23:23:23","packageName":"filter-files","description":"Recursively read directories and return a list of files, filtered to have only the files for which the (optional) filter function returns `true`. Sync and async.","repository":{"type":"git","url":"git://github.com/jonschlinkert/filter-files.git"},"readme":"# filter-files [![NPM version](https://badge.fury.io/js/filter-files.svg)](http://badge.fury.io/js/filter-files)\n\n> Recursively read directories and return a list of files, filtered to have only the files for which the (optional) filter function returns `true`. Sync and async.\n\n## Install\n### Install with [npm](npmjs.org)\n\n```bash\nnpm i filter-files --save\n```\n\n## Run tests\n\n```bash\nnpm test\n```\n\n## Usage\n\n```js\nvar filter = require('filter-files');\n```\n\n### sync\n\n```js\nfilter.sync(dir, [recurse], [filterFn]);\n```\n**Params**\n\n - `dir` **{String}**: the directory to start from. Returns all files, recursively, starting with this path.\n - `filterFn` **{Function}**: optionally pass a filter function to use for filtering files/dirs. This function filters \"on the fly\", so recursion is very fast.\n - `recurse` **{Boolean}**: pass `false` to disable recursion.\n\n**Examples**\n\n```js\nvar files = filter.sync('lib');\nconsole.log(files);\n//=> [ 'lib/async.js', 'lib/filter.js', 'lib/sync.js' ]\n```\n\nPass a filter function:\n\n```js\nfilter.sync('lib', function(fp) {\n  return /a/.test(fp);\n});\n//=> [ 'lib/async.js' ]\n```\n\nOr an array of filter functions:\n\n```js\nfunction include(fp) {\n  return /^\\./.test(fp);\n}\nfunction exclude(fp) {\n  return !/^\\.[jntv]/.test(fp);\n}\n\n// pass `false` to prevent recursion\nfilter('.', [include, exclude], false);\n//=> ['.git', '.gitignore', '.gitattribuets']\n```\n\n### async\n\n```js\nfilter(dir, [recurse], [filterFn], callback));\n```\n**Params**\n\nSame as sync with the addition of `callback`.\n\n**Examples**\n\n```js\nfilter('lib', function(err, files) {\n  console.log(files);\n  //=> [ 'lib/async.js', 'lib/filter.js', 'lib/sync.js' ]\n});\n```\n\nPass a filter function:\n\n```js\nvar fn = function(fp) {\n  return /a/.test(fp);\n};\n\nfilter('lib', fn, function(err, files) {\n  console.log(files);\n  //=> [ 'lib/async.js' ]\n});\n```\n\n### Filtering\n\nFilter functions take four parameters and return `true` or `false`.\n\n**Params**\n\n - `fp` filepath being looped over\n - `dir` current directory\n - `files` accumulated array of files\n - `recurse` whether recurse is `true` or `false`\n\n**Example**\n\nThis function returns a filter function for getting files with the given `extname`:\n\n```js\nvar path = require('path');\nvar isDir = require('is-directory');\n\nfunction ext(extname) {\n  // this is our filter function\n  return function filter(fp, dir, files, recurse) {\n    if (isDir(path.join(dir, fp)) && recurse === true) {\n      return true;\n    }\n    return path.extname(fp) === extname;\n  }\n}\n```\n\nSee [the tests](./test/test.js) for more examples.\n\n\n## Contributing\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/filter-files/issues).\n\n## Author\n\n**Jon Schlinkert**\n \n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert) \n\n## License\nCopyright (c) 2014 Jon Schlinkert  \nReleased under the MIT license\n\n***\n\n_This file was generated by [verb](https://github.com/assemble/verb) on November 17, 2014._","homepage":"https://github.com/jonschlinkert/filter-files","trustScore":13,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":0,"dependent_projects":4,"dependent_repositories":2,"stars":1,"contributors":0,"subscribers":0,"all_prereleases":0,"any_outdated_dependencies":-1,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":13},"versions":[{"versionNumber":"0.1.0","timestamp":"2014-10-29T23:36:16.455Z","trustScore":14,"dependencies":[{"packageName":"is-directory","version":"^0.2.2"}]},{"versionNumber":"0.2.0","timestamp":"2014-10-30T05:28:15.037Z","trustScore":14,"dependencies":[{"packageName":"async","version":"^0.9.0"},{"packageName":"is-directory","version":"^0.2.2"}]},{"versionNumber":"0.2.1","timestamp":"2014-10-30T05:41:50.647Z","trustScore":14,"dependencies":[{"packageName":"async","version":"^0.9.0"},{"packageName":"is-directory","version":"^0.2.2"}]},{"versionNumber":"0.2.2","timestamp":"2014-10-30T05:44:16.325Z","trustScore":12,"dependencies":[{"packageName":"async","version":"^0.9.0"},{"packageName":"is-directory","version":"^0.2.2"}]},{"versionNumber":"0.2.3","timestamp":"2014-10-30T07:47:49.170Z","trustScore":12,"dependencies":[{"packageName":"async","version":"^0.9.0"},{"packageName":"is-directory","version":"^0.2.2"}]},{"versionNumber":"0.2.4","timestamp":"2014-10-30T07:53:09.951Z","trustScore":13,"dependencies":[{"packageName":"async","version":"^0.9.0"},{"packageName":"is-directory","version":"^0.2.2"}]},{"versionNumber":"0.2.5","timestamp":"2014-11-13T11:56:17.924Z","trustScore":12,"dependencies":[{"packageName":"async","version":"^0.9.0"},{"packageName":"is-directory","version":"^0.2.2"}]},{"versionNumber":"0.3.0","timestamp":"2014-11-15T15:18:58.127Z","trustScore":13,"dependencies":[{"packageName":"async","version":"^0.9.0"},{"packageName":"is-directory","version":"^0.2.2"}]},{"versionNumber":"0.3.1","timestamp":"2014-11-17T08:58:25.923Z","trustScore":11,"dependencies":[{"packageName":"async","version":"^0.9.0"},{"packageName":"is-directory","version":"^0.2.2"}]},{"versionNumber":"0.4.0","timestamp":"2014-11-17T12:29:46.980Z","trustScore":14,"dependencies":[{"packageName":"async","version":"^0.9.0"},{"packageName":"is-directory","version":"^0.2.2"}]}]}},"__N_SSG":true}