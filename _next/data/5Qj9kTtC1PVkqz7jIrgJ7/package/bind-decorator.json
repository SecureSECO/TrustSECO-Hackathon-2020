{"pageProps":{"postData":{"_id":"5fb668169f9e7f16fd3249ae","id":"bind-decorator","crawlTimestamp":"19/11/2020 12:41:56","packageName":"bind-decorator","description":"The fastest automatic method.bind(this) decorator","repository":{"type":"git","url":"git+https://github.com/NoHomey/bind-decorator.git"},"readme":"# bind-decorator\n\nContext method binding decorator.\n\n[![npm version](https://badge.fury.io/js/bind-decorator.svg)](https://badge.fury.io/js/bind-decorator)\n[![license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/NoHomey/bind-decorator)\n[![Build Status](https://semaphoreci.com/api/v1/nohomey/bind-decorator/branches/master/badge.svg)](https://semaphoreci.com/nohomey/bind-decorator)\n[![Code Climate](https://codeclimate.com/github/NoHomey/bind-decorator/badges/gpa.svg)](https://codeclimate.com/github/NoHomey/bind-decorator)\n[![Test Coverage](https://codeclimate.com/github/NoHomey/bind-decorator/badges/coverage.svg)](https://codeclimate.com/github/NoHomey/bind-decorator/coverage)\n[![Issue Count](https://codeclimate.com/github/NoHomey/bind-decorator/badges/issue_count.svg)](https://codeclimate.com/github/NoHomey/bind-decorator)\n![TypeScript](https://img.shields.io/badge/%3C%20%2F%3E-TypeScript-blue.svg)\n![Typings](https://img.shields.io/badge/typings-%E2%9C%93-brightgreen.svg)\n\n`@bind` is just a little faster version of [`@autobind`](https://github.com/andreypopp/autobind-decorator/blob/master/src/index.js) for decorating methods only, by binding them to the current context. It is written in TypeScript and follows the latest `decorator`s [proposal](http://tc39.github.io/proposal-decorators/).\n\n- It will `throw` exceptions if decorating anything other than `function`;\n- Since the implementation follows the latest `decorator`s [proposal](http://tc39.github.io/proposal-decorators/) where compartion betweeen `this` and `target` can not be trusted, `@bind` will always `return` a `configurable`, `get accessor propertyDescriptor` which will memomize the result of `descriptor.value.bind(this)` by re-defining the property descriptor of the method beeing decorated (Credits goes to [autobind-decorator](https://github.com/andreypopp/autobind-decorator/blob/master/src/index.js) for memoizing the result).\n\nIf you are looking for not just method decorator but rather full class bounding decorator check [`@autobind`](https://github.com/andreypopp/autobind-decorator/blob/master/src/index.js).\n\n# Install\n\nInstall with npm:\n\n```bash\n$ npm install bind-decorator\n```\n\n[![NPM](https://nodei.co/npm/bind-decorator.png?downloads=true&stars=true)](https://nodei.co/npm/bind-decorator/)\n\n# Usage\n\n## In JavaScript\n\n```javascript\nimport bind from 'bind-decorator';\n\nclass Test {\n    static what = 'static';\n    \n    @bind\n    static test() {\n        console.log(this.what);\n    }\n\n    constructor(what) {\n        this.what = what;\n    }\n\n    @bind\n    test() {\n        console.warn(this.what);\n    }\n}\n\nconst tester = new Test('bind');\nconst { test } = tester;\ntester.test(); // warns 'bind'.\ntest(); // warns 'bind'.\nTest.test(); // logs 'static'.\n```\n\n## In TypeScript\n\n```typescript\nimport bind from 'bind-decorator';\n\nclass Test {\n    public static what: string = 'static';\n    \n    @bind\n    public static test(): void {\n        console.log(this.what);\n    }\n\n    public constructor(public what: string) {\n        this.what = what;\n    }\n\n    @bind\n    public test(): void {\n        console.warn(this.what);\n    }\n}\n\nconst tester: Test = new Test('bind');\nconst { test } = tester;\ntester.test(); // warns 'bind'.\ntest(); // warns 'bind'.\nTest.test(); // logs 'static'.\n```\n\n# Testing\n\n1. `npm install`\n\n2. `npm test`\n\n# Contributing\n\n1. `npm install`\n\n2. Make changes\n\n3. If necessary add some tests to `__tests__`\n\n4. `npm test`\n\n5. Make a Pull Request","homepage":"https://github.com/NoHomey/bind-decorator#readme","trustScore":15,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":2,"dependent_repositories":2,"stars":2,"contributors":0,"subscribers":1,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":15},"versions":[{"versionNumber":"0.0.1-pre","timestamp":"2016-09-07T11:06:36.331Z","trustScore":7,"dependencies":[]},{"versionNumber":"1.0.0","timestamp":"2016-09-07T22:43:01.148Z","trustScore":6,"dependencies":[]},{"versionNumber":"1.0.1","timestamp":"2016-09-07T22:45:55.587Z","trustScore":8,"dependencies":[]},{"versionNumber":"1.0.2","timestamp":"2016-09-08T06:40:17.283Z","trustScore":7,"dependencies":[]},{"versionNumber":"1.0.3","timestamp":"2016-09-08T15:28:08.690Z","trustScore":7,"dependencies":[]},{"versionNumber":"1.0.4","timestamp":"2016-09-12T08:35:42.736Z","trustScore":7,"dependencies":[]},{"versionNumber":"1.0.5","timestamp":"2016-09-12T09:03:30.455Z","trustScore":7,"dependencies":[]},{"versionNumber":"1.0.6","timestamp":"2016-09-13T13:51:55.405Z","trustScore":6,"dependencies":[]},{"versionNumber":"1.0.7","timestamp":"2016-09-20T18:19:12.129Z","trustScore":6,"dependencies":[]},{"versionNumber":"1.0.8","timestamp":"2016-10-18T21:19:54.527Z","trustScore":7,"dependencies":[]},{"versionNumber":"1.0.9","timestamp":"2016-10-19T12:22:41.344Z","trustScore":7,"dependencies":[]},{"versionNumber":"1.0.10","timestamp":"2016-10-19T12:30:00.077Z","trustScore":7,"dependencies":[]},{"versionNumber":"1.0.11","timestamp":"2017-07-20T07:29:24.136Z","trustScore":15,"dependencies":[]}]}},"__N_SSG":true}