{"pageProps":{"postData":{"_id":"5fb66bb39f9e7f16fd324c80","id":"through2-map","crawlTimestamp":"19/11/2020 12:57:22","packageName":"through2-map","description":"A through2 to create an Array.prototype.map analog for streams.","repository":{"type":"git","url":"git+ssh://git@github.com/brycebaril/through2-map.git"},"readme":"through2-map\n============\n\n[![NPM](https://nodei.co/npm/through2-map.png)](https://nodei.co/npm/through2-map/)\n\nThis is a super thin wrapper around [through2](http://npm.im/through2) that works like `Array.prototype.map` but for streams.\n\nFor when through2 is just too verbose :wink:\n\nNote you will **NOT** be able to skip chunks. This is intended for modification only. If you want filter the stream content, use either `through2` or `through2-filter`. This transform also does not have a `flush` function.\n\n**IMPORTANT:** If you return `null` from your function, the stream will end there.\n\n```js\n\nvar map = require(\"through2-map\")\n\nvar truncate = map(function (chunk) {\n  return chunk.slice(0, 10)\n})\n\n// vs. with through2:\nvar truncate = through2(function (chunk, encoding, callback) {\n  this.push(chunk.slice(0, 10))\n  return callback()\n})\n\n// Then use your map:\nsource.pipe(truncate).pipe(sink)\n\n// Additionally accepts `wantStrings` argument to convert buffers into strings\nvar stripTags = map({wantStrings: true}, function (str) {\n  // OMG don't actually use this\n  return str.replace(/<.*?>/g, \"\")\n})\n\n// Works like `Array.prototype.map` meaning you can specify a function that\n// takes up to two* arguments: fn(chunk, index)\nvar spaceout = map({wantStrings: true}, function (chunk, index) {\n  return (index % 2 == 0) ? chunk + \"\\n\\n\" : chunk\n})\n\n// vs. with through2:\nvar spaceout = through2(function (chunk, encoding, callback) {\n  if (this.index == undefined) this.index = 0\n  var buf = (this.index++ % 2 == 0) ? Buffer.concat(chunk, new Buffer(\"\\n\\n\")) : chunk\n  this.push(buf)\n  return callback()\n})\n\n```\n\n*Differences from `Array.prototype.map`:\n  * Cannot insert `null` elements into the stream without aborting.\n  * No third `array` callback argument. That would require realizing the entire stream, which is generally counter-productive to stream operations.\n  * `Array.prototype.map` doesn't modify the source Array, which is somewhat nonsensical when applied to streams.\n\nAPI\n---\n\n```\nrequire(\"through2-map\")([options,] fn)\n```\n\nCreate a `stream.Transform` instance that will call `fn(chunk, index)` on each stream segment.\n\n- - -\n\n```\nvar Tx = require(\"through2-map\").ctor([options,] fn)\n```\n\nCreate a reusable `stream.Transform` TYPE that can be called via `new Tx` or `Tx()` to create an instance.\n\n- - -\n\n```\nrequire(\"through2-map\").obj([options,] fn)\n```\n\nCreate a `through2-map` instance that defaults to `objectMode: true`.\n\n- - -\n\n```\nrequire(\"through2-map\").objCtor([options,] fn)\n```\n\nJust like ctor, but with `objectMode: true` defaulting to true.\n\nOptions\n-------\n\n  * wantStrings: Automatically call chunk.toString() for the super lazy.\n  * all other through2 options\n\nLICENSE\n=======\n\nMIT\n","homepage":"https://github.com/brycebaril/through2-map#readme","trustScore":16,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":4,"dependent_repositories":3,"stars":2,"contributors":0,"subscribers":0,"all_prereleases":0,"any_outdated_dependencies":-1,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":16},"versions":[{"versionNumber":"1.0.0","timestamp":"2013-08-06T05:12:20.429Z","trustScore":7,"dependencies":[{"packageName":"through2","version":"~0.1.0"},{"packageName":"concat-stream","version":"~1.0.0"}]},{"versionNumber":"1.0.1","timestamp":"2013-08-06T05:14:34.407Z","trustScore":8,"dependencies":[{"packageName":"through2","version":"~0.1.0"},{"packageName":"concat-stream","version":"~1.0.0"}]},{"versionNumber":"1.0.2","timestamp":"2013-08-06T05:18:42.091Z","trustScore":8,"dependencies":[{"packageName":"through2","version":"~0.1.0"}]},{"versionNumber":"1.1.0","timestamp":"2013-08-07T06:34:55.255Z","trustScore":8,"dependencies":[{"packageName":"through2","version":"~0.1.0"}]},{"versionNumber":"1.2.0","timestamp":"2013-09-20T17:46:45.107Z","trustScore":8,"dependencies":[{"packageName":"through2","version":"~0.2.2"}]},{"versionNumber":"1.2.1","timestamp":"2013-12-13T19:07:49.824Z","trustScore":7,"dependencies":[{"packageName":"through2","version":"~0.2.3"},{"packageName":"terminus","version":"~1.0.4"}]},{"versionNumber":"1.3.0","timestamp":"2014-06-04T18:04:09.195Z","trustScore":7,"dependencies":[{"packageName":"terminus","version":"~1.0.8"},{"packageName":"through2","version":"~0.4.1"},{"packageName":"xtend","version":"^3.0.0"}]},{"versionNumber":"1.4.0","timestamp":"2014-06-10T07:07:38.316Z","trustScore":6,"dependencies":[{"packageName":"terminus","version":"~1.0.10"},{"packageName":"through2","version":"~0.5.1"},{"packageName":"xtend","version":"^3.0.0"}]},{"versionNumber":"2.0.0","timestamp":"2015-06-17T06:45:28.251Z","trustScore":7,"dependencies":[{"packageName":"through2","version":"~2.0.0"},{"packageName":"xtend","version":"^4.0.0"}]},{"versionNumber":"3.0.0","timestamp":"2016-11-05T18:50:49.365Z","trustScore":16,"dependencies":[{"packageName":"through2","version":"~2.0.0"},{"packageName":"xtend","version":"^4.0.0"}]}]}},"__N_SSG":true}