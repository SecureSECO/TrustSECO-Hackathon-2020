{"pageProps":{"postData":{"_id":"5fb6666f9f9e7f16fd324862","id":"each-async","crawlTimestamp":"19/11/2020 12:34:54","packageName":"each-async","description":"Async concurrent iterator (async forEach)","repository":{"type":"git","url":"https://github.com/sindresorhus/each-async"},"readme":"# each-async [![Build Status](https://travis-ci.org/sindresorhus/each-async.svg?branch=master)](https://travis-ci.org/sindresorhus/each-async)\n\n> Async concurrent iterator (async forEach)\n\nLike [async.each()](https://github.com/caolan/async#eacharr-iterator-callback), but tiny.\n\nI often use `async.each()` for doing async operations when iterating, but I almost never use the other gadzillion methods in `async`.\n\nAsync iteration is one of the most used async control flow patterns.\n\n\n## Install\n\n```sh\n$ npm install --save each-async\n```\n\n\n## Usage\n\n```js\nvar eachAsync = require('each-async');\n\neachAsync(['foo','bar','baz'], function (item, index, done) {\n\tconsole.log(item, index);\n\tdone();\n}, function (error) {\n\tconsole.log('finished');\n});\n//=> foo 0\n//=> bar 1\n//=> baz 2\n//=> finished\n```\n\n\n## API\n\n### eachAsync(array, callback, finishedCallback)\n\n#### array\n\nThe array you want to iterate.\n\n#### callback(item, index, done)\n\nA function which is called for each item in the array with the following arguments:\n\n- `item`: the current item in the array\n- `index`: the current index\n- `done([error])`: call this when you're done with an optional error. Supplying anything other than `undefined`/`null` will stop the iteration.\n\nNote that order is not guaranteed since each item is handled concurrently.\n\n#### finishedCallback(error)\n\nA function which is called when the iteration is finished or on the first error. First argument is the error passed from `done()` in the `callback`.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n","homepage":"https://github.com/sindresorhus/each-async","trustScore":19,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":4,"dependent_repositories":5,"stars":2,"contributors":0,"subscribers":1,"all_prereleases":0,"any_outdated_dependencies":-1,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":19},"versions":[{"versionNumber":"0.1.0","timestamp":"2013-12-01T23:08:07.082Z","trustScore":8,"dependencies":[]},{"versionNumber":"0.1.1","timestamp":"2013-12-07T02:47:15.261Z","trustScore":9,"dependencies":[]},{"versionNumber":"0.1.2","timestamp":"2014-02-07T15:51:39.737Z","trustScore":8,"dependencies":[]},{"versionNumber":"0.1.3","timestamp":"2014-04-29T19:23:06.653Z","trustScore":9,"dependencies":[]},{"versionNumber":"1.0.0","timestamp":"2014-08-13T17:54:11.996Z","trustScore":9,"dependencies":[{"packageName":"onetime","version":"^1.0.0"}]},{"versionNumber":"1.1.0","timestamp":"2014-09-20T21:19:39.788Z","trustScore":10,"dependencies":[{"packageName":"onetime","version":"^1.0.0"},{"packageName":"setimmediate","version":"^1.0.2"}]},{"versionNumber":"1.1.1","timestamp":"2014-12-29T09:45:08.863Z","trustScore":19,"dependencies":[{"packageName":"onetime","version":"^1.0.0"},{"packageName":"set-immediate-shim","version":"^1.0.0"}]}]}},"__N_SSG":true}