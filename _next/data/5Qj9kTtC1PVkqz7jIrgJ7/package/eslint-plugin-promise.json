{"pageProps":{"postData":{"_id":"5fb667f09f9e7f16fd324990","id":"eslint-plugin-promise","crawlTimestamp":"19/11/2020 12:41:19","packageName":"eslint-plugin-promise","description":"Enforce best practices for JavaScript promises","repository":{"type":"git","url":"git+ssh://git@github.com/xjamundx/eslint-plugin-promise.git"},"readme":"# eslint-plugin-promise\n\nEnforce best practices for JavaScript promises.\n\n[![travis-ci](https://travis-ci.org/xjamundx/eslint-plugin-promise.svg)](https://travis-ci.org/xjamundx/eslint-plugin-promise)\n[![npm version](https://badge.fury.io/js/eslint-plugin-promise.svg)](https://www.npmjs.com/package/eslint-plugin-promise)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [Rules](#rules)\n- [Maintainers](#maintainers)\n- [License](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installation\n\nYou'll first need to install [ESLint](http://eslint.org):\n\n```\n$ npm install eslint --save-dev\n```\n\nNext, install `eslint-plugin-promise`:\n\n```\n$ npm install eslint-plugin-promise --save-dev\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag) then you must\nalso install `eslint-plugin-promise` globally.\n\n## Usage\n\nAdd `promise` to the plugins section of your `.eslintrc.json` configuration\nfile. You can omit the `eslint-plugin-` prefix:\n\n```json\n{\n  \"plugins\": [\"promise\"]\n}\n```\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n  \"rules\": {\n    \"promise/always-return\": \"error\",\n    \"promise/no-return-wrap\": \"error\",\n    \"promise/param-names\": \"error\",\n    \"promise/catch-or-return\": \"error\",\n    \"promise/no-native\": \"off\",\n    \"promise/no-nesting\": \"warn\",\n    \"promise/no-promise-in-callback\": \"warn\",\n    \"promise/no-callback-in-promise\": \"warn\",\n    \"promise/avoid-new\": \"warn\",\n    \"promise/no-new-statics\": \"error\",\n    \"promise/no-return-in-finally\": \"warn\",\n    \"promise/valid-params\": \"warn\"\n  }\n}\n```\n\nor start with the recommended rule set:\n\n```json\n{\n  \"extends\": [\"plugin:promise/recommended\"]\n}\n```\n\n## Rules\n\n| rule                                                     | description                                                                      | recommended | fixable  |\n| -------------------------------------------------------- | -------------------------------------------------------------------------------- | ----------- | -------- |\n| [`catch-or-return`][catch-or-return]                     | Enforces the use of `catch()` on un-returned promises.                           | :bangbang:  |          |\n| [`no-return-wrap`][no-return-wrap]                       | Avoid wrapping values in `Promise.resolve` or `Promise.reject` when not needed.  | :bangbang:  |          |\n| [`param-names`][param-names]                             | Enforce consistent param names and ordering when creating new promises.          | :bangbang:  |          |\n| [`always-return`][always-return]                         | Return inside each `then()` to create readable and reusable Promise chains.      | :bangbang:  |          |\n| [`no-native`][no-native]                                 | In an ES5 environment, make sure to create a `Promise` constructor before using. |             |          |\n| [`no-nesting`][no-nesting]                               | Avoid nested `then()` or `catch()` statements                                    | :warning:   |          |\n| [`no-promise-in-callback`][no-promise-in-callback]       | Avoid using promises inside of callbacks                                         | :warning:   |          |\n| [`no-callback-in-promise`][no-callback-in-promise]       | Avoid calling `cb()` inside of a `then()` (use [nodeify][] instead)              | :warning:   |          |\n| [`avoid-new`][avoid-new]                                 | Avoid creating `new` promises outside of utility libs (use [pify][] instead)     |             |          |\n| [`no-new-statics`][no-new-statics]                       | Avoid calling `new` on a Promise static method                                   | :bangbang:  | :wrench: |\n| [`no-return-in-finally`][no-return-in-finally]           | Disallow return statements in `finally()`                                        | :warning:   |          |\n| [`valid-params`][valid-params]                           | Ensures the proper number of arguments are passed to Promise functions           | :warning:   |          |\n| [`prefer-await-to-then`][prefer-await-to-then]           | Prefer `await` to `then()` for reading Promise values                            | :seven:     |          |\n| [`prefer-await-to-callbacks`][prefer-await-to-callbacks] | Prefer async/await to the callback pattern                                       | :seven:     |          |\n\n**Key**\n\n| icon       | description                                     |\n| ---------- | ----------------------------------------------- |\n| :bangbang: | Reports as error in recommended configuration   |\n| :warning:  | Reports as warning in recommended configuration |\n| :seven:    | ES2017 Async Await rules                        |\n| :wrench:   | Rule is fixable with `eslint --fix`             |\n\n## Maintainers\n\n- Jamund Ferguson - [@xjamundx][]\n- Macklin Underdown - [@macklinu][]\n\n## License\n\n- (c) MMXV jden <mailto:jason@denizac.org> - ISC license.\n- (c) 2016 Jamund Ferguson <mailto:jamund@gmail.com> - ISC license.\n\n[catch-or-return]: docs/rules/catch-or-return.md\n[no-return-wrap]: docs/rules/no-return-wrap.md\n[param-names]: docs/rules/param-names.md\n[always-return]: docs/rules/always-return.md\n[no-native]: docs/rules/no-native.md\n[no-nesting]: docs/rules/no-nesting.md\n[no-promise-in-callback]: docs/rules/no-promise-in-callback.md\n[no-callback-in-promise]: docs/rules/no-callback-in-promise.md\n[avoid-new]: docs/rules/avoid-new.md\n[no-new-statics]: docs/rules/no-new-statics.md\n[no-return-in-finally]: docs/rules/no-return-in-finally.md\n[valid-params]: docs/rules/valid-params.md\n[prefer-await-to-then]: docs/rules/prefer-await-to-then.md\n[prefer-await-to-callbacks]: docs/rules/prefer-await-to-callbacks.md\n[nodeify]: https://www.npmjs.com/package/nodeify\n[pify]: https://www.npmjs.com/package/pify\n[@macklinu]: https://github.com/macklinu\n[@xjamundx]: https://github.com/xjamundx\n","homepage":"https://github.com/xjamundx/eslint-plugin-promise#readme","trustScore":28,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":10,"dependent_repositories":5,"stars":3,"contributors":1,"subscribers":1,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":28},"versions":[{"versionNumber":"1.0.0","timestamp":"2016-01-22T17:12:18.921Z","trustScore":13,"dependencies":[]},{"versionNumber":"1.0.8","timestamp":"2016-02-06T04:29:06.502Z","trustScore":13,"dependencies":[]},{"versionNumber":"1.1.0","timestamp":"2016-03-02T19:28:26.814Z","trustScore":12,"dependencies":[]},{"versionNumber":"1.2.0","timestamp":"2016-05-25T16:00:17.024Z","trustScore":13,"dependencies":[]},{"versionNumber":"1.3.0","timestamp":"2016-05-25T16:18:19.814Z","trustScore":13,"dependencies":[]},{"versionNumber":"1.3.1","timestamp":"2016-05-27T03:15:01.815Z","trustScore":12,"dependencies":[]},{"versionNumber":"1.3.2","timestamp":"2016-06-03T19:25:19.965Z","trustScore":13,"dependencies":[]},{"versionNumber":"2.0.0","timestamp":"2016-07-13T14:44:49.303Z","trustScore":13,"dependencies":[]},{"versionNumber":"2.0.1","timestamp":"2016-08-05T17:25:54.345Z","trustScore":13,"dependencies":[]},{"versionNumber":"3.0.0","timestamp":"2016-10-07T23:58:26.345Z","trustScore":13,"dependencies":[]},{"versionNumber":"3.1.0","timestamp":"2016-10-18T16:27:35.636Z","trustScore":13,"dependencies":[]},{"versionNumber":"3.2.0","timestamp":"2016-10-18T16:56:55.421Z","trustScore":13,"dependencies":[]},{"versionNumber":"3.2.1","timestamp":"2016-10-18T17:23:53.127Z","trustScore":12,"dependencies":[]},{"versionNumber":"3.3.0","timestamp":"2016-10-18T20:53:40.236Z","trustScore":12,"dependencies":[]},{"versionNumber":"3.3.1","timestamp":"2016-11-04T18:04:12.314Z","trustScore":13,"dependencies":[]},{"versionNumber":"3.3.2","timestamp":"2016-11-11T21:09:07.710Z","trustScore":12,"dependencies":[]},{"versionNumber":"3.4.0-0","timestamp":"2016-11-17T04:45:18.017Z","trustScore":14,"dependencies":[]},{"versionNumber":"3.4.0","timestamp":"2016-11-17T19:17:01.721Z","trustScore":12,"dependencies":[]},{"versionNumber":"3.4.1","timestamp":"2017-02-06T22:17:24.775Z","trustScore":13,"dependencies":[]},{"versionNumber":"3.4.2","timestamp":"2017-02-17T00:56:47.091Z","trustScore":13,"dependencies":[]},{"versionNumber":"3.5.0","timestamp":"2017-02-28T23:44:47.687Z","trustScore":12,"dependencies":[]},{"versionNumber":"3.6.0","timestamp":"2017-10-13T18:11:33.133Z","trustScore":11,"dependencies":[]},{"versionNumber":"3.7.0","timestamp":"2018-03-08T17:32:28.476Z","trustScore":13,"dependencies":[]},{"versionNumber":"3.8.0","timestamp":"2018-05-24T20:45:07.521Z","trustScore":13,"dependencies":[]},{"versionNumber":"4.0.0","timestamp":"2018-08-17T21:24:47.965Z","trustScore":13,"dependencies":[]},{"versionNumber":"4.0.1","timestamp":"2018-09-07T04:40:44.425Z","trustScore":13,"dependencies":[]},{"versionNumber":"4.1.0","timestamp":"2019-04-01T18:30:48.876Z","trustScore":14,"dependencies":[]},{"versionNumber":"4.1.1","timestamp":"2019-04-01T18:51:29.260Z","trustScore":13,"dependencies":[]},{"versionNumber":"4.2.1","timestamp":"2019-06-25T17:28:20.040Z","trustScore":28,"dependencies":[]}]}},"__N_SSG":true}