{"pageProps":{"postData":{"_id":"5fb669af9f9e7f16fd324af0","id":"spawn-default-shell","crawlTimestamp":"19/11/2020 12:48:46","packageName":"spawn-default-shell","description":"Spawn shell command with platform default shell","repository":{"type":"git","url":"git+https://github.com/kimmobrunfeldt/spawn-default-shell.git"},"readme":"# spawn-default-shell\n\n> Spawn shell command with platform default shell\n\n[![Build Status](https://travis-ci.org/kimmobrunfeldt/spawn-default-shell.svg?branch=master)](https://travis-ci.org/kimmobrunfeldt/spawn-default-shell) [![AppVeyor Build Status](https://ci.appveyor.com/api/projects/status/github/kimmobrunfeldt/spawn-default-shell?branch=master&svg=true)](https://ci.appveyor.com/project/kimmobrunfeldt/spawn-default-shell) *master branch status*\n\n[![NPM Badge](https://nodei.co/npm/spawn-default-shell.png?downloads=true)](https://www.npmjs.com/package/spawn-default-shell)\n\nLike `child_process.spawn` with `shell: true` option but a bit more\nconvenient and customizable. You can just pass the command as a string,\nand it will be executed in the platform default shell. Used in [concurrently](https://github.com/kimmobrunfeldt/concurrently).\n\n```js\n// If we are in Linux / Mac, this will work\nconst defaultShell = require('spawn-default-shell');\nconst child = defaultShell.spawn('cat src/index.js | grep function');\n```\n\nPlatform | Command\n---------|----------\nWindows  | `cmd.exe /c \"...\"`. If `COMSPEC` env variable is defined, it is used as shell path.\nMac      | `/bin/bash -l -c \"...\"`\nLinux    | `/bin/sh -l -c \"...\"`\n\nYou can always override the shell path by defining these two environment variables:\n\n* `SHELL=/bin/zsh`\n* `SHELL_EXECUTE_FLAGS=-l -c` **Warning: execute flag must be the last flag.**\n\nAll `sh` variants will be called with `-l` flag (--login). It invokes the shell\nas a non-interactive login shell. In bash it means:\n\n> When bash is invoked as an interactive login shell, or as a non-inter-\n> active shell with the --login option, it first reads and executes commands\n> from the file /etc/profile, if that file exists. After reading\n> that file, it looks for ~/.bash_profile, ~/.bash_login, and ~/.profile,\n> in that order, and reads and executes commands from the first one that\n> exists and is readable. The --noprofile option may be used when the\n> shell is started to inhibit this behavior.\n>\n> When  a  login  shell  exits, bash reads and executes commands from the\n> file ~/.bash_logout, if it exists.\n\n## Install\n\n```bash\nnpm install spawn-default-shell --save\n```\n\n## API\n\n### .spawn(command, [opts])\n\nSpawns a new process of the platform default shell using the given command.\n\nFor all options, see [child_process](https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options)\ndocumentation.\n\n## License\n\nMIT\n","homepage":"https://github.com/kimmobrunfeldt/spawn-default-shell#readme","trustScore":14,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":2,"dependent_repositories":3,"stars":1,"contributors":0,"subscribers":0,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":14},"versions":[{"versionNumber":"1.0.0","timestamp":"2016-09-18T21:25:24.599Z","trustScore":6,"dependencies":[]},{"versionNumber":"1.1.0","timestamp":"2016-09-30T20:31:46.685Z","trustScore":5,"dependencies":[]},{"versionNumber":"2.0.0","timestamp":"2016-10-01T10:10:25.699Z","trustScore":14,"dependencies":[]}]}},"__N_SSG":true}