{"pageProps":{"postData":{"_id":"5fb66ba69f9e7f16fd324c76","id":"colorette","crawlTimestamp":"19/11/2020 12:57:08","packageName":"colorette","description":"Color your terminal using pure idiomatic JavaScript.","repository":{"type":"git","url":"git+https://github.com/jorgebucaran/colorette.git"},"readme":"# Colorette [![](https://img.shields.io/npm/v/colorette.svg?label=&color=2a64e6)](https://www.npmjs.org/package/colorette)\n\n> Color your terminal using pure idiomatic JavaScript.\n\nColorette is a Node.js library for embellishing your CLI tools with colors and styles using [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code).\n\n- ~1.5x faster than alternatives ([run the benchmarks](#run-the-benchmarks)).\n- No wonky prototype-based method chains.\n- Automatic color support detection.\n- ~80 LOC and no dependencies.\n- [`NO_COLOR`](https://no-color.org) friendly.\n\n## Quickstart\n\n```console\nnpm i colorette\n```\n\nImport the [styles](#styles) you need. [Here](#supported-styles)'s the list of styles you can use.\n\n```js\nimport { red, blue, bold } from \"colorette\"\n```\n\nWrap your strings in one or more styles to produce the finish you're looking for.\n\n```js\nconsole.log(bold(blue(\"Engage!\")))\n```\n\nMix it with [template literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals) to interpolate variables, expressions and create multi-line strings easily.\n\n```js\nconsole.log(`\n  Beets are ${red(\"red\")},\n  Plums are ${blue(\"blue\")},\n  ${bold(\"Colorette!\")}.\n`)\n```\n\nUsing `console.log`'s [string substitution](https://nodejs.org/api/console.html#console_console_log_data_args) can be useful too.\n\n```js\nconsole.log(bold(\"Total: $%f\"), 1.99)\n```\n\nYou can also nest styles without breaking existing escape codes.\n\n```js\nconsole.log(red(`Red Shirt ${blue(\"Blue Shirt\")} Red Shirt`))\n```\n\nFeeling adventurous? Try the [pipeline operator](https://github.com/tc39/proposal-pipeline-operator).\n\n```js\nconsole.log(\"Make it so!\" |> bold |> blue)\n```\n\n## Supported styles\n\nColorette supports the standard and bright color variations out-of-the-box. See [this issue](https://github.com/jorgebucaran/colorette/issues/27) if you were looking for TrueColor support.\n\n| Colors  | Background Colors | Bright Colors | Bright Background Colors | Modifiers         |\n| ------- | ----------------- | ------------- | ------------------------ | ----------------- |\n| black   | bgBlack           | blackBright   | bgBlackBright            | dim               |\n| red     | bgRed             | redBright     | bgRedBright              | **bold**          |\n| green   | bgGreen           | greenBright   | bgGreenBright            | hidden            |\n| yellow  | bgYellow          | yellowBright  | bgYellowBright           | _italic_          |\n| blue    | bgBlue            | blueBright    | bgBlueBright             | underline         |\n| magenta | bgMagenta         | magentaBright | bgMagentaBright          | ~~strikethrough~~ |\n| cyan    | bgCyan            | cyanBright    | bgCyanBright             | reset             |\n| white   | bgWhite           | whiteBright   | bgWhiteBright            |                   |\n| gray    |                   |               |                          |                   |\n\n## API\n\n### <code><i>style</i>(string)</code>\n\nReturns a string wrapped in the corresponding ANSI escape codes.\n\n```js\nred(\"Red Alert\") //=> \\u001b[31mRed Alert\\u001b[39m\n```\n\n### `options.enabled`\n\nColor will be enabled if your terminal supports it, `FORCE_COLOR` is defined in [`process.env`](https://nodejs.org/dist/latest-v8.x/docs/api/process.html#process_process_env) and if `NO_COLOR` isn't, but you can always override it if you want.\n\n```js\nimport { options } from \"colorette\"\n\noptions.enabled = false\n```\n\n## Run the benchmarks\n\n```\nnpm i -C bench && node bench\n```\n\n<pre>\ncolorette × 759,429 ops/sec\nchalk × 524,034 ops/sec\nkleur × 490,347 ops/sec\ncolors × 255,661 ops/sec\nansi-colors × 317,605 ops/sec\n</pre>\n\n## License\n\n[MIT](LICENSE.md)\n","homepage":"https://github.com/jorgebucaran/colorette","trustScore":24,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":1,"not_brand_new":1,"one_point_oh":1,"dependent_projects":6,"dependent_repositories":4,"stars":3,"contributors":1,"subscribers":1,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":24},"versions":[{"versionNumber":"0.1.0","timestamp":"2018-08-23T01:12:46.756Z","trustScore":10,"dependencies":[]},{"versionNumber":"1.0.0","timestamp":"2018-08-23T13:51:05.633Z","trustScore":9,"dependencies":[]},{"versionNumber":"1.0.1","timestamp":"2018-08-24T08:44:20.089Z","trustScore":10,"dependencies":[]},{"versionNumber":"1.0.2","timestamp":"2018-09-23T03:12:19.515Z","trustScore":10,"dependencies":[]},{"versionNumber":"1.0.3","timestamp":"2018-09-23T07:26:45.777Z","trustScore":10,"dependencies":[]},{"versionNumber":"1.0.4","timestamp":"2018-09-23T07:34:40.316Z","trustScore":12,"dependencies":[]},{"versionNumber":"1.0.5","timestamp":"2018-09-30T07:50:16.825Z","trustScore":12,"dependencies":[]},{"versionNumber":"1.0.6","timestamp":"2018-10-16T09:43:55.894Z","trustScore":10,"dependencies":[]},{"versionNumber":"1.0.7","timestamp":"2018-10-23T10:12:17.552Z","trustScore":11,"dependencies":[]},{"versionNumber":"1.0.8","timestamp":"2019-05-31T14:40:21.787Z","trustScore":11,"dependencies":[]},{"versionNumber":"1.1.0","timestamp":"2019-06-28T23:46:15.543Z","trustScore":12,"dependencies":[]},{"versionNumber":"1.2.0","timestamp":"2020-05-16T18:24:54.376Z","trustScore":21,"dependencies":[]},{"versionNumber":"1.2.1","timestamp":"2020-07-05T13:33:18.271Z","trustScore":24,"dependencies":[]}]}},"__N_SSG":true}