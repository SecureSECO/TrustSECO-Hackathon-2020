{"pageProps":{"postData":{"_id":"5fb666869f9e7f16fd324875","id":"config-chain","crawlTimestamp":"19/11/2020 12:35:17","packageName":"config-chain","description":"HANDLE CONFIGURATION ONCE AND FOR ALL","repository":{"type":"git","url":"git+https://github.com/dominictarr/config-chain.git"},"readme":"# config-chain\n\nA module for loading custom configurations\n\n## NOTE: Feature Freeze\n\n[![locked](http://badges.github.io/stability-badges/dist/locked.svg)](http://github.com/badges/stability-badges)\n\nThis module is frozen.\n\nIn general, we recommend using [rc](https://github.com/dominictarr/rc) instead,\nbut as [npm](https://github.com/npmjs/npm) depends on this, it cannot be changed.\n\n\n## Install\n\n```sh \nyarn add config-chain\n\n# npm users\nnpm install --save config-chain\n```\n\n## Usage\n\n```js\nconst cc = require('config-chain');\n\nconsole.log(cc.env('TERM_', process.env));\n/*\n{ SESSION_ID: 'w1:5F38',\n  PROGRAM_VERSION: '3.1.2',\n  PROGRAM: 'iTerm.app' }\n*/\n```\n\nThe `.env` function gets all the keys on the provided object which are\nprefixed by the specified prefix, removes the prefix, and puts the values on a new object.\n\n<br/>\n\n## Full Usage\n\n``` js\n\n  // npm install config-chain\n\n  var cc = require('config-chain')\n    , opts = require('optimist').argv //ALWAYS USE OPTIMIST FOR COMMAND LINE OPTIONS.\n    , env = opts.env || process.env.YOUR_APP_ENV || 'dev' //SET YOUR ENV LIKE THIS.\n\n  // EACH ARG TO CONFIGURATOR IS LOADED INTO CONFIGURATION CHAIN\n  // EARLIER ITEMS OVERIDE LATER ITEMS\n  // PUTS COMMAND LINE OPTS FIRST, AND DEFAULTS LAST!\n\n  //strings are interpereted as filenames.\n  //will be loaded synchronously\n\n  var conf =\n  cc(\n    //OVERRIDE SETTINGS WITH COMMAND LINE OPTS\n    opts,\n\n    //ENV VARS IF PREFIXED WITH 'myApp_'\n\n    cc.env('myApp_'), //myApp_foo = 'like this'\n\n    //FILE NAMED BY ENV\n    path.join(__dirname,  'config.' + env + '.json'),\n\n    //IF `env` is PRODUCTION\n    env === 'prod'\n      ? path.join(__dirname, 'special.json') //load a special file\n      : null //NULL IS IGNORED!\n\n    //SUBDIR FOR ENV CONFIG\n    path.join(__dirname,  'config', env, 'config.json'),\n\n    //SEARCH PARENT DIRECTORIES FROM CURRENT DIR FOR FILE\n    cc.find('config.json'),\n\n    //PUT DEFAULTS LAST\n    {\n      host: 'localhost'\n      port: 8000\n    })\n\n  var host = conf.get('host')\n\n  // or\n\n  var host = conf.store.host\n\n```\n\nFinally, flexible configurations!  ðŸ‘Œ\n\n## Custom Configuations\n\n```javascript\nvar cc = require('config-chain')\n\n// all the stuff you did before\nvar config = cc({\n      some: 'object'\n    },\n    cc.find('config.json'),\n    cc.env('myApp_')\n  )\n  // CONFIGS AS A SERVICE, aka \"CaaS\", aka EVERY DEVOPS DREAM OMG!\n  .addUrl('http://configurator:1234/my-configs')\n  // ASYNC FTW!\n  .addFile('/path/to/file.json')\n\n  // OBJECTS ARE OK TOO, they're SYNC but they still ORDER RIGHT\n  // BECAUSE PROMISES ARE USED BUT NO, NOT *THOSE* PROMISES, JUST\n  // ACTUAL PROMISES LIKE YOU MAKE TO YOUR MOM, KEPT OUT OF LOVE\n  .add({ another: 'object' })\n\n  // DIE A THOUSAND DEATHS IF THIS EVER HAPPENS!!\n  .on('error', function (er) {\n    // IF ONLY THERE WAS SOMETHIGN HARDER THAN THROW\n    // MY SORROW COULD BE ADEQUATELY EXPRESSED.  /o\\\n    throw er\n  })\n\n  // THROW A PARTY IN YOUR FACE WHEN ITS ALL LOADED!!\n  .on('load', function (config) {\n    console.awesome('HOLY SHIT!')\n  })\n```\n\n# API Docs\n\n## cc(...args)\n\nMAKE A CHAIN AND ADD ALL THE ARGS.\n\nIf the arg is a STRING, then it shall be a JSON FILENAME.\n\nRETURN THE CHAIN!\n\n## cc.json(...args)\n\nJoin the args into a JSON filename!\n\nSYNC I/O!\n\n## cc.find(relativePath)\n\nSEEK the RELATIVE PATH by climbing the TREE OF DIRECTORIES.\n\nRETURN THE FOUND PATH!\n\nSYNC I/O!\n\n## cc.parse(content, file, type)\n\nParse the content string, and guess the type from either the\nspecified type or the filename.\n\nRETURN THE RESULTING OBJECT!\n\nNO I/O!\n\n## cc.env(prefix, env=process.env)\n\nGet all the keys on the provided object which are\nprefixed by the specified prefix, removes the prefix, and puts the values on a new object.\n\nRETURN THE RESULTING OBJECT!\n\nNO I/O!\n\n## cc.ConfigChain()\n\nThe ConfigChain class for CRAY CRAY JQUERY STYLE METHOD CHAINING!\n\nOne of these is returned by the main exported function, as well.\n\nIt inherits (prototypically) from\n[ProtoList](https://github.com/isaacs/proto-list/), and also inherits\n(parasitically) from\n[EventEmitter](http://nodejs.org/api/events.html#events_class_events_eventemitter)\n\nIt has all the methods from both, and except where noted, they are\nunchanged.\n\n### LET IT BE KNOWN THAT chain IS AN INSTANCE OF ConfigChain.\n\n## chain.sources\n\nA list of all the places where it got stuff.  The keys are the names\npassed to addFile or addUrl etc, and the value is an object with some\ninfo about the data source.\n\n## chain.addFile(filename, type, [name=filename])\n\nFilename is the name of the file.  Name is an arbitrary string to be\nused later if you desire.  Type is either 'ini' or 'json', and will\ntry to guess intelligently if omitted.\n\nLoaded files can be saved later.\n\n## chain.addUrl(url, type, [name=url])\n\nSame as the filename thing, but with a url.\n\nCan't be saved later.\n\n## chain.addEnv(prefix, env, [name='env'])\n\nAdd all the keys from the env object that start with the prefix.\n\n## chain.addString(data, file, type, [name])\n\nParse the string and add it to the set.  (Mainly used internally.)\n\n## chain.add(object, [name])\n\nAdd the object to the set.\n\n## chain.root {Object}\n\nThe root from which all the other config objects in the set descend\nprototypically.\n\nPut your defaults here.\n\n## chain.set(key, value, name)\n\nSet the key to the value on the named config object.  If name is\nunset, then set it on the first config object in the set.  (That is,\nthe one with the highest priority, which was added first.)\n\n## chain.get(key, [name])\n\nGet the key from the named config object explicitly, or from the\nresolved configs if not specified.\n\n## chain.save(name, type)\n\nWrite the named config object back to its origin.\n\nCurrently only supported for env and file config types.\n\nFor files, encode the data according to the type.\n\n## chain.on('save', function () {})\n\nWhen one or more files are saved, emits `save` event when they're all\nsaved.\n\n## chain.on('load', function (chain) {})\n\nWhen the config chain has loaded all the specified files and urls and\nsuch, the 'load' event fires.\n","homepage":"http://github.com/dominictarr/config-chain","trustScore":21,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":4,"dependent_repositories":5,"stars":2,"contributors":1,"subscribers":1,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":21},"versions":[{"versionNumber":"0.1.0","timestamp":"2011-11-05T12:50:58.792Z","trustScore":9,"dependencies":[{"packageName":"proto-list","version":"1"}]},{"versionNumber":"0.1.1","timestamp":"2012-07-30T20:09:57.328Z","trustScore":9,"dependencies":[{"packageName":"proto-list","version":"1"}]},{"versionNumber":"0.2.0","timestamp":"2012-08-05T12:12:39.799Z","trustScore":10,"dependencies":[{"packageName":"proto-list","version":"1"},{"packageName":"ini","version":"~1.0.2"}]},{"versionNumber":"0.3.0","timestamp":"2012-08-05T12:38:48.694Z","trustScore":10,"dependencies":[{"packageName":"proto-list","version":"1"},{"packageName":"ini","version":"~1.0.2"}]},{"versionNumber":"0.3.1","timestamp":"2012-08-05T13:26:39.650Z","trustScore":10,"dependencies":[{"packageName":"proto-list","version":"1"},{"packageName":"ini","version":"~1.0.2"}]},{"versionNumber":"0.3.2","timestamp":"2012-08-05T13:34:01.022Z","trustScore":11,"dependencies":[{"packageName":"proto-list","version":"1"},{"packageName":"ini","version":"~1.0.2"}]},{"versionNumber":"0.3.3","timestamp":"2012-08-05T19:26:07.084Z","trustScore":8,"dependencies":[{"packageName":"proto-list","version":"1"},{"packageName":"ini","version":"~1.0.2"}]},{"versionNumber":"1.0.0","timestamp":"2012-08-14T01:14:34.813Z","trustScore":11,"dependencies":[{"packageName":"proto-list","version":"~1.2.1"},{"packageName":"ini","version":"~1.0.2"}]},{"versionNumber":"1.0.1","timestamp":"2012-08-14T03:11:36.815Z","trustScore":8,"dependencies":[{"packageName":"proto-list","version":"~1.2.1"},{"packageName":"ini","version":"~1.0.2"}]},{"versionNumber":"1.1.0","timestamp":"2012-08-14T12:14:21.720Z","trustScore":10,"dependencies":[{"packageName":"proto-list","version":"~1.2.1"},{"packageName":"ini","version":"~1.0.2"}]},{"versionNumber":"1.1.1","timestamp":"2012-08-15T02:40:16.403Z","trustScore":10,"dependencies":[{"packageName":"proto-list","version":"~1.2.1"},{"packageName":"ini","version":"~1.0.2"}]},{"versionNumber":"1.1.2","timestamp":"2012-08-28T23:48:26.197Z","trustScore":9,"dependencies":[{"packageName":"proto-list","version":"~1.2.1"},{"packageName":"ini","version":"~1.0.2"}]},{"versionNumber":"1.1.3","timestamp":"2012-11-14T04:21:26.819Z","trustScore":9,"dependencies":[{"packageName":"proto-list","version":"~1.2.1"},{"packageName":"ini","version":"~1.0.2"}]},{"versionNumber":"1.1.4","timestamp":"2013-01-30T07:02:13.985Z","trustScore":8,"dependencies":[{"packageName":"proto-list","version":"~1.2.1"},{"packageName":"ini","version":"1"}]},{"versionNumber":"1.1.5","timestamp":"2013-02-06T08:24:07.721Z","trustScore":9,"dependencies":[{"packageName":"proto-list","version":"~1.2.1"},{"packageName":"ini","version":"1"}]},{"versionNumber":"1.1.6","timestamp":"2013-04-07T18:27:32.262Z","trustScore":10,"dependencies":[{"packageName":"proto-list","version":"~1.2.1"},{"packageName":"ini","version":"1"}]},{"versionNumber":"0.3.4","timestamp":"2013-04-07T21:24:42.410Z","trustScore":10,"dependencies":[{"packageName":"proto-list","version":"1"},{"packageName":"ini","version":"~1.0.2"}]},{"versionNumber":"1.1.7","timestamp":"2013-04-12T23:48:44.415Z","trustScore":10,"dependencies":[{"packageName":"proto-list","version":"~1.2.1"},{"packageName":"ini","version":"1"}]},{"versionNumber":"1.1.8","timestamp":"2013-09-20T11:48:49.006Z","trustScore":10,"dependencies":[{"packageName":"proto-list","version":"~1.2.1"},{"packageName":"ini","version":"1"}]},{"versionNumber":"1.1.9","timestamp":"2015-06-02T18:43:35.124Z","trustScore":9,"dependencies":[{"packageName":"proto-list","version":"~1.2.1"},{"packageName":"ini","version":"1"}]},{"versionNumber":"1.1.10","timestamp":"2016-01-18T03:54:36.971Z","trustScore":8,"dependencies":[{"packageName":"proto-list","version":"~1.2.1"},{"packageName":"ini","version":"^1.3.4"}]},{"versionNumber":"1.1.11","timestamp":"2016-10-04T01:54:09.310Z","trustScore":8,"dependencies":[{"packageName":"proto-list","version":"~1.2.1"},{"packageName":"ini","version":"^1.3.4"}]},{"versionNumber":"1.1.12","timestamp":"2018-09-11T17:13:03.113Z","trustScore":21,"dependencies":[{"packageName":"proto-list","version":"~1.2.1"},{"packageName":"ini","version":"^1.3.4"}]}]}},"__N_SSG":true}