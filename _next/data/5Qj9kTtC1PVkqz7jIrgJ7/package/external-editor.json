{"pageProps":{"postData":{"_id":"5fb669c19f9e7f16fd324afe","id":"external-editor","crawlTimestamp":"19/11/2020 12:49:04","packageName":"external-editor","description":"Edit a string with the users preferred text editor using $VISUAL or $ENVIRONMENT","repository":{"type":"git","url":"git+https://github.com/mrkmg/node-external-editor.git"},"readme":"# External Editor\n\n[![ExternalEditor on Travis CI](https://img.shields.io/travis/mrkmg/node-external-editor.svg?style=flat-square)](https://travis-ci.org/mrkmg/node-external-editor/branches)\n[![ExternalEditor on NPM](https://img.shields.io/npm/v/external-editor.svg?style=flat-square)](https://www.npmjs.com/package/external-editor)\n[![ExternalEditor uses the MIT](https://img.shields.io/npm/l/external-editor.svg?style=flat-square)](https://opensource.org/licenses/MIT)\n\n\nA node module to edit a string with a users preferred text editor using $VISUAL or $ENVIRONMENT.\n\nVersion: 3.1.0\n\nAs of version 3.0.0, the minimum version of node supported is 4.\n\n## Install\n\n`npm install external-editor --save`\n\n## Usage\n\nA simple example using the `.edit` convenience method\n\n    import {edit} from \"external-editor\";\n    const data = edit('\\n\\n# Please write your text above');\n    console.log(data);\n\nA full featured example\n\n    import {ExternalEditor, CreateFileError, ReadFileError, RemoveFileError} from \"external-editor\"\n    \n    try {\n        const editor = new ExternalEditor();\n        const text = editor.run() // the text is also available in editor.text\n        \n        if (editor.last_exit_status !== 0) {\n            console.log(\"The editor exited with a non-zero code\");\n        }\n    } catch (err) {\n        if (err instanceOf CreateFileError) {\n            console.log('Failed to create the temporary file');\n        } else if (err instanceOf ReadFileError) {\n            console.log('Failed to read the temporary file');\n        } else if (err instanceOf LaunchEditorError) {\n            console.log('Failed to launch your editor');\n        } else {\n            throw err;\n        }\n    }\n    \n    // Do things with the text\n    \n    // Eventually call the cleanup to remove the temporary file\n    try {\n        editor.cleanup();   \n    } catch (err) {\n         if (err instanceOf RemoveFileError) {\n             console.log('Failed to remove the temporary file');\n         } else {\n            throw err\n        }\n    }\n    \n    \n#### API\n**Convenience Methods**\n\n- `edit(text, config)`\n    - `text` (string) *Optional* Defaults to empty string\n    - `config` (Config) *Optional* Options for temporary file creation\n    - **Returns** (string) The contents of the file\n    - Could throw `CreateFileError`, `ReadFileError`, or `LaunchEditorError`, or `RemoveFileError`\n- `editAsync(text, callback, config)`\n    - `text` (string) *Optional* Defaults to empty string\n    - `callback` (function (error, text))\n        - `error` could be of type `CreateFileError`, `ReadFileError`, or `LaunchEditorError`, or `RemoveFileError`\n        - `text`(string) The contents of the file\n    - `config` (Config) *Optional* Options for temporary file creation\n\n\n**Errors**\n\n- `CreateFileError` Error thrown if the temporary file could not be created. \n- `ReadFileError` Error thrown if the temporary file could not be read.\n- `RemoveFileError` Error thrown if the temporary file could not be removed during cleanup.\n- `LaunchEditorError` Error thrown if the editor could not be launched.\n\n**External Editor Public Methods**\n\n- `new ExternalEditor(text, config)`\n    - `text` (string) *Optional* Defaults to empty string\n    - `config` (Config) *Optional* Options for temporary file creation\n    - Could throw `CreateFileError`\n- `run()` Launches the editor.\n    - **Returns** (string) The contents of the file\n    - Could throw `LaunchEditorError` or `ReadFileError`\n- `runAsync(callback)` Launches the editor in an async way\n    - `callback` (function (error, text))\n        - `error` could be of type `ReadFileError` or `LaunchEditorError`\n        - `text`(string) The contents of the file\n- `cleanup()`  Removes the temporary file.\n    - Could throw `RemoveFileError`\n    \n**External Editor Public Properties**\n\n- `text` (string) *readonly* The text in the temporary file.\n- `editor.bin` (string) The editor determined from the environment.\n- `editor.args` (array) Default arguments for the bin\n- `tempFile` (string) Path to temporary file. Can be changed, but be careful as the temporary file probably already \n    exists and would need be removed manually.\n- `lastExitStatus` (number) The last exit code emitted from the editor.\n    \n**Config Options**\n\n- `prefix` (string) *Optional* A prefix for the file name.\n- `postfix` (string; *Optional* A postfix for the file name. Useful if you want to provide an extension.\n- `mode` (number) *Optional* Which mode to create the file with. e.g. 644\n- `template` (string) *Optional* A template for the filename. See [tmp](https://www.npmjs.com/package/tmp).\n- `dir` (string) *Optional* Which path to store the file.\n    \n## Errors\n\nAll errors have a simple message explaining what went wrong. They all also have an `originalError` property containing\nthe original error thrown for debugging purposes.\n    \n## Why Synchronous?\n \nEverything is synchronous to make sure the editor has complete control of the stdin and stdout. Testing has shown \nasync launching of the editor can lead to issues when using readline or other packages which try to read from stdin or \nwrite to stdout. Seeing as this will be used in an interactive CLI environment, I made the decision to force the package\nto be synchronous. If you know a reliable way to force all stdin and stdout to be limited only to the child_process,\nplease submit a PR.\n\nIf async is really needed, you can use `editAsync` or `runAsync`. If you are using readline or have anything else\nlistening to the stdin or you write to stdout, you will most likely have problem, so make sure to remove any other \nlisteners on stdin, stdout, or stderr.\n\n## Demo\n\n[![asciicast](https://asciinema.org/a/a1qh9lypbe65mj0ivfuoslz2s.png)](https://asciinema.org/a/a1qh9lypbe65mj0ivfuoslz2s)\n\n## Breaking Changes from v2 to v3\n\n- NodeJS 0.12 support dropped.\n- Switched to named imports.\n- All \"snake_cased\" variables and properties are now \"camelCased\".\n    - `ExternalEditor.temp_file` is now `ExternalEditor.tempFile`.\n    - `ExternalEditor.last_exit_status` is now `ExternalEditor.lastExitStatus`.\n    - `Error.original_error` is now `Error.originalError`.\n    \n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2016-2018 Kevin Gravier\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n","homepage":"https://github.com/mrkmg/node-external-editor#readme","trustScore":22,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":4,"dependent_repositories":6,"stars":2,"contributors":1,"subscribers":2,"all_prereleases":0,"any_outdated_dependencies":-1,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":22},"versions":[{"versionNumber":"1.0.1","timestamp":"2016-06-24T16:24:43.524Z","trustScore":9,"dependencies":[{"packageName":"extend","version":"^3.0.0"},{"packageName":"spawn-sync","version":"^1.0.15"},{"packageName":"temp","version":"^0.8.3"}]},{"versionNumber":"1.0.2","timestamp":"2016-06-25T19:20:05.482Z","trustScore":11,"dependencies":[{"packageName":"extend","version":"^3.0.0"},{"packageName":"spawn-sync","version":"^1.0.15"},{"packageName":"temp","version":"^0.8.3"}]},{"versionNumber":"1.0.3","timestamp":"2016-06-25T19:39:45.607Z","trustScore":9,"dependencies":[{"packageName":"extend","version":"^3.0.0"},{"packageName":"spawn-sync","version":"^1.0.15"},{"packageName":"temp","version":"^0.8.3"}]},{"versionNumber":"1.1.0","timestamp":"2016-09-29T13:37:50.584Z","trustScore":8,"dependencies":[{"packageName":"extend","version":"^3.0.0"},{"packageName":"spawn-sync","version":"^1.0.15"},{"packageName":"temp","version":"^0.8.3"}]},{"versionNumber":"1.1.1","timestamp":"2016-10-28T14:13:22.064Z","trustScore":10,"dependencies":[{"packageName":"extend","version":"^3.0.0"},{"packageName":"spawn-sync","version":"^1.0.15"},{"packageName":"tmp","version":"^0.0.29"}]},{"versionNumber":"2.0.0","timestamp":"2016-12-01T13:41:14.024Z","trustScore":9,"dependencies":[{"packageName":"extend","version":"^3.0.0"},{"packageName":"tmp","version":"^0.0.31"}]},{"versionNumber":"2.0.1","timestamp":"2016-12-08T19:38:35.784Z","trustScore":10,"dependencies":[{"packageName":"tmp","version":"^0.0.31"}]},{"versionNumber":"2.0.2","timestamp":"2017-05-22T14:42:33.223Z","trustScore":10,"dependencies":[{"packageName":"tmp","version":"^0.0.31"}]},{"versionNumber":"2.0.3","timestamp":"2017-05-23T19:30:50.453Z","trustScore":11,"dependencies":[{"packageName":"tmp","version":"^0.0.31"}]},{"versionNumber":"2.0.4","timestamp":"2017-05-23T19:33:26.220Z","trustScore":10,"dependencies":[{"packageName":"iconv-lite","version":"^0.4.17"},{"packageName":"jschardet","version":"^1.4.2"},{"packageName":"tmp","version":"^0.0.31"}]},{"versionNumber":"2.0.5","timestamp":"2017-09-19T13:27:58.327Z","trustScore":10,"dependencies":[{"packageName":"iconv-lite","version":"^0.4.17"},{"packageName":"jschardet","version":"^1.4.2"},{"packageName":"tmp","version":"^0.0.33"}]},{"versionNumber":"2.1.0","timestamp":"2017-11-17T14:14:43.512Z","trustScore":10,"dependencies":[{"packageName":"chardet","version":"^0.4.0"},{"packageName":"iconv-lite","version":"^0.4.17"},{"packageName":"tmp","version":"^0.0.33"}]},{"versionNumber":"2.2.0","timestamp":"2018-04-02T15:04:13.526Z","trustScore":10,"dependencies":[{"packageName":"chardet","version":"^0.4.0"},{"packageName":"iconv-lite","version":"^0.4.17"},{"packageName":"tmp","version":"^0.0.33"}]},{"versionNumber":"3.0.0","timestamp":"2018-05-07T20:51:05.236Z","trustScore":11,"dependencies":[{"packageName":"chardet","version":"^0.5.0"},{"packageName":"iconv-lite","version":"^0.4.22"},{"packageName":"tmp","version":"^0.0.33"}]},{"versionNumber":"3.0.1","timestamp":"2018-08-09T18:41:37.747Z","trustScore":11,"dependencies":[{"packageName":"chardet","version":"^0.5.0"},{"packageName":"iconv-lite","version":"^0.4.22"},{"packageName":"tmp","version":"^0.0.33"}]},{"versionNumber":"3.0.2","timestamp":"2018-08-30T20:14:15.736Z","trustScore":9,"dependencies":[{"packageName":"chardet","version":"^0.7.0"},{"packageName":"iconv-lite","version":"^0.4.24"},{"packageName":"tmp","version":"^0.0.33"}]},{"versionNumber":"3.0.3","timestamp":"2018-08-30T20:15:06.555Z","trustScore":9,"dependencies":[{"packageName":"chardet","version":"^0.7.0"},{"packageName":"iconv-lite","version":"^0.4.24"},{"packageName":"tmp","version":"^0.0.33"}]},{"versionNumber":"3.1.0","timestamp":"2019-07-08T16:07:13.082Z","trustScore":22,"dependencies":[{"packageName":"chardet","version":"^0.7.0"},{"packageName":"iconv-lite","version":"^0.4.24"},{"packageName":"tmp","version":"^0.0.33"}]}]}},"__N_SSG":true}