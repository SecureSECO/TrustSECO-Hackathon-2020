{"pageProps":{"postData":{"_id":"5fb664219f9e7f16fd324682","id":"github-base","crawlTimestamp":"19/11/2020 12:25:04","packageName":"github-base","description":"Low-level methods for working with the GitHub API in node.js/JavaScript.","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/github-base.git"},"readme":"# github-base [![NPM version](https://img.shields.io/npm/v/github-base.svg?style=flat)](https://www.npmjs.com/package/github-base) [![NPM monthly downloads](https://img.shields.io/npm/dm/github-base.svg?style=flat)](https://npmjs.org/package/github-base) [![NPM total downloads](https://img.shields.io/npm/dt/github-base.svg?style=flat)](https://npmjs.org/package/github-base) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/github-base.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/github-base) [![Windows Build Status](https://img.shields.io/appveyor/ci/jonschlinkert/github-base.svg?style=flat&label=AppVeyor)](https://ci.appveyor.com/project/jonschlinkert/github-base)\n\n> Low-level methods for working with the GitHub API in node.js/JavaScript.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Table of Contents\n\n<details>\n<summary><strong>Details</strong></summary>\n\n- [Install](#install)\n- [Heads up!](#heads-up)\n- [Why github-base, instead of...?](#why-github-base-instead-of)\n- [Usage](#usage)\n- [API](#api)\n  * [GitHub](#github)\n  * [.request](#request)\n  * [.get](#get)\n  * [.delete](#delete)\n  * [.patch](#patch)\n  * [.post](#post)\n  * [.put](#put)\n  * [.paged](#paged)\n  * [.use](#use)\n- [Authentication](#authentication)\n- [Paths and placeholders](#paths-and-placeholders)\n- [Options](#options)\n  * [options.query](#optionsquery)\n- [About](#about)\n  * [Related projects](#related-projects)\n  * [Contributors](#contributors)\n  * [Author](#author)\n  * [License](#license)\n\n_(TOC generated by [verb](https://github.com/verbose/verb) using [markdown-toc](https://github.com/jonschlinkert/markdown-toc))_\n\n</details>\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save github-base\n```\n\n## Heads up!\n\nAs of v1.0, the API is 100% promise based, callbacks are no longer supported. Please see the [API documentation](#API) and [release history](changelog.md) for more details.\n\n## Why github-base, instead of...?\n\nEvery other GitHub API library we found either had a [huge dependency tree](https://github.com/sindresorhus/gh-got), tries to be [everything to everyone](https://github.com/michael/github/blob/master/package.json#L45-L56), was [too bloated with boilerplace code](https://github.com/mikedeboer/node-github/tree/master/templates), was too opinionated, or was not maintained.\n\nWe created github-base to provide low-level support for a handful of HTTP verbs for creating higher-level libraries:\n\n* [.request](#request): the base handler all of the GitHub HTTP verbs: `GET`, `PUT`, `POST`, `DELETE`, `PATCH`\n* [.get](#get): proxy for `.request('GET', path, options, cb)`\n* [.delete](#delete): proxy for `.request('DELETE', path, options, cb)`\n* [.patch](#patch): proxy for `.request('PATCH', path, options, cb)`\n* [.post](#post): proxy for `.request('POST', path, options, cb)`\n* [.put](#put): proxy for `.request('PUT', path, options, cb)`\n* [.paged](#paged): recursively makes `GET` requests until all pages have been retrieved.\n\nJump to the [API section](#API) for more details.\n\n## Usage\n\nAdd github-base to your node.js/JavaScript project with the following line of code:\n\n```js\nconst GitHub = require('github-base');\n```\n\n**Example usage**\n\nRecursively `GET` all pages of gists for a user:\n\n```js\nconst github = new GitHub({ /* options */ });\nconst owner = 'jonschlinkert';\n\ngithub.paged(`/users/${owner}/gists`)\n  .then(res => console.log(res))\n  .catch(console.error);\n```\n\n## API\n\n_(All request methods take a callback, or return a promise if a callback isn't passed as the last argument)_.\n\n### [GitHub](index.js#L18)\n\nCreate an instance of `GitHub` with the given options.\n\n**Params**\n\n* `options` **{Object}**\n\n**Example**\n\n```js\nconst GitHub = require('github-base');\nconst github = new GitHub([options]);\n```\n\n### [.request](index.js#L42)\n\nUses [needle](https://github.com/tomas/needle) to make a request to the GitHub API. Supports the following verbs: `GET`, `PUT`, `POST`, `PATCH`, and `DELETE`. Takes a callback or returns a promise.\n\n**Params**\n\n* `method` **{String}**: The http VERB to use\n* `path` **{String}**: The path to append to the base GitHub API URL.\n* `options` **{Options}**: Request [options](#options).\n\n**Example**\n\n```js\n// list all orgs for the authenticated user\nconst auth = require('./local-private-auth-info');\nconst github = new GitHub(auth);\ngithub.request('GET', '/user/orgs')\n  .then(res => console.log(res.body));\n```\n\n### [.get](index.js#L64)\n\nMake a `GET` request to the GitHub API.\n\n**Params**\n\n* `path` **{String}**: The path to append to the base GitHub API URL.\n* `options` **{Options}**: Request [options](#options).\n\n**Example**\n\n```js\n// get a list of orgs for the authenticated user\ngithub.get('/user/orgs')\n  .then(res => console.log(res.body));\n\n// get gists for the authenticated user\ngithub.get('/gists')\n  .then(res => console.log(res.body));\n```\n\n### [.delete](index.js#L84)\n\nMake a `DELETE` request to the GitHub API.\n\n**Params**\n\n* `path` **{String}**: The path to append to the base GitHub API URL.\n* `options` **{Options}**: Request [options](#options).\n\n**Example**\n\n```js\n// un-follow someone\ngithub.delete('/user/following/:some_username', { some_username: 'whatever' })\n  .then(res => {\n    console.log('RESPONSE:', res);\n  });\n```\n\n### [.patch](index.js#L106)\n\nMake a `PATCH` request to the GitHub API.\n\n**Params**\n\n* `path` **{String}**: The path to append to the base GitHub API URL.\n* `options` **{Options}**: Request [options](#options).\n\n**Example**\n\n```js\n// update a gist\nconst fs = require('fs');\nconst options = { files: { 'readme.md': { content: fs.readFileSync('README.md', 'utf8') } } };\ngithub.patch('/gists/bd139161a425896f35f8', options)\n  .then(res => {\n    console.log('RESPONSE:', res);\n  });\n```\n\n### [.post](index.js#L126)\n\nMake a `POST` request to the GitHub API.\n\n**Params**\n\n* `path` **{String}**: The path to append to the base GitHub API URL.\n* `options` **{Options}**: Request [options](#options).\n\n**Example**\n\n```js\n// create a new repository\ngithub.post('/user/repos', { name: 'new-repo-name' })\n  .then(res => {\n    console.log('RESPONSE:', res);\n  });\n```\n\n### [.put](index.js#L146)\n\nMake a `PUT` request to the GitHub API.\n\n**Params**\n\n* `path` **{String}**: The path to append to the base GitHub API URL.\n* `options` **{Options}**: Request [options](#options).\n\n**Example**\n\n```js\n// follow someone\ngithub.put('/user/following/jonschlinkert')\n  .then(res => {\n    console.log('RESPONSE:', res);\n  });\n```\n\n### [.paged](index.js#L165)\n\nRecursively make GET requests until all pages of records are returned.\n\n**Params**\n\n* `path` **{String}**: The path to append to the base GitHub API URL.\n* `options` **{Options}**: Request [options](#options).\n\n**Example**\n\n```js\n// get all repos for the authenticated user\ngithub.paged('/user/repos?type=all&per_page=1000&sort=updated')\n  .then(res => console.log(res.pages))\n  .catch(console.error)\n```\n\n### .use\n\nRegister plugins with [use](https://github.com/jonschlinkert/use).\n\n```js\nconst github = new GitHub();\n\ngithub.use(function() {\n  // do stuff with the github-base instance\n});\n```\n\n## Authentication\n\nThere are a few ways to authenticate, all of them require info to be passed on the [options](#options).\n\n```js\nconst github = new GitHub({\n  username: YOUR_USERNAME,\n  password: YOUR_PASSWORD,\n});\n\n// or \nconst github = new GitHub({\n  token: YOUR_TOKEN\n});\n\n// or \nconst github = new GitHub({\n  bearer: YOUR_JSON_WEB_TOKEN\n});\n```\n\n## Paths and placeholders\n\n**Deprecated**: Since es2015 templates make this feature less useful, we plan to remove it in a future release.\n\nPaths are similar to router paths, where placeholders in the given string are replaced with values from the options. For instance, the path in the following example:\n\n```js\nconst github = new GitHub();\nconst options = { user: 'jonschlinkert', repo: 'github-base', subscribed: true };\n\ngithub.put('/repos/:user/:repo/subscription', options);\n```\n\nExpands to:\n\n```js\n'/repos/jonschlinkert/github-base/subscription'\n```\n\nPlaceholder names are also arbitrary, you can make them whatever you want as long as all placeholder names can be resolved using values defined on the options.\n\n## Options\n\nOptions may be passed to the constructor when instantiating, and/or set on the instance directly, and/or passed to any of the methods.\n\n**Examples**\n\n```js\n// pass to constructor\nconst github = new GitHub({ user: 'doowb' });\n\n// and/or directly set on instance options\ngithub.options.user = 'doowb';\n\n// and/or pass to a method\ngithub.get('/users/:user/gists', { user: 'doowb' })\n```\n\n### options.query\n\n**Type**: `object`\n\n**Default**: `{ per_page: 100 }` for [get](#get) and [paged](#paged) requests, `undefined` for all other requests.\n\nPass an object to stringify and append to the URL using the `.stringify` method from [qs](https://github.com/ljharb/qs).\n\n**Examples**\n\n```js\ngithub.paged('/users/:user/gists', { user: 'doowb', query: { per_page: 30 } })\n  .then(res => {\n    console.log(res.pages);\n  });\n```\n\nYou can also manually append the query string:\n\n```js\ngithub.paged('/users/:user/gists?per_page=30', { user: 'doowb' })\n  .then(res => {\n    console.log(res.pages);\n  });\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [gists](https://www.npmjs.com/package/gists): Methods for working with the GitHub Gist API. Node.js/JavaScript | [homepage](https://github.com/jonschlinkert/gists \"Methods for working with the GitHub Gist API. Node.js/JavaScript\")\n* [github-contributors](https://www.npmjs.com/package/github-contributors): Generate a markdown or JSON list of contributors for a project using the GitHub API. | [homepage](https://github.com/jonschlinkert/github-contributors \"Generate a markdown or JSON list of contributors for a project using the GitHub API.\")\n* [repos](https://www.npmjs.com/package/repos): List all repositories for one or more users or orgs. | [homepage](https://github.com/jonschlinkert/repos \"List all repositories for one or more users or orgs.\")\n* [topics](https://www.npmjs.com/package/topics): Get and update GitHub repository topics. | [homepage](https://github.com/jonschlinkert/topics \"Get and update GitHub repository topics.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 40 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 10 | [doowb](https://github.com/doowb) |\n| 7 | [olstenlarck](https://github.com/olstenlarck) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright © 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on August 14, 2018._","homepage":"https://github.com/jonschlinkert/github-base","trustScore":12,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":2,"dependent_repositories":2,"stars":1,"contributors":0,"subscribers":0,"all_prereleases":0,"any_outdated_dependencies":-1,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":12},"versions":[{"versionNumber":"0.1.0","timestamp":"2015-03-31T08:40:06.123Z","trustScore":6,"dependencies":[{"packageName":"request","version":"^2.54.0"}]},{"versionNumber":"0.1.1","timestamp":"2015-03-31T13:34:04.733Z","trustScore":5,"dependencies":[{"packageName":"request","version":"^2.54.0"}]},{"versionNumber":"0.2.0","timestamp":"2015-08-09T15:50:26.627Z","trustScore":6,"dependencies":[{"packageName":"extend-shallow","version":"^2.0.1"},{"packageName":"github-request","version":"github:jonschlinkert/github-request"}]},{"versionNumber":"0.2.1","timestamp":"2015-08-09T15:52:07.108Z","trustScore":6,"dependencies":[{"packageName":"extend-shallow","version":"^2.0.1"},{"packageName":"github-request","version":"github:jonschlinkert/github-request"}]},{"versionNumber":"0.2.2","timestamp":"2015-08-11T20:14:33.535Z","trustScore":5,"dependencies":[{"packageName":"extend-shallow","version":"^2.0.1"},{"packageName":"github-request","version":"github:jonschlinkert/github-request"}]},{"versionNumber":"0.2.3","timestamp":"2015-08-13T09:22:03.286Z","trustScore":6,"dependencies":[{"packageName":"extend-shallow","version":"^2.0.1"},{"packageName":"github-request","version":"github:jonschlinkert/github-request"}]},{"versionNumber":"0.3.0","timestamp":"2015-09-14T21:13:36.579Z","trustScore":6,"dependencies":[{"packageName":"concat-stream","version":"^1.5.0"},{"packageName":"delegate-properties","version":"^0.3.0"},{"packageName":"extend-shallow","version":"^2.0.1"},{"packageName":"mixin-deep","version":"^1.1.3"},{"packageName":"object.omit","version":"^2.0.0"},{"packageName":"parse-link-header","version":"^0.4.1"},{"packageName":"simple-get","version":"^1.4.3"}]},{"versionNumber":"0.3.1","timestamp":"2015-09-14T21:43:45.820Z","trustScore":6,"dependencies":[{"packageName":"concat-stream","version":"^1.5.0"},{"packageName":"delegate-properties","version":"^0.3.0"},{"packageName":"extend-shallow","version":"^2.0.1"},{"packageName":"mixin-deep","version":"^1.1.3"},{"packageName":"object.omit","version":"^2.0.0"},{"packageName":"parse-link-header","version":"^0.4.1"},{"packageName":"simple-get","version":"^1.4.3"}]},{"versionNumber":"0.3.2","timestamp":"2015-10-15T19:02:21.577Z","trustScore":6,"dependencies":[{"packageName":"concat-stream","version":"^1.5.0"},{"packageName":"delegate-properties","version":"^0.3.0"},{"packageName":"extend-shallow","version":"^2.0.1"},{"packageName":"mixin-deep","version":"^1.1.3"},{"packageName":"object.omit","version":"^2.0.0"},{"packageName":"parse-link-header","version":"^0.4.1"},{"packageName":"simple-get","version":"^1.4.3"}]},{"versionNumber":"0.4.0","timestamp":"2015-10-17T20:00:26.202Z","trustScore":5,"dependencies":[{"packageName":"concat-stream","version":"^1.5.0"},{"packageName":"delegate-properties","version":"^0.3.0"},{"packageName":"extend-shallow","version":"^2.0.1"},{"packageName":"mixin-deep","version":"^1.1.3"},{"packageName":"object.omit","version":"^2.0.0"},{"packageName":"parse-link-header","version":"^0.4.1"},{"packageName":"simple-get","version":"^1.4.3"}]},{"versionNumber":"0.4.1","timestamp":"2016-02-02T15:16:10.860Z","trustScore":5,"dependencies":[{"packageName":"concat-stream","version":"^1.5.0"},{"packageName":"delegate-properties","version":"^0.3.0"},{"packageName":"extend-shallow","version":"^2.0.1"},{"packageName":"mixin-deep","version":"^1.1.3"},{"packageName":"object.omit","version":"^2.0.0"},{"packageName":"parse-link-header","version":"^0.4.1"},{"packageName":"simple-get","version":"^1.4.3"}]},{"versionNumber":"0.5.0","timestamp":"2016-09-09T16:18:53.457Z","trustScore":6,"dependencies":[{"packageName":"define-property","version":"^0.2.5"},{"packageName":"extend-shallow","version":"^2.0.1"},{"packageName":"is-buffer","version":"^1.1.4"},{"packageName":"mixin-deep","version":"^1.1.3"},{"packageName":"object.omit","version":"^2.0.0"},{"packageName":"parse-link-header","version":"^0.4.1"},{"packageName":"simple-get","version":"^2.2.2"},{"packageName":"static-extend","version":"^0.1.2"},{"packageName":"use","version":"^2.0.0"}]},{"versionNumber":"0.5.1","timestamp":"2016-09-11T00:28:42.705Z","trustScore":6,"dependencies":[{"packageName":"define-property","version":"^0.2.5"},{"packageName":"extend-shallow","version":"^2.0.1"},{"packageName":"is-buffer","version":"^1.1.4"},{"packageName":"mixin-deep","version":"^1.1.3"},{"packageName":"object.omit","version":"^2.0.0"},{"packageName":"parse-link-header","version":"^0.4.1"},{"packageName":"simple-get","version":"^2.2.2"},{"packageName":"static-extend","version":"^0.1.2"},{"packageName":"use","version":"^2.0.0"}]},{"versionNumber":"0.5.2","timestamp":"2017-04-06T23:04:02.086Z","trustScore":6,"dependencies":[{"packageName":"define-property","version":"^0.2.5"},{"packageName":"extend-shallow","version":"^2.0.1"},{"packageName":"is-buffer","version":"^1.1.4"},{"packageName":"mixin-deep","version":"^1.1.3"},{"packageName":"object.omit","version":"^2.0.0"},{"packageName":"parse-link-header","version":"^0.4.1"},{"packageName":"simple-get","version":"^2.2.2"},{"packageName":"static-extend","version":"^0.1.2"},{"packageName":"use","version":"^2.0.0"}]},{"versionNumber":"0.5.3","timestamp":"2017-04-20T00:44:45.420Z","trustScore":5,"dependencies":[{"packageName":"define-property","version":"^0.2.5"},{"packageName":"extend-shallow","version":"^2.0.1"},{"packageName":"is-buffer","version":"^1.1.5"},{"packageName":"mixin-deep","version":"^1.2.0"},{"packageName":"object.omit","version":"^2.0.1"},{"packageName":"parse-link-header","version":"^0.4.1"},{"packageName":"simple-get","version":"^2.5.1"},{"packageName":"static-extend","version":"^0.1.2"},{"packageName":"use","version":"^3.0.0"}]},{"versionNumber":"0.5.4","timestamp":"2017-04-20T01:08:55.910Z","trustScore":6,"dependencies":[{"packageName":"define-property","version":"^0.2.5"},{"packageName":"extend-shallow","version":"^2.0.1"},{"packageName":"is-buffer","version":"^1.1.5"},{"packageName":"mixin-deep","version":"^1.2.0"},{"packageName":"object.omit","version":"^2.0.1"},{"packageName":"parse-link-header","version":"^0.4.1"},{"packageName":"simple-get","version":"^2.5.1"},{"packageName":"static-extend","version":"^0.1.2"},{"packageName":"use","version":"^3.0.0"}]},{"versionNumber":"1.0.0","timestamp":"2018-08-14T14:23:53.471Z","trustScore":12,"dependencies":[{"packageName":"get-value","version":"^3.0.1"},{"packageName":"needle","version":"^2.2.2"},{"packageName":"paged-request","version":"^1.0.2"},{"packageName":"parse-link-header","version":"^1.0.1"},{"packageName":"qs","version":"^6.5.1"},{"packageName":"use","version":"^3.1.0"}]}]}},"__N_SSG":true}