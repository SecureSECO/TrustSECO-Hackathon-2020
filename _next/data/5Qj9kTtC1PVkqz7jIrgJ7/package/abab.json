{"pageProps":{"postData":{"_id":"5fb668a79f9e7f16fd324a1d","id":"abab","crawlTimestamp":"19/11/2020 12:44:22","packageName":"abab","description":"WHATWG spec-compliant implementations of window.atob and window.btoa.","repository":{"type":"git","url":"git+https://github.com/jsdom/abab.git"},"readme":"# abab [![npm version](https://badge.fury.io/js/abab.svg)](https://www.npmjs.com/package/abab) [![Build Status](https://travis-ci.org/jsdom/abab.svg?branch=master)](https://travis-ci.org/jsdom/abab)\n\nA JavaScript module that implements `window.atob` and `window.btoa` according the forgiving-base64 algorithm in the [Infra Standard](https://infra.spec.whatwg.org/#forgiving-base64). The original code was forked from [w3c/web-platform-tests](https://github.com/w3c/web-platform-tests/blob/master/html/webappapis/atob/base64.html).\n\nCompatibility: Node.js version 3+ and all major browsers.\n\nInstall with `npm`:\n\n```sh\nnpm install abab\n```\n\n## API\n\n### `btoa` (base64 encode)\n\n```js\nconst { btoa } = require('abab');\nbtoa('Hello, world!'); // 'SGVsbG8sIHdvcmxkIQ=='\n```\n\n### `atob` (base64 decode)\n\n```js \nconst { atob } = require('abab');\natob('SGVsbG8sIHdvcmxkIQ=='); // 'Hello, world!'\n```\n\n#### Valid characters\n\n[Per the spec](https://html.spec.whatwg.org/multipage/webappapis.html#atob:dom-windowbase64-btoa-3), `btoa` will accept strings \"containing only characters in the range `U+0000` to `U+00FF`.\" If passed a string with characters above `U+00FF`, `btoa` will return `null`. If `atob` is passed a string that is not base64-valid, it will also return `null`. In both cases when `null` is returned, the spec calls for throwing a `DOMException` of type `InvalidCharacterError`.\n\n## Browsers\n\nIf you want to include just one of the methods to save bytes in your client-side code, you can `require` the desired module directly.\n\n```js\nconst atob = require('abab/lib/atob');\nconst btoa = require('abab/lib/btoa');\n```\n\n## Development\n\nIf you're **submitting a PR** or **deploying to npm**, please use the [checklists in CONTRIBUTING.md](CONTRIBUTING.md#checklists).\n\n## Remembering what `atob` and `btoa` stand for\n\nBase64 comes from IETF [RFC 4648](https://tools.ietf.org/html/rfc4648#section-4) (2006). \n\n- **`btoa`**, the encoder function, stands for **binary** to **ASCII**, meaning it converts any binary input into a subset of **ASCII** (Base64).\n- **`atob`**, the decoder function, converts **ASCII** (or Base64) to its original **binary** format. \n","homepage":"https://github.com/jsdom/abab#readme","trustScore":23,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":1,"not_brand_new":1,"one_point_oh":1,"dependent_projects":4,"dependent_repositories":5,"stars":2,"contributors":1,"subscribers":2,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":23},"versions":[{"versionNumber":"1.0.0","timestamp":"2015-09-01T22:49:15.325Z","trustScore":10,"dependencies":[]},{"versionNumber":"1.0.1","timestamp":"2015-11-13T23:21:16.230Z","trustScore":10,"dependencies":[]},{"versionNumber":"1.0.2","timestamp":"2015-12-30T22:40:50.762Z","trustScore":9,"dependencies":[]},{"versionNumber":"1.0.3","timestamp":"2016-01-12T01:24:59.282Z","trustScore":11,"dependencies":[]},{"versionNumber":"1.0.4","timestamp":"2017-09-21T01:34:13.957Z","trustScore":10,"dependencies":[]},{"versionNumber":"2.0.0","timestamp":"2018-04-20T20:50:04.550Z","trustScore":11,"dependencies":[]},{"versionNumber":"2.0.1","timestamp":"2019-08-28T22:53:41.111Z","trustScore":9,"dependencies":[]},{"versionNumber":"2.0.2","timestamp":"2019-09-24T22:50:47.819Z","trustScore":11,"dependencies":[]},{"versionNumber":"2.0.3","timestamp":"2019-11-13T01:35:55.331Z","trustScore":12,"dependencies":[]},{"versionNumber":"2.0.4","timestamp":"2020-08-01T04:57:35.236Z","trustScore":22,"dependencies":[]},{"versionNumber":"2.0.5","timestamp":"2020-09-11T19:11:09.611Z","trustScore":23,"dependencies":[]}]}},"__N_SSG":true}