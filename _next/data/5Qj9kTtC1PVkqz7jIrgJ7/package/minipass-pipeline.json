{"pageProps":{"postData":{"_id":"5fb666989f9e7f16fd32487f","id":"minipass-pipeline","crawlTimestamp":"19/11/2020 12:35:35","packageName":"minipass-pipeline","description":"create a pipeline of streams using Minipass","repository":"","readme":"# minipass-pipeline\n\nCreate a pipeline of streams using Minipass.\n\nCalls `.pipe()` on all the streams in the list.  Returns a stream where\nwrites got to the first pipe in the chain, and reads are from the last.\n\nErrors are proxied along the chain and emitted on the Pipeline stream.\n\n## USAGE\n\n```js\nconst Pipeline = require('minipass-pipeline')\n\n// the list of streams to pipeline together,\n// a bit like `input | transform | output` in bash\nconst p = new Pipeline(input, transform, output)\n\np.write('foo') // writes to input\np.on('data', chunk => doSomething()) // reads from output stream\n\n// less contrived example (but still pretty contrived)...\nconst decode = new bunzipDecoder()\nconst unpack = tar.extract({ cwd: 'target-dir' })\nconst tbz = new Pipeline(decode, unpack)\n\nfs.createReadStream('archive.tbz').pipe(tbz)\n\n// specify any minipass options if you like, as the first argument\n// it'll only try to pipeline event emitters with a .pipe() method\nconst p = new Pipeline({ objectMode: true }, input, transform, output)\n\n// If you don't know the things to pipe in right away, that's fine.\n// use p.push(stream) to add to the end, or p.unshift(stream) to the front\nconst databaseDecoderStreamDoohickey = (connectionInfo) => {\n  const p = new Pipeline()\n  logIntoDatabase(connectionInfo).then(connection => {\n    initializeDecoderRing(connectionInfo).then(decoderRing => {\n      p.push(connection, decoderRing)\n      getUpstreamSource(upstream => {\n        p.unshift(upstream)\n      })\n    })\n  })\n  // return to caller right away\n  // emitted data will be upstream -> connection -> decoderRing pipeline\n  return p\n}\n```\n\nPipeline is a [minipass](http://npm.im/minipass) stream, so it's as\nsynchronous as the streams it wraps.  It will buffer data until there is a\nreader, but no longer, so make sure to attach your listeners before you\npipe it somewhere else.\n\n## `new Pipeline(opts = {}, ...streams)`\n\nCreate a new Pipeline with the specified Minipass options and any streams\nprovided.\n\n## `pipeline.push(stream, ...)`\n\nAttach one or more streams to the pipeline at the end (read) side of the\npipe chain.\n\n## `pipeline.unshift(stream, ...)`\n\nAttach one or more streams to the pipeline at the start (write) side of the\npipe chain.\n","homepage":"","trustScore":13,"sourceRank":{"basic_info_present":0,"repository_present":0,"readme_present":0,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":1,"not_brand_new":1,"one_point_oh":1,"dependent_projects":2,"dependent_repositories":4,"stars":0,"contributors":0,"subscribers":1,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":13},"versions":[{"versionNumber":"1.0.0","timestamp":"2019-09-15T19:01:05.991Z","trustScore":6,"dependencies":[{"packageName":"minipass","version":"^2.5.1"}]},{"versionNumber":"1.0.1","timestamp":"2019-09-15T19:02:37.529Z","trustScore":6,"dependencies":[{"packageName":"minipass","version":"^2.5.1"}]},{"versionNumber":"1.0.2","timestamp":"2019-09-15T22:50:51.222Z","trustScore":7,"dependencies":[{"packageName":"minipass","version":"^2.5.1"}]},{"versionNumber":"1.1.0","timestamp":"2019-09-16T17:30:08.487Z","trustScore":6,"dependencies":[{"packageName":"minipass","version":"^2.5.1"}]},{"versionNumber":"1.1.1","timestamp":"2019-09-16T22:11:05.456Z","trustScore":6,"dependencies":[{"packageName":"minipass","version":"^2.6.2"}]},{"versionNumber":"1.1.2","timestamp":"2019-09-17T17:58:44.607Z","trustScore":7,"dependencies":[{"packageName":"minipass","version":"^2.6.4"}]},{"versionNumber":"1.2.0","timestamp":"2019-09-23T00:05:52.807Z","trustScore":7,"dependencies":[{"packageName":"minipass","version":"^2.8.1"}]},{"versionNumber":"1.2.1","timestamp":"2019-09-26T22:08:34.556Z","trustScore":6,"dependencies":[{"packageName":"minipass","version":"^2.8.1"}]},{"versionNumber":"1.2.2","timestamp":"2019-09-30T20:31:12.189Z","trustScore":6,"dependencies":[{"packageName":"minipass","version":"^3.0.0"}]},{"versionNumber":"1.2.3","timestamp":"2020-05-13T17:26:41.221Z","trustScore":12,"dependencies":[{"packageName":"minipass","version":"^3.0.0"}]},{"versionNumber":"1.2.4","timestamp":"2020-07-28T18:39:48.728Z","trustScore":13,"dependencies":[{"packageName":"minipass","version":"^3.0.0"}]}]}},"__N_SSG":true}