{"pageProps":{"postData":{"_id":"5fb663ee9f9e7f16fd324657","id":"ast-traverse","crawlTimestamp":"19/11/2020 12:24:12","packageName":"ast-traverse","description":"simple but flexible AST traversal with pre and post visitors","repository":{"type":"git","url":"https://github.com/olov/ast-traverse.git"},"readme":"# ast-traverse.js\nSimple but flexible AST traversal with pre and post visitors.\nWorks in node and browsers.\n\n\n\n## Usage\n```javascript\n// ast is a Mozilla Parser API compatible structure\n// generated by Esprima or another parser\nvar ast = require(\"esprima\").parse(\"f(1, x) + 2\");\n\nvar traverse = require(\"ast-traverse\");\n\n// print AST node types, pre-order (node first, then its children)\ntraverse(ast, {pre: function(node, parent, prop, idx) {\n    console.log(node.type + (parent ? \" from parent \" + parent.type +\n        \" via \" + prop + (idx !== undefined ? \"[\" + idx + \"]\" : \"\") : \"\"));\n}});\nconsole.log();\n/*\n =>\n Program\n ExpressionStatement from parent Program via body[0]\n BinaryExpression from parent ExpressionStatement via expression\n CallExpression from parent BinaryExpression via left\n Identifier from parent CallExpression via callee\n Literal from parent CallExpression via arguments[0]\n Identifier from parent CallExpression via arguments[1]\n Literal from parent BinaryExpression via right\n */\n\n\n// you can also visit post-order, or both\n// all four arguments are provided to both visitors (left out unused below)\nvar indent = 0;\ntraverse(ast, {\n    pre: function(node) {\n        console.log(Array(indent + 1).join(\" \") + node.type);\n        indent += 4;\n    },\n    post: function() {\n        indent -= 4;\n    }\n});\nconsole.log();\n/*\n=>\n Program\n ExpressionStatement\n BinaryExpression\n CallExpression\n Identifier\n Literal\n Identifier\n Literal\n*/\n\n\n// return false from the pre-visitor to skip traversing its children\n// throw an exception to abort traversal\n\n\n// by default node property names beginning with $ are skipped\n// but you can supply your own skipProperty function instead\ntraverse(ast, {\n    pre: function(node) {\n        console.log(node.type);\n    },\n    skipProperty: function(prop, node) {\n        return prop === \"parent\" || prop === \"expression\";\n    }\n});\n/*\n=>\n Program\n ExpressionStatement\n*/\n```\n\n\n\n## Installation\n\n### Node\nInstall using npm\n\n    npm install ast-traverse\n\n```javascript\nvar traverse = require(\"ast-traverse\");\n```\n\n### Browser\nClone the repo and include it in a script tag\n\n    git clone https://github.com/olov/ast-traverse.git\n\n```html\n<script src=\"ast-traverse/ast-traverse.js\"></script>\n```\n","homepage":"","trustScore":17,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":0,"dependent_projects":4,"dependent_repositories":4,"stars":1,"contributors":0,"subscribers":1,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":17},"versions":[{"versionNumber":"0.1.0","timestamp":"2013-09-01T09:16:29.587Z","trustScore":8,"dependencies":[]},{"versionNumber":"0.1.1","timestamp":"2013-09-20T20:57:48.445Z","trustScore":17,"dependencies":[]}]}},"__N_SSG":true}