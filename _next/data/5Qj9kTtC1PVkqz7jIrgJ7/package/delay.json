{"pageProps":{"postData":{"_id":"5fb6659c9f9e7f16fd3247ae","id":"delay","crawlTimestamp":"19/11/2020 12:31:22","packageName":"delay","description":"Delay a promise a specified amount of time","repository":{"type":"git","url":"git+https://github.com/sindresorhus/delay.git"},"readme":"# delay [![Build Status](https://travis-ci.com/sindresorhus/delay.svg?branch=master)](https://travis-ci.com/github/sindresorhus/delay)\n\n> Delay a promise a specified amount of time\n\n## Install\n\n```\n$ npm install delay\n```\n\n## Usage\n\n```js\nconst delay = require('delay');\n\n(async () => {\n\tbar();\n\n\tawait delay(100);\n\n\t// Executed 100 milliseconds later\n\tbaz();\n})();\n```\n\n## API\n\n### delay(milliseconds, options?)\n\nCreate a promise which resolves after the specified `milliseconds`.\n\n### delay.reject(milliseconds, options?)\n\nCreate a promise which rejects after the specified `milliseconds`.\n\n### delay.range(minimum, maximum, options?)\n\nCreate a promise which resolves after a random amount of milliseconds between `minimum` and `maximum` has passed.\n\nUseful for tests and web scraping since they can have unpredictable performance. For example, if you have a test that asserts a method should not take longer than a certain amount of time, and then run it on a CI, it could take longer. So with `.range()`, you could give it a threshold instead.\n\n#### milliseconds\n#### mininum\n#### maximum\n\nType: `number`\n\nMilliseconds to delay the promise.\n\n#### options\n\nType: `object`\n\n##### value\n\nType: `unknown`\n\nOptional value to resolve or reject in the returned promise.\n\n##### signal\n\nType: [`AbortSignal`](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal)\n\nThe returned promise will be rejected with an AbortError if the signal is aborted. AbortSignal is available in all modern browsers and there is a [ponyfill for Node.js](https://github.com/mysticatea/abort-controller).\n\n### delayPromise.clear()\n\nClears the delay and settles the promise.\n\n### delay.createWithTimers({clearTimeout, setTimeout})\n\nCreates a new `delay` instance using the provided functions for clearing and setting timeouts. Useful if you're about to stub timers globally, but you still want to use `delay` to manage your tests.\n\n## Advanced usage\n\nPassing a value:\n\n```js\nconst delay = require('delay');\n\n(async() => {\n\tconst result = await delay(100, {value: 'ðŸ¦„'});\n\n\t// Executed after 100 milliseconds\n\tconsole.log(result);\n\t//=> 'ðŸ¦„'\n})();\n```\n\nUsing `delay.reject()`, which optionally accepts a value and rejects it `ms` later:\n\n```js\nconst delay = require('delay');\n\n(async () => {\n\ttry {\n\t\tawait delay.reject(100, {value: new Error('ðŸ¦„')});\n\n\t\tconsole.log('This is never executed');\n\t} catch (error) {\n\t\t// 100 milliseconds later\n\t\tconsole.log(error);\n\t\t//=> [Error: ðŸ¦„]\n\t}\n})();\n```\n\nYou can settle the delay early by calling `.clear()`:\n\n```js\nconst delay = require('delay');\n\n(async () => {\n\tconst delayedPromise = delay(1000, {value: 'Done'});\n\n\tsetTimeout(() => {\n\t\tdelayedPromise.clear();\n\t}, 500);\n\n\t// 500 milliseconds later\n\tconsole.log(await delayedPromise);\n\t//=> 'Done'\n})();\n```\n\nYou can abort the delay with an AbortSignal:\n\n```js\nconst delay = require('delay');\n\n(async () => {\n\tconst abortController = new AbortController();\n\n\tsetTimeout(() => {\n\t\tabortController.abort();\n\t}, 500);\n\n\ttry {\n\t\tawait delay(1000, {signal: abortController.signal});\n\t} catch (error) {\n\t\t// 500 milliseconds later\n\t\tconsole.log(error.name)\n\t\t//=> 'AbortError'\n\t}\n})();\n```\n\nCreate a new instance that is unaffected by libraries such as [lolex](https://github.com/sinonjs/lolex/):\n\n```js\nconst delay = require('delay');\n\nconst customDelay = delay.createWithTimers({clearTimeout, setTimeout});\n\n(async() => {\n\tconst result = await customDelay(100, {value: 'ðŸ¦„'});\n\n\t// Executed after 100 milliseconds\n\tconsole.log(result);\n\t//=> 'ðŸ¦„'\n})();\n```\n\n## Related\n\n- [delay-cli](https://github.com/sindresorhus/delay-cli) - CLI for this module\n- [p-cancelable](https://github.com/sindresorhus/p-cancelable) - Create a promise that can be canceled\n- [p-min-delay](https://github.com/sindresorhus/p-min-delay) - Delay a promise a minimum amount of time\n- [p-immediate](https://github.com/sindresorhus/p-immediate) - Returns a promise resolved in the next event loop - think `setImmediate()`\n- [p-timeout](https://github.com/sindresorhus/p-timeout) - Timeout a promise after a specified amount of time\n- [Moreâ€¦](https://github.com/sindresorhus/promise-fun)\n","homepage":"https://github.com/sindresorhus/delay#readme","trustScore":24,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":1,"not_brand_new":1,"one_point_oh":1,"dependent_projects":6,"dependent_repositories":4,"stars":3,"contributors":1,"subscribers":1,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":24},"versions":[{"versionNumber":"0.0.1","timestamp":"2012-07-19T18:05:36.578Z","trustScore":10,"dependencies":[{"packageName":"pause","version":"0.0.1"}]},{"versionNumber":"1.0.0","timestamp":"2015-11-12T18:36:53.776Z","trustScore":12,"dependencies":[]},{"versionNumber":"1.1.0","timestamp":"2015-11-13T04:14:08.608Z","trustScore":13,"dependencies":[]},{"versionNumber":"1.2.0","timestamp":"2015-12-24T00:36:09.045Z","trustScore":10,"dependencies":[]},{"versionNumber":"1.3.0","timestamp":"2015-12-25T22:02:10.048Z","trustScore":11,"dependencies":[]},{"versionNumber":"1.3.1","timestamp":"2015-12-27T12:56:26.936Z","trustScore":10,"dependencies":[]},{"versionNumber":"2.0.0","timestamp":"2017-03-22T13:56:49.849Z","trustScore":11,"dependencies":[{"packageName":"p-defer","version":"^1.0.0"}]},{"versionNumber":"3.0.0","timestamp":"2018-05-25T16:41:07.544Z","trustScore":12,"dependencies":[]},{"versionNumber":"3.1.0","timestamp":"2018-08-20T18:24:14.002Z","trustScore":11,"dependencies":[]},{"versionNumber":"4.0.0","timestamp":"2018-09-03T04:01:06.939Z","trustScore":12,"dependencies":[]},{"versionNumber":"4.0.1","timestamp":"2018-09-10T12:26:15.695Z","trustScore":11,"dependencies":[]},{"versionNumber":"4.1.0","timestamp":"2018-10-10T08:57:56.913Z","trustScore":11,"dependencies":[]},{"versionNumber":"4.2.0","timestamp":"2019-04-08T11:01:38.966Z","trustScore":8,"dependencies":[]},{"versionNumber":"4.3.0","timestamp":"2019-06-12T18:13:34.427Z","trustScore":11,"dependencies":[]},{"versionNumber":"4.4.0","timestamp":"2020-07-18T14:00:22.465Z","trustScore":24,"dependencies":[]}]}},"__N_SSG":true}