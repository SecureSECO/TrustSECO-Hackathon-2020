{"pageProps":{"postData":{"_id":"5fb6664e9f9e7f16fd324845","id":"file-utils","crawlTimestamp":"19/11/2020 12:34:21","packageName":"file-utils","description":"Sync file utility for Node.js command line tools","repository":{"type":"git","url":"https://github.com/SBoudrias/file-utils"},"readme":"file-utils [![](https://travis-ci.org/SBoudrias/file-utils.png)](https://travis-ci.org/SBoudrias/file-utils)\n==========\n\nThis is a Grunt.file forks to allow the creation of scoped file utilities and the ability to add write filters.\n\nSame as Grunt.file, this is a set of _synchronous_ utility. As so, it should **never** be used on a Node.js server. This is meant for users/command line utilities.\n\n\nFile API\n=========\n\nUpcoming. Meanwhile, check [Grunt.file documentation](http://gruntjs.com/api/grunt.file) as the same methods are available.\n\n#### Setting options - `file.option( name, [ value ])`\n\n```\n// Set option\nfile.option('write', false);\n\n// Get option\nfile.option('write');\n```\n\n**Available Options**\n- `write` (Boolean): If write is set to `false`, then no file will be written or deleted. Useful for test run without side effets.\n- `logger` (Logger object): Used internally to log information to the console. **API still work in progress**\n- `encoding` (String): Defaults `utf8`. Set the default encoding used for reading/writing. Note most methods allow you to overwridde it for a single run.\n- `force` (Boolean): `force: true` Force the deletion of folders and file outside the utility scope (or CWD if no scope).\n\n\nENV scope and filters\n=========\n\n### Creating an Env - file#createEnv([ options ]);\n\n```javascript\nvar file = require('file-utils');\n\nvar env = file.createEnv({\n  base: 'my/scoped/path',\n  dest: 'destination/path' // optionnal\n});\n\n// Alternatively, they can be functions returning a path:\n\nvar env = file.createEnv({\n  base: function() {\n    return 'my/scoped/path';\n  },\n  dest: function() { // optionnal\n    return 'destination/path';\n  }\n});\n```\n\nThe `base` directory will prefix any paths passed to `mkdir`, `recurse`, `read`, `readJSON`, `write`, `delete`, `exists`, `isLink`, `isDir` and `isFile` methods.\n\nThe `dest` directory will prefix the `destination` path provided in the `copy` method. Note that this option is optionnal and will default to the current working directory.\n\nIf [options (`logger`, `write`, etc)](#setting-options---fileoption-name--value-) are not passed, each `Env` instance inherit those of its parent.\n\nWrite Filters\n---------\n\nWrite filters are applied on `env.write` and `env.copy`.\n\nThey're used to modifiy the content or the filepath of a file.\n\n#### Add a write filter - `env.registerWriteFilter( name, filter )`\n\n**options**\n- `name` (String): The name under which registering the filter\n- `filter` (Function): The filter function\n\nThe filter function take a file object as parameter. This file object is a hash containing a `path` and a `contents` property. You can modify these two property as you like and returning the modified object.\n\n```javascript\nenv.registerWriteFilter( 'coffee', function( file ) {\n  if (!path.extname(file) !== '.js') return file;\n\n  file.path = file.path.replace(/(\\.js)$/, '.coffee');\n  file.content = convertJsToCoffee( file.contents );\n\n  return file;\n});\n```\n\n#### Remove a write filter - `env.removeWriteFilter( name )`\n\n```javascript\nenv.removeWriteFilter('coffee');\n```\n\n#### Async filter\n\nThe filter can also be asynchronous. This is done by calling `this.async()` and passing the return value to the callback provided.\n\n```javascript\nenv.registerWriteFilter( 'coffee', function( file ) {\n  var done = this.async();\n\n  // some process\n  setTimeout(function() {\n    done({ path: '/newfile', contents: 'filtered content' });\n  }, 1000);\n});\n```\n\n**Caution:** Using an asynchronous filter will change the way write and copy method are called to. This will make both of those method to run asynchronously too.\n\nValidation Filters\n----------\n\nValidation filters are applied on `env.write` and `env.copy`.\n\nThey're used to allow or disallow the write action.\n\n#### Add a validation filter - `env.registerValidationFilter( name, filter )`\n\n**options**\n- `name` (String): The name under which registering the filter\n- `filter` (Function): The filter function\n\nThe filter function take a file object as parameter. This file object is a hash containing a `path` (String) and a `contents` (String if text file, Buffer otherwise) property.\n\nReturn `true` to allow the file to be written. Return `false` or an error message `String` to disallow the write action.\n\n```javascript\nenv.registerValidationFilter( 'checkConflicts', function( toOutput ) {\n  if ( file.exists(toOutput.path) ) {\n    return 'file is already present';\n  }\n  return true;\n});\n```\n\nJust like the write filters, [this filter can be asynchronous](#async-filter).\n\n#### Remove a validation filter - `env.removeValidationFilter( name )`\n\n```javascript\nenv.removeValidationFilter('checkConflicts');\n```\n\n\nTodos\n=========\n\n- Real Logging system\n","homepage":"https://github.com/SBoudrias/file-utils","trustScore":15,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":0,"dependent_projects":4,"dependent_repositories":3,"stars":1,"contributors":1,"subscribers":0,"all_prereleases":0,"any_outdated_dependencies":-1,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":15},"versions":[{"versionNumber":"0.0.1","timestamp":"2013-10-05T19:04:56.526Z","trustScore":7,"dependencies":[{"packageName":"lodash","version":"~2.1.0"},{"packageName":"iconv-lite","version":"~0.2.11"},{"packageName":"rimraf","version":"~2.2.2"},{"packageName":"glob","version":"~3.2.6"},{"packageName":"minimatch","version":"~0.2.12"},{"packageName":"findup-sync","version":"~0.1.2"}]},{"versionNumber":"0.1.0","timestamp":"2013-10-16T00:24:38.031Z","trustScore":7,"dependencies":[{"packageName":"lodash","version":"~2.1.0"},{"packageName":"iconv-lite","version":"~0.2.11"},{"packageName":"rimraf","version":"~2.2.2"},{"packageName":"glob","version":"~3.2.6"},{"packageName":"minimatch","version":"~0.2.12"},{"packageName":"findup-sync","version":"~0.1.2"}]},{"versionNumber":"0.1.1","timestamp":"2013-10-20T00:20:12.916Z","trustScore":6,"dependencies":[{"packageName":"lodash","version":"~2.1.0"},{"packageName":"iconv-lite","version":"~0.2.11"},{"packageName":"rimraf","version":"~2.2.2"},{"packageName":"glob","version":"~3.2.6"},{"packageName":"minimatch","version":"~0.2.12"},{"packageName":"findup-sync","version":"~0.1.2"}]},{"versionNumber":"0.1.2","timestamp":"2013-10-21T01:40:48.358Z","trustScore":6,"dependencies":[{"packageName":"lodash","version":"~2.1.0"},{"packageName":"iconv-lite","version":"~0.2.11"},{"packageName":"rimraf","version":"~2.2.2"},{"packageName":"glob","version":"~3.2.6"},{"packageName":"minimatch","version":"~0.2.12"},{"packageName":"findup-sync","version":"~0.1.2"}]},{"versionNumber":"0.1.3","timestamp":"2013-11-14T22:52:18.929Z","trustScore":6,"dependencies":[{"packageName":"lodash","version":"~2.1.0"},{"packageName":"iconv-lite","version":"~0.2.11"},{"packageName":"rimraf","version":"~2.2.2"},{"packageName":"glob","version":"~3.2.6"},{"packageName":"minimatch","version":"~0.2.12"},{"packageName":"findup-sync","version":"~0.1.2"}]},{"versionNumber":"0.1.4","timestamp":"2013-11-15T20:36:40.900Z","trustScore":6,"dependencies":[{"packageName":"lodash","version":"~2.1.0"},{"packageName":"iconv-lite","version":"~0.2.11"},{"packageName":"rimraf","version":"~2.2.2"},{"packageName":"glob","version":"~3.2.6"},{"packageName":"minimatch","version":"~0.2.12"},{"packageName":"findup-sync","version":"~0.1.2"},{"packageName":"isbinaryfile","version":"~0.1.9"}]},{"versionNumber":"0.1.5","timestamp":"2013-11-18T19:02:21.807Z","trustScore":7,"dependencies":[{"packageName":"lodash","version":"~2.1.0"},{"packageName":"iconv-lite","version":"~0.2.11"},{"packageName":"rimraf","version":"~2.2.2"},{"packageName":"glob","version":"~3.2.6"},{"packageName":"minimatch","version":"~0.2.12"},{"packageName":"findup-sync","version":"~0.1.2"},{"packageName":"isbinaryfile","version":"~0.1.9"}]},{"versionNumber":"0.2.0","timestamp":"2014-01-16T21:57:57.104Z","trustScore":7,"dependencies":[{"packageName":"lodash","version":"~2.4.1"},{"packageName":"iconv-lite","version":"~0.2.11"},{"packageName":"rimraf","version":"~2.2.2"},{"packageName":"glob","version":"~3.2.6"},{"packageName":"minimatch","version":"~0.2.12"},{"packageName":"findup-sync","version":"~0.1.2"},{"packageName":"isbinaryfile","version":"~2.0.0"}]},{"versionNumber":"0.2.1","timestamp":"2014-08-26T06:23:34.768Z","trustScore":6,"dependencies":[{"packageName":"findup-sync","version":"~0.1.2"},{"packageName":"glob","version":"~3.2.6"},{"packageName":"iconv-lite","version":"~0.4.3"},{"packageName":"isbinaryfile","version":"~2.0.1"},{"packageName":"lodash","version":"~2.4.1"},{"packageName":"minimatch","version":"~0.2.12"},{"packageName":"rimraf","version":"~2.2.2"}]},{"versionNumber":"0.2.2","timestamp":"2015-02-06T08:12:23.354Z","trustScore":15,"dependencies":[{"packageName":"findup-sync","version":"^0.2.1"},{"packageName":"glob","version":"^4.3.5"},{"packageName":"iconv-lite","version":"^0.4.3"},{"packageName":"isbinaryfile","version":"^2.0.1"},{"packageName":"lodash","version":"^2.4.1"},{"packageName":"minimatch","version":"^2.0.1"},{"packageName":"rimraf","version":"^2.2.2"}]}]}},"__N_SSG":true}