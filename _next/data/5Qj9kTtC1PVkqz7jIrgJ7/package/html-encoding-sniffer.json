{"pageProps":{"postData":{"_id":"5fb668989f9e7f16fd324a10","id":"html-encoding-sniffer","crawlTimestamp":"19/11/2020 12:44:06","packageName":"html-encoding-sniffer","description":"Sniff the encoding from a HTML byte stream","repository":{"type":"git","url":"git+https://github.com/jsdom/html-encoding-sniffer.git"},"readme":"# Determine the Encoding of a HTML Byte Stream\n\nThis package implements the HTML Standard's [encoding sniffing algorithm](https://html.spec.whatwg.org/multipage/syntax.html#encoding-sniffing-algorithm) in all its glory. The most interesting part of this is how it pre-scans the first 1024 bytes in order to search for certain `<meta charset>`-related patterns.\n\n```js\nconst htmlEncodingSniffer = require(\"html-encoding-sniffer\");\nconst fs = require(\"fs\");\n\nconst htmlBuffer = fs.readFileSync(\"./html-page.html\");\nconst sniffedEncoding = htmlEncodingSniffer(htmlBuffer);\n```\n\nThe returned value will be a canonical [encoding name](https://encoding.spec.whatwg.org/#names-and-labels) (not a label). You might then combine this with the [whatwg-encoding](https://github.com/jsdom/whatwg-encoding) package to decode the result:\n\n```js\nconst whatwgEncoding = require(\"whatwg-encoding\");\nconst htmlString = whatwgEncoding.decode(htmlBuffer, sniffedEncoding);\n```\n\n## Options\n\nYou can pass two potential options to `htmlEncodingSniffer`:\n\n```js\nconst sniffedEncoding = htmlEncodingSniffer(htmlBuffer, {\n  transportLayerEncodingLabel,\n  defaultEncoding\n});\n```\n\nThese represent two possible inputs into the [encoding sniffing algorithm](https://html.spec.whatwg.org/multipage/syntax.html#encoding-sniffing-algorithm):\n\n- `transportLayerEncodingLabel` is an encoding label that is obtained from the \"transport layer\" (probably a HTTP `Content-Type` header), which overrides everything but a BOM.\n- `defaultEncoding` is the ultimate fallback encoding used if no valid encoding is supplied by the transport layer, and no encoding is sniffed from the bytes. It defaults to `\"windows-1252\"`, as recommended by the algorithm's table of suggested defaults for \"All other locales\" (including the `en` locale).\n\n## Credits\n\nThis package was originally based on the excellent work of [@nicolashenry](https://github.com/nicolashenry), [in jsdom](https://github.com/tmpvar/jsdom/blob/16fd85618f2705d181232f6552125872a37164bc/lib/jsdom/living/helpers/encoding.js). It has since been pulled out into this separate package.\n","homepage":"https://github.com/jsdom/html-encoding-sniffer#readme","trustScore":20,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":4,"dependent_repositories":5,"stars":1,"contributors":0,"subscribers":2,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":20},"versions":[{"versionNumber":"1.0.0","timestamp":"2016-10-16T03:53:16.596Z","trustScore":10,"dependencies":[{"packageName":"whatwg-encoding","version":"^1.0.1"}]},{"versionNumber":"1.0.1","timestamp":"2016-10-16T04:23:09.751Z","trustScore":10,"dependencies":[{"packageName":"whatwg-encoding","version":"^1.0.1"}]},{"versionNumber":"1.0.2","timestamp":"2017-10-23T00:15:57.146Z","trustScore":10,"dependencies":[{"packageName":"whatwg-encoding","version":"^1.0.1"}]},{"versionNumber":"2.0.0","timestamp":"2020-01-05T17:12:58.185Z","trustScore":10,"dependencies":[{"packageName":"whatwg-encoding","version":"^1.0.5"}]},{"versionNumber":"2.0.1","timestamp":"2020-02-23T22:27:41.834Z","trustScore":20,"dependencies":[{"packageName":"whatwg-encoding","version":"^1.0.5"}]}]}},"__N_SSG":true}