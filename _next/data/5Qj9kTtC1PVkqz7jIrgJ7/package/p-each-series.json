{"pageProps":{"postData":{"_id":"5fb66aff9f9e7f16fd324bfb","id":"p-each-series","crawlTimestamp":"19/11/2020 12:54:21","packageName":"p-each-series","description":"Iterate over promises serially","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-each-series.git"},"readme":"# p-each-series [![Build Status](https://travis-ci.com/sindresorhus/p-each-series.svg?branch=master)](https://travis-ci.com/github/sindresorhus/p-each-series)\n\n> Iterate over promises serially\n\nUseful as a side-effect iterator. Prefer [`p-map`](https://github.com/sindresorhus/p-map) if you don't need side-effects, as it's concurrent.\n\n## Install\n\n```\n$ npm install p-each-series\n```\n\n## Usage\n\n```js\nconst pEachSeries = require('p-each-series');\n\nconst keywords = [\n\tgetTopKeyword(), //=> Promise\n\t'rainbow',\n\t'pony'\n];\n\nconst iterator = async element => saveToDiskPromise(element);\n\n(async () => {\n\tconsole.log(await pEachSeries(keywords, iterator));\n\t//=> ['unicorn', 'rainbow', 'pony']\n})();\n```\n\n## API\n\n### pEachSeries(input, iterator)\n\nReturns a `Promise` that is fulfilled when all promises in `input` and ones returned from `iterator` are fulfilled, or rejects if any of the promises reject. The fulfillment value is the original `input`.\n\n#### input\n\nType: `Iterable<Promise | unknown>`\n\nIterated over serially in the `iterator` function.\n\n#### iterator(element, index)\n\nType: `Function`\n\nReturn value is ignored unless it's `Promise`, then it's awaited before continuing with the next iteration.\n\n### pEachSeries.stop\n\nStop iterating through items by returning `pEachSeries.stop` from the iterator function.\n\n```js\nconst pEachSeries = require('p-each-series');\n\n// Logs `a` and `b`.\nconst result = await pEachSeries(['a', 'b', 'c'], value => {\n\tconsole.log(value);\n\n\tif (value === 'b') {\n\t\treturn pEachSeries.stop;\n\t}\n});\n\nconsole.log(result);\n//=> ['a', 'b', 'c']\n```\n\n## Related\n\n- [p-map-series](https://github.com/sindresorhus/p-map-series) - Map over promises serially\n- [p-series](https://github.com/sindresorhus/p-series) - Run promise-returning & async functions in series\n- [p-pipe](https://github.com/sindresorhus/p-pipe) - Compose promise-returning & async functions into a reusable pipeline\n- [p-waterfall](https://github.com/sindresorhus/p-waterfall) - Run promise-returning & async functions in series, each passing its result to the next\n- [p-reduce](https://github.com/sindresorhus/p-reduce) - Reduce a list of values using promises into a promise for a value\n- [p-map](https://github.com/sindresorhus/p-map) - Map over promises concurrently\n- [Moreâ€¦](https://github.com/sindresorhus/promise-fun)\n","homepage":"https://github.com/sindresorhus/p-each-series#readme","trustScore":21,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":1,"not_brand_new":1,"one_point_oh":1,"dependent_projects":4,"dependent_repositories":5,"stars":2,"contributors":0,"subscribers":1,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":21},"versions":[{"versionNumber":"1.0.0","timestamp":"2016-10-21T04:59:17.323Z","trustScore":10,"dependencies":[{"packageName":"p-reduce","version":"^1.0.0"}]},{"versionNumber":"2.0.0","timestamp":"2019-03-15T07:40:42.680Z","trustScore":10,"dependencies":[]},{"versionNumber":"2.1.0","timestamp":"2019-04-04T04:53:24.236Z","trustScore":9,"dependencies":[]},{"versionNumber":"2.2.0","timestamp":"2020-11-18T22:32:07.420Z","trustScore":21,"dependencies":[]}]}},"__N_SSG":true}