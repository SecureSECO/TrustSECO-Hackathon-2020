{"pageProps":{"postData":{"_id":"5fb6699f9f9e7f16fd324ae4","id":"loop","crawlTimestamp":"19/11/2020 12:48:30","packageName":"loop","description":"loop through commands in fun and amazing ways!","repository":{"type":"git","url":"git://github.com/mateodelnorte/loop.git"},"readme":"# loop\n[![Build Status](https://travis-ci.com/mateodelnorte/loop.svg?branch=master)](https://travis-ci.com/mateodelnorte/loop)\n\nloop expands commands to work simultaneously against any number of subdirectories in your current working path. Want to perform a `git status` on 15 projects at once? With loop, you can do it!\n\n```\n    loop executes a command against child directories within its current working directory\n\n    usage:\n\n      loop [command]                                      - execute a command against all child dirs\n      loop [\"command with multiple words in quotes\"]      - execute a multi-word command against all child dirs\n      loop --cwd ../other/working/directory               - execute a command against all child dirs, setting the working directory to another directory\n      loop --include comma,delimited,list,of,dirs         - execute a command against all child dirs including a number of directories which might otherwise be ignored, for instance, in .looprc\n      loop --include-only comma,delimited,list,of,dirs    - execute a command against all child dirs, ignoring .looprc, and only including the specified directories\n      loop --include-pattern 'regexp'                     - execute a command against all child dirs that match the regular expression\n      loop --exclude comma,delimited,list,of,dirs         - execute a command against all child dirs, excluding the specified directories\n      loop --exclude-only comma,delimited,list,of,dirs    - execute a command against all child dirs, excluding only the specified directories\n      loop --exclude-pattern 'regexp'                     - execute a command against all child dirs, excluding directories that match the regular expression\n      loop --init                                         - creates a .looprc in the current working directory\n\n    examples:\n\n      loop pwd\n      loop \"git status\"\n      loop \"git checkout -b feature/new-feature\"\n      loop \"git push origin feature/new-feature\"\n\n    .looprc:\n\n      directories containing a .looprc json file may have extra behavior, determined by properties within the file:\n\n        ignore (type Array) any child directory names listed in ignore will be ignored and skipped from execution\n\n    example .looprc:\n\n    {\n      \"ignore\": [ \".git\", \".vagrant\", \".vscode\", \"ansible\", \"node_modules\", \"scripts\" ]\n    }\n```\n\n## Installation\n\n`npm install -g loop`\n\n## Basic Usage\n\nloop installs a `loop` command which you can leverage from the command line, in your package.json scripts, etc. The syntax is super simple. Just `loop [your command]`. If the command you wish to run consists of multiple words, place the command in quotes: `loop \"your --you | really -R | long -o | command\"`. \n\nIn a folder with the following structure: \n```\n./git\n./bin\n./lib\n./node_modules\n./test\n./index.js\n./package.json\n```\n\nexecuting `loop pwd` yields the following results: \n```\n➜  nycnode-site git:(master) loop pwd\n\n.git\n/Users/mateodelnorte/development/nycnode/nycnode-site/.git\n\nlib\n/Users/mateodelnorte/development/nycnode/nycnode-site/lib\n\nnode_modules\n/Users/mateodelnorte/development/nycnode/nycnode-site/node_modules\n\ntest\n/Users/mateodelnorte/development/nycnode/nycnode-site/test\n```\n\n## .looprc\n\nloop can use a `.looprc` file to customize how loop behaves in a particular folder. Installing a `.looprc` file to a folder is simple: \n\n`loop --init` results in the following file being created: \n\n```\n{\n  \"ignore\": [ \".git\", \".vagrant\", \".vscode\", \"node_modules\" ]\n}\n```\n\nNow, when we perform the same command we did previously `loop pwd`, `loop` will recognize the `.looprc` file and see the `.git` folder is ignored - excluding it from the results: \n```\n➜  nycnode-site git:(master) loop pwd\n\nlib\n/Users/mateodelnorte/development/nycnode/nycnode-site/lib\n\nnode_modules\n/Users/mateodelnorte/development/nycnode/nycnode-site/node_modules\n\ntest\n/Users/mateodelnorte/development/nycnode/nycnode-site/test\n```\n\n## On to the Fun Stuff\n\nNeat, so now we can ignore folders that we don't work with directly. Imagine having a folder that contains all your project repositories for work. Wish you could find out how many files are in each? \n```\n➜  nycnode git:(master) ✗ loop \"find . -path ./node_modules -prune -o -type f  | wc -l\"\n\nnycnode-denormalizer\n125\n\nnycnode-meetup-ingestor\n148\n\nnycnode-site\n1106\n\nnycnode-user-ingestor\n103\n\nnycnode-youtube-ingestor\n81\n```\n\nBetter yet, what if you're starting a new feature that spans a distributed system composed of many microservices and a site or two? \n\n```\n➜  nycnode git:(master) ✗ loop \"git checkout master\"\n\nnycnode-denormalizer\nAlready on 'master'\n\nnycnode-meetup-ingestor\nAlready on 'master'\n\nnycnode-site\nAlready on 'master'\n\nnycnode-user-ingestor\nAlready on 'master'\n\nnycnode-youtube-ingestor\nAlready on 'master'\n\n➜  nycnode git:(master) ✗ loop \"git pull origin master\"\n\nnycnode-denormalizer\nFrom github.com:mateodelnorte/nycnode-denormalizer\n * branch            master     -> FETCH_HEAD\n\nnycnode-meetup-ingestor\nFrom github.com:mateodelnorte/nycnode-meetup-ingestor\n * branch            master     -> FETCH_HEAD\n\nnycnode-site\nFrom github.com:mateodelnorte/nycnode-site\n * branch            master     -> FETCH_HEAD\n\nnycnode-user-ingestor\nFrom github.com:mateodelnorte/nycnode-user-ingestor\n * branch            master     -> FETCH_HEAD\n\nnycnode-youtube-ingestor\nFrom github.com:mateodelnorte/nycnode-youtube-ingestor\n * branch            master     -> FETCH_HEAD\n \n➜  nycnode git:(master) ✗ loop \"git checkout -b feature/my-new-feature\"\n\nnycnode-denormalizer\nSwitched to a new branch 'feature/my-new-feature'\n\nnycnode-meetup-ingestor\nSwitched to a new branch 'feature/my-new-feature'\n\nnycnode-site\nSwitched to a new branch 'feature/my-new-feature'\n\nnycnode-user-ingestor\nSwitched to a new branch 'feature/my-new-feature'\n\nnycnode-youtube-ingestor\nSwitched to a new branch 'feature/my-new-feature'\n```\n\nNow you're ready to code away across your whole system! `loop \"git status\"` will show you your status across all repos. `loop \"git diff\"`, `loop \"git push origin feature/my-new-feature\"`, and other commands all work like you'd think!\n\n## TODO: \n- plugins\n","homepage":"https://github.com/mateodelnorte/loop#readme","trustScore":14,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":2,"dependent_repositories":2,"stars":2,"contributors":1,"subscribers":0,"all_prereleases":0,"any_outdated_dependencies":-1,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":14},"versions":[{"versionNumber":"2.1.1","timestamp":"2011-07-13T20:29:34.043Z","trustScore":6,"dependencies":[{"packageName":"future","version":">= 2.1.1"}]},{"versionNumber":"2.1.2","timestamp":"2014-01-13T18:17:42.658Z","trustScore":6,"dependencies":[{"packageName":"future","version":"2.x"}]},{"versionNumber":"3.0.0","timestamp":"2017-04-22T02:13:16.137Z","trustScore":7,"dependencies":[{"packageName":"async","version":"^2.1.4"},{"packageName":"chalk","version":"^1.1.3"},{"packageName":"debug","version":"^2.3.3"},{"packageName":"lodash","version":"^4.17.2"},{"packageName":"meta-exec","version":"0.0.0"},{"packageName":"mocha","version":"^3.2.0"},{"packageName":"should","version":"^11.1.2"},{"packageName":"yargs","version":"^6.5.0"}]},{"versionNumber":"3.0.1","timestamp":"2017-04-25T15:59:17.561Z","trustScore":5,"dependencies":[{"packageName":"async","version":"^2.1.4"},{"packageName":"chalk","version":"^1.1.3"},{"packageName":"debug","version":"^2.3.3"},{"packageName":"lodash","version":"^4.17.2"},{"packageName":"meta-exec","version":"0.0.4"},{"packageName":"mocha","version":"^3.2.0"},{"packageName":"should","version":"^11.1.2"},{"packageName":"yargs","version":"^6.5.0"}]},{"versionNumber":"3.0.2","timestamp":"2017-08-30T03:26:23.800Z","trustScore":6,"dependencies":[{"packageName":"async","version":"^2.1.4"},{"packageName":"chalk","version":"^1.1.3"},{"packageName":"debug","version":"^2.3.3"},{"packageName":"lodash","version":"^4.17.2"},{"packageName":"meta-exec","version":"^0.0.7"},{"packageName":"mocha","version":"^3.2.0"},{"packageName":"should","version":"^11.1.2"},{"packageName":"yargs","version":"^6.5.0"}]},{"versionNumber":"3.0.3","timestamp":"2018-03-16T22:48:17.774Z","trustScore":7,"dependencies":[{"packageName":"async","version":"^2.1.4"},{"packageName":"chalk","version":"^1.1.3"},{"packageName":"debug","version":"^2.3.3"},{"packageName":"lodash","version":"^4.17.2"},{"packageName":"meta-exec","version":"^0.0.7"},{"packageName":"mocha","version":"^3.2.0"},{"packageName":"should","version":"^11.1.2"},{"packageName":"yargs","version":"^6.5.0"}]},{"versionNumber":"3.0.6","timestamp":"2018-04-24T16:01:27.714Z","trustScore":7,"dependencies":[{"packageName":"async","version":"^2.1.4"},{"packageName":"chalk","version":"^1.1.3"},{"packageName":"debug","version":"^2.3.3"},{"packageName":"lodash","version":"^4.17.2"},{"packageName":"meta-exec","version":"^0.0.8"},{"packageName":"mocha","version":"^3.2.0"},{"packageName":"should","version":"^11.1.2"},{"packageName":"yargs","version":"^6.5.0"}]},{"versionNumber":"1.0.0","timestamp":"2018-12-21T03:09:11.894Z","trustScore":6,"dependencies":[{"packageName":"async","version":"^2.1.4"},{"packageName":"chalk","version":"^2.4.1"},{"packageName":"debug","version":"^4.1.0"},{"packageName":"lodash","version":"^4.17.2"},{"packageName":"meta-exec","version":"^1.0.0"},{"packageName":"mocha","version":"^5.2.0"},{"packageName":"should","version":"^13.2.3"},{"packageName":"yargs","version":"^12.0.5"}]},{"versionNumber":"3.1.1","timestamp":"2018-12-21T03:15:23.381Z","trustScore":8,"dependencies":[{"packageName":"async","version":"^2.1.4"},{"packageName":"chalk","version":"^2.4.1"},{"packageName":"debug","version":"^4.1.0"},{"packageName":"lodash","version":"^4.17.2"},{"packageName":"meta-exec","version":"^1.0.0"},{"packageName":"mocha","version":"^5.2.0"},{"packageName":"should","version":"^13.2.3"},{"packageName":"yargs","version":"^12.0.5"}]},{"versionNumber":"3.1.2","timestamp":"2019-02-12T15:41:11.108Z","trustScore":6,"dependencies":[{"packageName":"async","version":"^2.1.4"},{"packageName":"chalk","version":"^2.4.1"},{"packageName":"debug","version":"^4.1.0"},{"packageName":"lodash","version":"^4.17.2"},{"packageName":"meta-exec","version":"^1.0.0"},{"packageName":"mocha","version":"^5.2.0"},{"packageName":"should","version":"^13.2.3"},{"packageName":"yargs","version":"^13.0.0"}]},{"versionNumber":"3.1.3","timestamp":"2019-02-19T16:07:49.834Z","trustScore":6,"dependencies":[{"packageName":"async","version":"^2.1.4"},{"packageName":"chalk","version":"^2.4.1"},{"packageName":"debug","version":"^4.1.0"},{"packageName":"lodash","version":"^4.17.2"},{"packageName":"meta-exec","version":"^1.0.0"},{"packageName":"mocha","version":"^6.0.0"},{"packageName":"should","version":"^13.2.3"},{"packageName":"yargs","version":"^13.0.0"}]},{"versionNumber":"3.1.4","timestamp":"2019-06-11T18:38:39.974Z","trustScore":7,"dependencies":[{"packageName":"async","version":"^2.1.4"},{"packageName":"chalk","version":"^2.4.1"},{"packageName":"debug","version":"^4.1.0"},{"packageName":"lodash","version":"^4.17.2"},{"packageName":"meta-exec","version":"^1.0.0"},{"packageName":"should","version":"^13.2.3"},{"packageName":"yargs","version":"^13.0.0"}]},{"versionNumber":"3.2.0","timestamp":"2019-06-13T04:30:01.772Z","trustScore":6,"dependencies":[{"packageName":"async","version":"^3.0.0"},{"packageName":"chalk","version":"^2.4.1"},{"packageName":"debug","version":"^4.1.0"},{"packageName":"lodash","version":"^4.17.2"},{"packageName":"meta-exec","version":"^1.0.0"},{"packageName":"should","version":"^13.2.3"},{"packageName":"yargs","version":"^13.0.0"}]},{"versionNumber":"3.3.0","timestamp":"2019-06-13T06:54:55.976Z","trustScore":6,"dependencies":[{"packageName":"async","version":"^3.0.0"},{"packageName":"chalk","version":"^2.4.1"},{"packageName":"debug","version":"^4.1.0"},{"packageName":"lodash","version":"^4.17.2"},{"packageName":"meta-exec","version":"^1.0.0"},{"packageName":"should","version":"^13.2.3"},{"packageName":"yargs","version":"^13.0.0"}]},{"versionNumber":"3.3.1","timestamp":"2019-06-14T18:38:22.502Z","trustScore":6,"dependencies":[{"packageName":"async","version":"^3.0.0"},{"packageName":"chalk","version":"^2.4.1"},{"packageName":"debug","version":"^4.1.0"},{"packageName":"lodash","version":"^4.17.2"},{"packageName":"meta-exec","version":"^1.0.0"},{"packageName":"should","version":"^13.2.3"},{"packageName":"yargs","version":"^13.0.0"}]},{"versionNumber":"3.3.2","timestamp":"2019-07-10T21:27:13.604Z","trustScore":7,"dependencies":[{"packageName":"async","version":"^3.0.0"},{"packageName":"chalk","version":"^2.4.1"},{"packageName":"debug","version":"^4.1.0"},{"packageName":"lodash","version":"^4.17.2"},{"packageName":"meta-exec","version":"^1.4.1"},{"packageName":"should","version":"^13.2.3"},{"packageName":"yargs","version":"^13.0.0"}]},{"versionNumber":"3.3.3","timestamp":"2019-09-10T17:00:01.784Z","trustScore":7,"dependencies":[{"packageName":"async","version":"^3.0.0"},{"packageName":"chalk","version":"^2.4.1"},{"packageName":"debug","version":"^4.1.0"},{"packageName":"lodash","version":"^4.17.2"},{"packageName":"meta-exec","version":"^1.4.1"},{"packageName":"should","version":"^13.2.3"},{"packageName":"yargs","version":"^14.0.0"}]},{"versionNumber":"3.3.4","timestamp":"2019-11-26T18:05:33.952Z","trustScore":14,"dependencies":[{"packageName":"async","version":"^3.0.0"},{"packageName":"chalk","version":"^3.0.0"},{"packageName":"debug","version":"^4.1.0"},{"packageName":"lodash","version":"^4.17.2"},{"packageName":"meta-exec","version":"^1.4.1"},{"packageName":"should","version":"^13.2.3"},{"packageName":"yargs","version":"^14.0.0"}]}]}},"__N_SSG":true}