{"pageProps":{"postData":{"_id":"5fb666a39f9e7f16fd324887","id":"minipass-collect","crawlTimestamp":"19/11/2020 12:35:46","packageName":"minipass-collect","description":"A Minipass stream that collects all the data into a single chunk","repository":"","readme":"# minipass-collect\n\nA Minipass stream that collects all the data into a single chunk\n\nNote that this buffers ALL data written to it, so it's only good for\nsituations where you are sure the entire stream fits in memory.\n\nNote: this is primarily useful for the `Collect.PassThrough` class, since\nMinipass streams already have a `.collect()` method which returns a promise\nthat resolves to the array of chunks, and a `.concat()` method that returns\nthe data concatenated into a single Buffer or String.\n\n## USAGE\n\n```js\nconst Collect = require('minipass-collect')\n\nconst collector = new Collect()\ncollector.on('data', allTheData => {\n  console.log('all the data!', allTheData)\n})\n\nsomeSourceOfData.pipe(collector)\n\n// note that you can also simply do:\nsomeSourceOfData.pipe(new Minipass()).concat().then(data => ...)\n// or even, if someSourceOfData is a Minipass:\nsomeSourceOfData.concat().then(data => ...)\n// but you might prefer to have it stream-shaped rather than\n// Promise-shaped in some scenarios.\n```\n\nIf you want to collect the data, but _also_ act as a passthrough stream,\nthen use `Collect.PassThrough` instead (for example to memoize streaming\nresponses), and listen on the `collect` event.\n\n```js\nconst Collect = require('minipass-collect')\n\nconst collector = new Collect.PassThrough()\ncollector.on('collect', allTheData => {\n  console.log('all the data!', allTheData)\n})\n\nsomeSourceOfData.pipe(collector).pipe(someOtherStream)\n```\n\nAll [minipass options](http://npm.im/minipass) are supported.\n","homepage":"","trustScore":12,"sourceRank":{"basic_info_present":0,"repository_present":0,"readme_present":0,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":2,"dependent_repositories":4,"stars":0,"contributors":0,"subscribers":1,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":12},"versions":[{"versionNumber":"1.0.0","timestamp":"2019-09-15T22:24:54.411Z","trustScore":5,"dependencies":[{"packageName":"minipass","version":"^2.5.1"}]},{"versionNumber":"1.0.1","timestamp":"2019-09-15T23:02:38.518Z","trustScore":6,"dependencies":[{"packageName":"minipass","version":"^2.5.1"}]},{"versionNumber":"1.0.2","timestamp":"2019-09-30T20:57:08.179Z","trustScore":12,"dependencies":[{"packageName":"minipass","version":"^3.0.0"}]}]}},"__N_SSG":true}