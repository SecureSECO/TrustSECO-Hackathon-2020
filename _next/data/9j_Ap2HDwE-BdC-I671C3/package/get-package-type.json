{"pageProps":{"postData":{"_id":"5fb666f79f9e7f16fd3248c4","id":"get-package-type","crawlTimestamp":"19/11/2020 12:37:04","packageName":"get-package-type","description":"Determine the `package.json#type` which applies to a location","repository":{"type":"git","url":"git+https://github.com/cfware/get-package-type.git"},"readme":"# get-package-type [![NPM Version][npm-image]][npm-url]\n\nDetermine the `package.json#type` which applies to a location.\n\n## Usage\n\n```js\nconst getPackageType = require('get-package-type');\n\n(async () => {\n  console.log(await getPackageType('file.js'));\n  console.log(getPackageType.sync('file.js'));\n})();\n```\n\nThis function does not validate the value found in `package.json#type`.  Any truthy value\nfound will be returned.  Non-truthy values will be reported as `commonjs`.\n\nThe argument must be a filename.\n```js\n// This never looks at `dir1/`, first attempts to load `./package.json`.\nconst type1 = await getPackageType('dir1/');\n\n// This attempts to load `dir1/package.json`.\nconst type2 = await getPackageType('dir1/index.cjs');\n```\n\nThe extension of the filename does not effect the result.  The primary use case for this\nmodule is to determine if `myapp.config.js` should be loaded with `require` or `import`.\n\n[npm-image]: https://img.shields.io/npm/v/get-package-type.svg\n[npm-url]: https://npmjs.org/package/get-package-type\n","homepage":"https://github.com/cfware/get-package-type#readme","trustScore":11,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":0,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":0,"dependent_projects":4,"dependent_repositories":0,"stars":0,"contributors":0,"subscribers":1,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":11},"versions":[{"versionNumber":"0.1.0","timestamp":"2020-05-19T09:28:37.496Z","trustScore":11,"dependencies":[]}]}},"__N_SSG":true}