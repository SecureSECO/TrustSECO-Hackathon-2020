{"pageProps":{"postData":{"_id":"5fb66a249f9e7f16fd324b4f","id":"esformatter-var-each","crawlTimestamp":"19/11/2020 12:50:42","packageName":"esformatter-var-each","description":"Esformatter plugin that converts comma `var` statements into separate `var` statements","repository":{"type":"git","url":"git://github.com/twolfson/esformatter-var-each.git"},"readme":"# esformatter-var-each [![Build status](https://travis-ci.org/twolfson/esformatter-var-each.png?branch=master)](https://travis-ci.org/twolfson/esformatter-var-each)\n\n[Esformatter][] plugin that converts comma `var` statements into separate `var` statements\n\nThis was created to make obfuscated scripts more palatable. However, it should be a nice addition to your web development tasks.\n\n[Esformatter]: https://github.com/millermedeiros/esformatter\n\n**Features:**\n\n- Preserves last character of `var's` (e.g. `var a, b;` -> `var a; var b;`)\n- Maintain indentation level of `var's`\n\n## Getting Started\nInstall the module with: `npm install esformatter-var-each`\n\nThen, register it as a plugin and format your JS:\n\n```js\n// Load and register our plugin\nvar esformatter = require('esformatter');\nvar esformatterVarEach = require('esformatter-var-each');\nesformatter.register(esformatterVarEach);\n\n// Format our code\nesformatter.format([\n  'var a = \\'hello\\',',\n  '    b = \\'world\\';'\n].join('\\n'));\n// var a = 'hello';\n// var b = 'world';\n```\n\nAlternatively, load it via `format` directly:\n\n```js\nvar esformatter = require('esformatter');\nesformatter.format([\n  'var a = \\'hello\\',',\n  '    b = \\'world\\';'\n].join('\\n'), {\n  plugins: [\n    'esformatter-var-each'\n  ]\n});\n```\n\n## Documentation\n`esformatter-var-each` exposes `exports.transform` for consumption by `esformatter`.\n\n### `esformatterVarEach.transform(ast)`\nWalk [AST][] and splice in `var` statements.\n\n**Warning: This mutates nodes in place**\n\n- ast `AbstractSyntaxTree` - Abstract syntax tree provided by `esformatter`\n\n[AST]: http://en.wikipedia.org/wiki/Abstract_syntax_tree\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint via [grunt](https://github.com/gruntjs/grunt) and test via `npm test`.\n\n## Donating\nSupport this project and [others by twolfson][gratipay] via [gratipay][].\n\n[![Support via Gratipay][gratipay-badge]][gratipay]\n\n[gratipay-badge]: https://cdn.rawgit.com/gratipay/gratipay-badge/2.x.x/dist/gratipay.png\n[gratipay]: https://www.gratipay.com/twolfson/\n\n## Unlicense\nAs of Nov 03 2014, Todd Wolfson has released this repository and its contents to the public domain.\n\nIt has been released under the [UNLICENSE][].\n\n[UNLICENSE]: UNLICENSE\n","homepage":"https://github.com/twolfson/esformatter-var-each","trustScore":14,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":4,"dependent_repositories":2,"stars":1,"contributors":0,"subscribers":0,"all_prereleases":0,"any_outdated_dependencies":-1,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":14},"versions":[{"versionNumber":"1.0.0","timestamp":"2014-11-04T10:58:20.578Z","trustScore":6,"dependencies":[{"packageName":"rocambole","version":"~0.3.6"}]},{"versionNumber":"2.0.0","timestamp":"2015-06-27T11:03:48.842Z","trustScore":6,"dependencies":[{"packageName":"rocambole","version":"~0.3.6"},{"packageName":"rocambole-token","version":"~1.2.1"}]},{"versionNumber":"2.0.1","timestamp":"2015-06-27T11:16:30.726Z","trustScore":7,"dependencies":[{"packageName":"rocambole","version":"~0.3.6"},{"packageName":"rocambole-token","version":"~1.2.1"}]},{"versionNumber":"2.1.0","timestamp":"2015-08-03T03:27:10.791Z","trustScore":14,"dependencies":[{"packageName":"rocambole","version":"~0.3.6"},{"packageName":"rocambole-token","version":"~1.2.1"}]}]}},"__N_SSG":true}