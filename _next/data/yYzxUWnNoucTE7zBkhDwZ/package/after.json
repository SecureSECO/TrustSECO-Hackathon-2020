{"pageProps":{"postData":{"_id":"5fb666749f9e7f16fd324866","id":"after","crawlTimestamp":"19/11/2020 12:34:59","packageName":"after","description":"after - tiny flow control","repository":{"type":"git","url":"git://github.com/Raynos/after.git"},"readme":"# After [![Build Status][1]][2]\n\nInvoke callback after n calls\n\n## Status: production ready\n\n## Example\n\n```js\nvar after = require(\"after\")\nvar db = require(\"./db\") // some db.\n\nvar updateUser = function (req, res) {\n  // use after to run two tasks in parallel,\n  // namely get request body and get session\n  // then run updateUser with the results\n  var next = after(2, updateUser)\n  var results = {}\n  \n  getJSONBody(req, res, function (err, body) {\n    if (err) return next(err)\n    \n    results.body = body\n    next(null, results)\n  })\n  \n  getSessionUser(req, res, function (err, user) {\n    if (err) return next(err)\n    \n    results.user = user\n    next(null, results)\n  })\n  \n  // now do the thing!\n  function updateUser(err, result) {\n    if (err) {\n      res.statusCode = 500\n      return res.end(\"Unexpected Error\")\n    }\n    \n    if (!result.user || result.user.role !== \"admin\") {\n      res.statusCode = 403\n      return res.end(\"Permission Denied\")\n    }\n    \n    db.put(\"users:\" + req.params.userId, result.body, function (err) {\n      if (err) {\n        res.statusCode = 500\n        return res.end(\"Unexpected Error\")\n      }\n      \n      res.statusCode = 200\n      res.end(\"Ok\")  \n    })   \n  }\n}\n```\n\n## Naive Example\n\n```js\nvar after = require(\"after\")\n    , next = after(3, logItWorks)\n\nnext()\nnext()\nnext() // it works\n\nfunction logItWorks() {\n    console.log(\"it works!\")\n}\n```\n\n## Example with error handling\n\n```js\nvar after = require(\"after\")\n    , next = after(3, logError)\n\nnext()\nnext(new Error(\"oops\")) // logs oops\nnext() // does nothing\n\n// This callback is only called once.\n// If there is an error the callback gets called immediately\n// this avoids the situation where errors get lost.\nfunction logError(err) {\n    console.log(err)\n}\n```\n\n## Installation\n\n`npm install after`\n\n## Tests\n\n`npm test`\n\n## Contributors\n\n - Raynos\n - defunctzombie\n\n## MIT Licenced\n\n  [1]: https://secure.travis-ci.org/Raynos/after.png\n  [2]: http://travis-ci.org/Raynos/after\n  [3]: http://raynos.org/blog/2/Flow-control-in-node.js\n  [4]: http://stackoverflow.com/questions/6852059/determining-the-end-of-asynchronous-operations-javascript/6852307#6852307\n  [5]: http://stackoverflow.com/questions/6869872/in-javascript-what-are-best-practices-for-executing-multiple-asynchronous-functi/6870031#6870031\n  [6]: http://stackoverflow.com/questions/6864397/javascript-performance-long-running-tasks/6889419#6889419\n  [7]: http://stackoverflow.com/questions/6597493/synchronous-database-queries-with-node-js/6620091#6620091\n  [8]: http://github.com/Raynos/iterators\n  [9]: http://github.com/Raynos/composite\n","homepage":"https://github.com/Raynos/after#readme","trustScore":23,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":0,"dependent_projects":6,"dependent_repositories":5,"stars":2,"contributors":1,"subscribers":2,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":23},"versions":[{"versionNumber":"0.1.0","timestamp":"2011-12-08T01:56:13.312Z","trustScore":11,"dependencies":[]},{"versionNumber":"0.1.3","timestamp":"2011-12-08T01:56:13.312Z","trustScore":11,"dependencies":[]},{"versionNumber":"0.1.4","timestamp":"2011-12-08T01:56:13.312Z","trustScore":9,"dependencies":[]},{"versionNumber":"0.1.5","timestamp":"2011-12-08T01:56:13.312Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.1.6","timestamp":"2011-12-08T01:56:13.312Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.1.7","timestamp":"2011-11-10T15:31:29.230Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.1.8","timestamp":"2011-12-02T18:29:43.571Z","trustScore":11,"dependencies":[]},{"versionNumber":"0.2.0","timestamp":"2011-12-08T01:56:13.312Z","trustScore":9,"dependencies":[]},{"versionNumber":"0.3.1","timestamp":"2012-01-30T01:04:13.451Z","trustScore":12,"dependencies":[]},{"versionNumber":"0.3.2","timestamp":"2012-02-28T11:38:51.930Z","trustScore":11,"dependencies":[]},{"versionNumber":"0.3.3","timestamp":"2012-03-04T20:38:46.024Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.3.4","timestamp":"2012-04-11T23:44:38.170Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.4.0","timestamp":"2012-04-23T10:50:58.605Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.4.1","timestamp":"2012-05-08T19:20:57.272Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.5.0","timestamp":"2012-05-30T15:58:26.661Z","trustScore":10,"dependencies":[]},{"versionNumber":"0.6.0","timestamp":"2012-07-15T06:05:34.045Z","trustScore":9,"dependencies":[]},{"versionNumber":"0.7.0","timestamp":"2013-02-26T22:21:25.548Z","trustScore":9,"dependencies":[]},{"versionNumber":"0.8.1","timestamp":"2013-06-30T06:09:40.954Z","trustScore":9,"dependencies":[]},{"versionNumber":"0.8.2","timestamp":"2016-08-16T00:50:39.441Z","trustScore":23,"dependencies":[]}]}},"__N_SSG":true}