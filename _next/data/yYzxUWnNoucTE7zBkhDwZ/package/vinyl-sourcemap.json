{"pageProps":{"postData":{"_id":"5fb66b839f9e7f16fd324c5a","id":"vinyl-sourcemap","crawlTimestamp":"19/11/2020 12:56:34","packageName":"vinyl-sourcemap","description":"Add/write sourcemaps to/from Vinyl files.","repository":{"type":"git","url":"git+https://github.com/gulpjs/vinyl-sourcemap.git"},"readme":"<p align=\"center\">\n  <a href=\"http://gulpjs.com\">\n    <img height=\"257\" width=\"114\" src=\"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png\">\n  </a>\n</p>\n\n# vinyl-sourcemap\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Build Status][travis-image]][travis-url] [![AppVeyor Build Status][appveyor-image]][appveyor-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![Gitter chat][gitter-image]][gitter-url]\n\nAdd/write sourcemaps to/from Vinyl files.\n\n## Usage\n\n```js\nsourcemap.add(file, function(err, updatedFile) {\n  // updatedFile will have a .sourceMap property\n});\n\n// The 2nd argument can be given as a path string\nsourcemap.write(file, './maps', function(err, updatedFile, sourcemapFile) {\n  // sourcemapFile will be a Vinyl file to be written to some location\n  // updatedFile will have the .contents property updated with a sourceMappingURL that resolves to sourcemapFile\n});\n\n// If not defined, the sourcemap is inlined\nsourcemap.write(file, function(err, updatedFile, sourcemapFile) {\n  // sourcemapFile is undefined\n  // updatedFile will have the .contents property updated with a sourceMappingURL that is an inlined sourcemap\n});\n```\n\n## API\n\n### `sourcemap.add(file, callback)`\n\nTakes a [Vinyl][vinyl] `file` object and a `callback` function. It attempts to parse an inline sourcemap or load an external sourcemap for the file. If a valid sourcemap is found, the `sources` & `sourcesContent` properties are resolved to actual files (if possible) and a fully resolved sourcemap is attached as `file.sourceMap`. If a sourcemap is not found, a stub sourcemap is generated for the file and attached as `file.sourceMap`.\n\nOnce all resolution is complete, the `callback(err, updatedFile)` is called with the `updatedFile`. If an error occurs, it will be passed as `err` and `updatedFile` will be undefined. __Note:__ The original file is mutated but `updatedFile` is passed to the callback as a convenience.\n\nIf the `file` is not a Vinyl object or the contents are streaming, an Error will be passed to the `callback`.\n\nIf the `file` has a `.sourceMap` property or the contents are null, the `callback` will be called immediately without mutation to the file.\n\nAll filesystem operations are optional & non-fatal so any errors will not be bubbled to the `callback`.\n\n### `sourcemap.write(file, [outputPath,] callback)`\n\nTakes a [Vinyl][vinyl] `file` object, (optionally) an `outputPath` string and a `callback` function.\n\nIf `outputPath` is not passed, an inline sourcemap will be generated from the `file.sourceMap` property and appended to the `file.contents`. Once the inline sourcemap is appended, the `callback(err, updatedFile)` is called with the `updatedFile`. If an error occurs, it will be passed as `err` and `updatedFile` will be undefined. __Note:__ The original file is mutated but `updatedFile` is passed to the callback as a convenience.\n\nIf `outputPath` is passed, a new Vinyl file will be generated using `file.cwd` and `file.base` from the original file, the path to the external sourcemap, and the `file.sourceMap` (as contents). The external location will be appended to the `file.contents` of the original file. Once the new file is created and location appended, the `callback(err, updatedFile, sourcemapFile)` is called with the `updatedFile` and the `sourcemapFile`. If an error occurs, it will be passed as `err` and `updatedFile`/`sourcemapFile` will be undefined. __Note:__ The original file is mutated but `updatedFile` is passed to the callback as a convenience.\n\nIf the `file` is not a Vinyl object or the contents are streaming, an Error will be passed to the `callback`.\n\nIf the `file` doesn't have a `.sourceMap` property or the contents are null, the `callback` will be called immediately without mutation to the file.\n\n## License\n\nMIT\n\n[vinyl]: https://github.com/gulpjs/vinyl\n\n[downloads-image]: http://img.shields.io/npm/dm/vinyl-sourcemap.svg\n[npm-url]: https://npmjs.com/package/vinyl-sourcemap\n[npm-image]: http://img.shields.io/npm/v/vinyl-sourcemap.svg\n\n[travis-url]: https://travis-ci.org/gulpjs/vinyl-sourcemap\n[travis-image]: http://img.shields.io/travis/gulpjs/vinyl-sourcemap.svg?label=travis-ci\n\n[appveyor-url]: https://ci.appveyor.com/project/gulpjs/vinyl-sourcemap\n[appveyor-image]: https://img.shields.io/appveyor/ci/gulpjs/vinyl-sourcemap.svg?label=appveyor\n\n[coveralls-url]: https://coveralls.io/r/gulpjs/vinyl-sourcemap\n[coveralls-image]: http://img.shields.io/coveralls/gulpjs/vinyl-sourcemap/master.svg\n\n[gitter-url]: https://gitter.im/gulpjs/gulp\n[gitter-image]: https://badges.gitter.im/gulpjs/gulp.png\n","homepage":"https://github.com/gulpjs/vinyl-sourcemap#readme","trustScore":15,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":2,"dependent_repositories":4,"stars":1,"contributors":0,"subscribers":1,"all_prereleases":0,"any_outdated_dependencies":-1,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":15},"versions":[{"versionNumber":"0.1.0","timestamp":"2017-03-14T01:27:35.852Z","trustScore":7,"dependencies":[{"packageName":"acorn","version":"^4.0.3"},{"packageName":"async","version":"^2.1.4"},{"packageName":"convert-source-map","version":"1.3.0"},{"packageName":"css","version":"^2.2.1"},{"packageName":"detect-newline","version":"^2.1.0"},{"packageName":"graceful-fs","version":"^4.1.6"},{"packageName":"source-map","version":"^0.5.6"},{"packageName":"through2","version":"^2.0.1"},{"packageName":"vinyl","version":"^1.2.0"}]},{"versionNumber":"0.1.1","timestamp":"2017-03-16T23:12:02.841Z","trustScore":6,"dependencies":[{"packageName":"acorn","version":"^4.0.3"},{"packageName":"async","version":"^2.1.4"},{"packageName":"convert-source-map","version":"1.3.0"},{"packageName":"css","version":"^2.2.1"},{"packageName":"detect-newline","version":"^2.1.0"},{"packageName":"graceful-fs","version":"^4.1.6"},{"packageName":"source-map","version":"^0.5.6"},{"packageName":"strip-bom","version":"^2.0.0"},{"packageName":"through2","version":"^2.0.1"},{"packageName":"vinyl","version":"^1.2.0"}]},{"versionNumber":"0.2.0","timestamp":"2017-03-20T23:01:15.253Z","trustScore":6,"dependencies":[{"packageName":"acorn","version":"^4.0.3"},{"packageName":"async","version":"^2.1.4"},{"packageName":"convert-source-map","version":"1.3.0"},{"packageName":"css","version":"^2.2.1"},{"packageName":"detect-newline","version":"^2.1.0"},{"packageName":"graceful-fs","version":"^4.1.6"},{"packageName":"source-map","version":"^0.5.6"},{"packageName":"strip-bom","version":"^2.0.0"},{"packageName":"through2","version":"^2.0.1"},{"packageName":"vinyl","version":"^1.2.0"}]},{"versionNumber":"0.3.0","timestamp":"2017-03-23T23:48:57.696Z","trustScore":7,"dependencies":[{"packageName":"acorn","version":"^4.0.3"},{"packageName":"async","version":"^2.1.4"},{"packageName":"convert-source-map","version":"1.3.0"},{"packageName":"css","version":"^2.2.1"},{"packageName":"detect-newline","version":"^2.1.0"},{"packageName":"graceful-fs","version":"^4.1.6"},{"packageName":"object.defaults","version":"^1.0.0"},{"packageName":"source-map","version":"^0.5.6"},{"packageName":"strip-bom","version":"^2.0.0"},{"packageName":"through2","version":"^2.0.1"},{"packageName":"vinyl","version":"^1.2.0"}]},{"versionNumber":"0.4.0","timestamp":"2017-05-03T17:20:47.990Z","trustScore":7,"dependencies":[{"packageName":"async","version":"^2.1.4"},{"packageName":"convert-source-map","version":"^1.5.0"},{"packageName":"file-normalize","version":"^1.1.0"},{"packageName":"graceful-fs","version":"^4.1.6"},{"packageName":"object.defaults","version":"^1.0.0"},{"packageName":"vinyl","version":"^2.0.0"}]},{"versionNumber":"1.0.0","timestamp":"2017-06-18T20:20:06.680Z","trustScore":8,"dependencies":[{"packageName":"convert-source-map","version":"^1.5.0"},{"packageName":"file-normalize","version":"^1.1.0"},{"packageName":"graceful-fs","version":"^4.1.6"},{"packageName":"now-and-later","version":"^2.0.0"},{"packageName":"vinyl","version":"^2.0.0"}]},{"versionNumber":"1.1.0","timestamp":"2017-08-01T19:36:06.962Z","trustScore":15,"dependencies":[{"packageName":"append-buffer","version":"^1.0.2"},{"packageName":"convert-source-map","version":"^1.5.0"},{"packageName":"graceful-fs","version":"^4.1.6"},{"packageName":"normalize-path","version":"^2.1.1"},{"packageName":"now-and-later","version":"^2.0.0"},{"packageName":"remove-bom-buffer","version":"^3.0.0"},{"packageName":"vinyl","version":"^2.0.0"}]}]}},"__N_SSG":true}