{"pageProps":{"postData":{"_id":"5fb668969f9e7f16fd324a0f","id":"whatwg-encoding","crawlTimestamp":"19/11/2020 12:44:05","packageName":"whatwg-encoding","description":"Decode strings according to the WHATWG Encoding Standard","repository":{"type":"git","url":"git+https://github.com/jsdom/whatwg-encoding.git"},"readme":"# Decode According to the WHATWG Encoding Standard\n\nThis package provides a thin layer on top of [iconv-lite](https://github.com/ashtuchkin/iconv-lite) which makes it expose some of the same primitives as the [Encoding Standard](https://encoding.spec.whatwg.org/).\n\n```js\nconst whatwgEncoding = require(\"whatwg-encoding\");\n\nconsole.assert(whatwgEncoding.labelToName(\"latin1\") === \"windows-1252\");\nconsole.assert(whatwgEncoding.labelToName(\"  CYRILLic \") === \"ISO-8859-5\");\n\nconsole.assert(whatwgEncoding.isSupported(\"IBM866\") === true);\n\n// Not supported by the Encoding Standard\nconsole.assert(whatwgEncoding.isSupported(\"UTF-32\") === false);\n\n// In the Encoding Standard, but this package can't decode it\nconsole.assert(whatwgEncoding.isSupported(\"x-mac-cyrillic\") === false);\n\nconsole.assert(whatwgEncoding.getBOMEncoding(new Buffer([0xFE, 0xFF])) === \"UTF-16BE\");\nconsole.assert(whatwgEncoding.getBOMEncoding(new Buffer([0x48, 0x69])) === null);\n\nconsole.assert(whatwgEncoding.decode(new Buffer([0x48, 0x69]), \"UTF-8\") === \"Hi\");\n```\n\n## API\n\n- `decode(buffer, fallbackEncodingName)`: performs the [decode](https://encoding.spec.whatwg.org/#decode) algorithm (in which any BOM will override the passed fallback encoding), and returns the resulting string\n- `labelToName(label)`: performs the [get an encoding](https://encoding.spec.whatwg.org/#concept-encoding-get) algorithm and returns the resulting encoding's name, or `null` for failure\n- `isSupported(name)`: returns whether the encoding is one of [the encodings](https://encoding.spec.whatwg.org/#names-and-labels) of the Encoding Standard, _and_ is an encoding that this package can decode (via iconv-lite)\n- `getBOMEncoding(buffer)`: sniffs the first 2â€“3 bytes of the supplied `Buffer`, returning one of the encoding names `\"UTF-8\"`, `\"UTF-16LE\"`, or `\"UTF-16BE\"` if the appropriate BOM is present, or `null` if no BOM is present\n\n## Unsupported encodings\n\nSince we rely on iconv-lite, we are limited to support only the encodings that they support. Currently we are missing support for:\n\n- ISO-2022-JP\n- ISO-8859-8-I\n- replacement\n- x-mac-cyrillic\n- x-user-defined\n\nPassing these encoding names will return `false` when calling `isSupported`, and passing any of the possible labels for these encodings to `labelToName` will return `null`.\n\n## Credits\n\nThis package was originally based on the excellent work of [@nicolashenry](https://github.com/nicolashenry), [in jsdom](https://github.com/tmpvar/jsdom/blob/7ce11776ce161e8d5921a7a183585327400f786b/lib/jsdom/living/helpers/encoding.js). It has since been pulled out into this separate package.\n\n## Alternatives\n\nIf you are looking for a JavaScript implementation of the Encoding Standard's `TextEncoder` and `TextDecoder` APIs, you'll want [@inexorabletash](https://github.com/inexorabletash)'s [text-encoding](https://github.com/inexorabletash/text-encoding) package.\n","homepage":"https://github.com/jsdom/whatwg-encoding#readme","trustScore":20,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":4,"dependent_repositories":5,"stars":1,"contributors":1,"subscribers":2,"all_prereleases":0,"any_outdated_dependencies":-1,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":20},"versions":[{"versionNumber":"1.0.0","timestamp":"2016-10-16T02:07:07.293Z","trustScore":9,"dependencies":[{"packageName":"iconv-lite","version":"0.4.13"}]},{"versionNumber":"1.0.1","timestamp":"2016-10-16T02:34:31.658Z","trustScore":9,"dependencies":[{"packageName":"iconv-lite","version":"0.4.13"}]},{"versionNumber":"1.0.2","timestamp":"2017-10-23T00:13:37.174Z","trustScore":9,"dependencies":[{"packageName":"iconv-lite","version":"0.4.13"}]},{"versionNumber":"1.0.3","timestamp":"2017-10-29T01:44:55.546Z","trustScore":8,"dependencies":[{"packageName":"iconv-lite","version":"0.4.19"}]},{"versionNumber":"1.0.4","timestamp":"2018-08-13T00:14:39.035Z","trustScore":9,"dependencies":[{"packageName":"iconv-lite","version":"0.4.23"}]},{"versionNumber":"1.0.5","timestamp":"2018-09-30T04:20:59.538Z","trustScore":20,"dependencies":[{"packageName":"iconv-lite","version":"0.4.24"}]}]}},"__N_SSG":true}