{"pageProps":{"postData":{"_id":"5fb66a009f9e7f16fd324b32","id":"deep-eql","crawlTimestamp":"19/11/2020 12:50:07","packageName":"deep-eql","description":"Improved deep equality testing for Node.js and the browser.","repository":{"type":"git","url":"git+ssh://git@github.com/chaijs/deep-eql.git"},"readme":"<h1 align=center>\n  <a href=\"http://chaijs.com\" title=\"Chai Documentation\">\n    <img alt=\"ChaiJS\" src=\"http://chaijs.com/img/chai-logo.png\"/> deep-eql\n  </a>\n</h1>\n\n<p align=center>\n  Improved deep equality testing for [node](http://nodejs.org) and the browser.\n</p>\n\n<p align=center>\n  <a href=\"./LICENSE\">\n    <img\n      alt=\"license:mit\"\n      src=\"https://img.shields.io/badge/license-mit-green.svg?style=flat-square\"\n    />\n  </a><a href=\"https://github.com/chaijs/deep-eql/releases\">\n    <img\n      alt=\"tag:?\"\n      src=\"https://img.shields.io/github/tag/chaijs/deep-eql.svg?style=flat-square\"\n    />\n  </a><a href=\"https://travis-ci.org/chaijs/deep-eql\">\n    <img\n      alt=\"build:?\"\n      src=\"https://img.shields.io/travis/chaijs/deep-eql/master.svg?style=flat-square\"\n    />\n  </a><a href=\"https://coveralls.io/r/chaijs/deep-eql\">\n    <img\n      alt=\"coverage:?\"\n      src=\"https://img.shields.io/coveralls/chaijs/deep-eql/master.svg?style=flat-square\"\n    />\n  </a><a href=\"https://www.npmjs.com/packages/deep-eql\">\n    <img\n      alt=\"code quality:?\"\n      src=\"https://img.shields.io/codacy/6de187aa62274dbea6e69a3c27e798da.svg?style=flat-square\"\n    />\n  </a><a href=\"https://www.npmjs.com/packages/deep-eql\">\n    <img\n      alt=\"dependencies:?\"\n      src=\"https://img.shields.io/npm/dm/deep-eql.svg?style=flat-square\"\n    />\n  </a><a href=\"\">\n    <img\n      alt=\"devDependencies:?\"\n      src=\"https://img.shields.io/david/chaijs/deep-eql.svg?style=flat-square\"\n    />\n  </a><a href=\"https://github.com/nodejs/LTS#lts-schedule1\">\n    <img\n      alt=\"Supported Node Version: 4+\"\n      src=\"https://img.shields.io/badge/node-4+-43853d.svg?style=flat-square\"\n    />\n  </a>\n  <br/>\n  <a href=\"https://saucelabs.com/u/chaijs-deep-eql\">\n    <img\n      alt=\"Selenium Test Status\"\n      src=\"https://saucelabs.com/browser-matrix/chaijs-deep-eql.svg\"\n    />\n  </a>\n  <br>\n  <a href=\"https://chai-slack.herokuapp.com/\">\n    <img\n      alt=\"Join the Slack chat\"\n      src=\"https://img.shields.io/badge/slack-join%20chat-E2206F.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://gitter.im/chaijs/deep-eql\">\n    <img\n      alt=\"Join the Gitter chat\"\n      src=\"https://img.shields.io/badge/gitter-join%20chat-D0104D.svg?style=flat-square\"\n    />\n  </a>\n</p>\n\n## What is Deep-Eql?\n\nDeep Eql is a module which you can use to determine if two objects are \"deeply\" equal - that is, rather than having referential equality (`a === b`), this module checks an object's keys recursively, until it finds primitives to check for referential equality. For more on equality in JavaScript, read [the comparison operators article on mdn](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators).\n\nAs an example, take the following:\n\n```js\n1 === 1 // These are primitives, they hold the same reference - they are strictly equal\n1 == '1' // These are two different primitives, through type coercion they hold the same value - they are loosely equal\n{ a: 1 } !== { a: 1 } // These are two different objects, they hold different references and so are not strictly equal - even though they hold the same values inside\n{ a: 1 } != { a: 1 } // They have the same type, meaning loose equality performs the same check as strict equality - they are still not equal.\n\nvar deepEql = require(\"deep-eql\");\ndeepEql({ a: 1 }, { a: 1 }) === true // deepEql can determine that they share the same keys and those keys share the same values, therefore they are deeply equal!\n```\n\n## Installation\n\n### Node.js\n\n`deep-eql` is available on [npm](http://npmjs.org).\n\n    $ npm install deep-eql\n\n## Usage\n\nThe primary export of `deep-eql` is function that can be given two objects to compare. It will always return a boolean which can be used to determine if two objects are deeply equal.\n\n### Rules\n\n- Strict equality for non-traversable nodes according to [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is):\n  - `eql(NaN, NaN).should.be.true;`\n  - `eql(-0, +0).should.be.false;`\n- All own and inherited enumerable properties are considered:\n  - `eql(Object.create({ foo: { a: 1 } }), Object.create({ foo: { a: 1 } })).should.be.true;`\n  - `eql(Object.create({ foo: { a: 1 } }), Object.create({ foo: { a: 2 } })).should.be.false;`\n- When comparing `Error` objects, only `name`, `message`, and `code` properties are considered, regardless of enumerability:\n  - `eql(Error('foo'), Error('foo')).should.be.true;`\n  - `eql(Error('foo'), Error('bar')).should.be.false;`\n  - `eql(Error('foo'), TypeError('foo')).should.be.false;`\n  - `eql(Object.assign(Error('foo'), { code: 42 }), Object.assign(Error('foo'), { code: 42 })).should.be.true;`\n  - `eql(Object.assign(Error('foo'), { code: 42 }), Object.assign(Error('foo'), { code: 13 })).should.be.false;`\n  - `eql(Object.assign(Error('foo'), { otherProp: 42 }), Object.assign(Error('foo'), { otherProp: 13 })).should.be.true;`\n- Arguments are not Arrays:\n  - `eql([], arguments).should.be.false;`\n  - `eql([], Array.prototype.slice.call(arguments)).should.be.true;`\n","homepage":"https://github.com/chaijs/deep-eql#readme","trustScore":23,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":6,"dependent_repositories":5,"stars":2,"contributors":1,"subscribers":1,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":23},"versions":[{"versionNumber":"0.1.0","timestamp":"2013-09-18T15:48:44.262Z","trustScore":12,"dependencies":[{"packageName":"type-detect","version":"0.1.0"}]},{"versionNumber":"0.1.1","timestamp":"2013-09-18T16:05:30.471Z","trustScore":9,"dependencies":[{"packageName":"type-detect","version":"0.1.0"}]},{"versionNumber":"0.1.2","timestamp":"2013-09-18T16:10:10.940Z","trustScore":11,"dependencies":[{"packageName":"type-detect","version":"0.1.0"}]},{"versionNumber":"0.1.3","timestamp":"2013-10-10T10:39:17.348Z","trustScore":10,"dependencies":[{"packageName":"type-detect","version":"0.1.1"}]},{"versionNumber":"1.0.0","timestamp":"2016-10-09T18:17:46.877Z","trustScore":10,"dependencies":[{"packageName":"type-detect","version":"^3.0.0"}]},{"versionNumber":"1.0.1","timestamp":"2016-10-18T21:12:45.251Z","trustScore":11,"dependencies":[{"packageName":"type-detect","version":"^3.0.0"}]},{"versionNumber":"1.0.2","timestamp":"2016-10-18T22:10:07.464Z","trustScore":9,"dependencies":[{"packageName":"type-detect","version":"^3.0.0"}]},{"versionNumber":"1.0.3","timestamp":"2016-10-19T00:37:49.534Z","trustScore":9,"dependencies":[{"packageName":"type-detect","version":"^3.0.0"}]},{"versionNumber":"2.0.0","timestamp":"2016-11-03T01:33:09.496Z","trustScore":12,"dependencies":[{"packageName":"type-detect","version":"^3.0.0"}]},{"versionNumber":"2.0.1","timestamp":"2016-11-15T00:06:51.565Z","trustScore":11,"dependencies":[{"packageName":"type-detect","version":"^3.0.0"}]},{"versionNumber":"2.0.2","timestamp":"2017-05-05T11:19:45.296Z","trustScore":10,"dependencies":[{"packageName":"type-detect","version":"^3.0.0"}]},{"versionNumber":"3.0.0","timestamp":"2017-08-05T20:40:35.807Z","trustScore":10,"dependencies":[{"packageName":"type-detect","version":"^4.0.0"}]},{"versionNumber":"3.0.1","timestamp":"2017-09-06T21:09:23.075Z","trustScore":9,"dependencies":[{"packageName":"type-detect","version":"^4.0.0"}]},{"versionNumber":"4.0.0","timestamp":"2018-10-15T21:39:17.819Z","trustScore":23,"dependencies":[{"packageName":"type-detect","version":"^4.0.0"}]}]}},"__N_SSG":true}