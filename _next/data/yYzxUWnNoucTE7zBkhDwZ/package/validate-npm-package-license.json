{"pageProps":{"postData":{"_id":"5fb664e39f9e7f16fd32471f","id":"validate-npm-package-license","crawlTimestamp":"19/11/2020 12:28:18","packageName":"validate-npm-package-license","description":"Give me a string and I'll tell you if it's a valid npm package license string","repository":{"type":"git","url":"git+https://github.com/kemitchell/validate-npm-package-license.js.git"},"readme":"validate-npm-package-license\n============================\n\nGive me a string and I'll tell you if it's a valid npm package license string.\n\n```javascript\nvar valid = require('validate-npm-package-license');\n```\n\nSPDX license identifiers are valid license strings:\n\n```javascript\n\nvar assert = require('assert');\nvar validSPDXExpression = {\n  validForNewPackages: true,\n  validForOldPackages: true,\n  spdx: true\n};\n\nassert.deepEqual(valid('MIT'), validSPDXExpression);\nassert.deepEqual(valid('BSD-2-Clause'), validSPDXExpression);\nassert.deepEqual(valid('Apache-2.0'), validSPDXExpression);\nassert.deepEqual(valid('ISC'), validSPDXExpression);\n```\nThe function will return a warning and suggestion for nearly-correct license identifiers:\n\n```javascript\nassert.deepEqual(\n  valid('Apache 2.0'),\n  {\n    validForOldPackages: false,\n    validForNewPackages: false,\n    warnings: [\n      'license should be ' +\n      'a valid SPDX license expression (without \"LicenseRef\"), ' +\n      '\"UNLICENSED\", or ' +\n      '\"SEE LICENSE IN <filename>\"',\n      'license is similar to the valid expression \"Apache-2.0\"'\n    ]\n  }\n);\n```\n\nSPDX expressions are valid, too ...\n\n```javascript\n// Simple SPDX license expression for dual licensing\nassert.deepEqual(\n  valid('(GPL-3.0-only OR BSD-2-Clause)'),\n  validSPDXExpression\n);\n```\n\n... except if they contain `LicenseRef`:\n\n```javascript\nvar warningAboutLicenseRef = {\n  validForOldPackages: false,\n  validForNewPackages: false,\n  spdx: true,\n  warnings: [\n    'license should be ' +\n    'a valid SPDX license expression (without \"LicenseRef\"), ' +\n    '\"UNLICENSED\", or ' +\n    '\"SEE LICENSE IN <filename>\"',\n  ]\n};\n\nassert.deepEqual(\n  valid('LicenseRef-Made-Up'),\n  warningAboutLicenseRef\n);\n\nassert.deepEqual(\n  valid('(MIT OR LicenseRef-Made-Up)'),\n  warningAboutLicenseRef\n);\n```\n\nIf you can't describe your licensing terms with standardized SPDX identifiers, put the terms in a file in the package and point users there:\n\n```javascript\nassert.deepEqual(\n  valid('SEE LICENSE IN LICENSE.txt'),\n  {\n    validForNewPackages: true,\n    validForOldPackages: true,\n    inFile: 'LICENSE.txt'\n  }\n);\n\nassert.deepEqual(\n  valid('SEE LICENSE IN license.md'),\n  {\n    validForNewPackages: true,\n    validForOldPackages: true,\n    inFile: 'license.md'\n  }\n);\n```\n\nIf there aren't any licensing terms, use `UNLICENSED`:\n\n```javascript\nvar unlicensed = {\n  validForNewPackages: true,\n  validForOldPackages: true,\n  unlicensed: true\n};\nassert.deepEqual(valid('UNLICENSED'), unlicensed);\nassert.deepEqual(valid('UNLICENCED'), unlicensed);\n```\n","homepage":"https://github.com/kemitchell/validate-npm-package-license.js#readme","trustScore":21,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":4,"dependent_repositories":6,"stars":1,"contributors":0,"subscribers":2,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":21},"versions":[{"versionNumber":"1.0.0-prerelease-1","timestamp":"2015-05-03T21:39:01.081Z","trustScore":8,"dependencies":[{"packageName":"spdx","version":"0.2.1"},{"packageName":"spdx-correct","version":"1.0.0-prerelease-2"}]},{"versionNumber":"1.0.0-prerelease-2","timestamp":"2015-05-06T07:51:15.937Z","trustScore":10,"dependencies":[{"packageName":"spdx","version":"^0.4.0"},{"packageName":"spdx-correct","version":"1.0.0-prerelease-3"}]},{"versionNumber":"1.0.0-prerelease-3","timestamp":"2015-06-05T20:09:37.329Z","trustScore":10,"dependencies":[{"packageName":"spdx","version":"^0.4.0"},{"packageName":"spdx-correct","version":"1.0.0-prerelease-3"}]},{"versionNumber":"1.0.0","timestamp":"2015-06-05T22:28:16.925Z","trustScore":9,"dependencies":[{"packageName":"spdx","version":"~0.4.0"},{"packageName":"spdx-correct","version":"~1.0.0"}]},{"versionNumber":"2.0.0","timestamp":"2015-06-19T07:38:36.795Z","trustScore":10,"dependencies":[{"packageName":"spdx","version":"~0.4.0"},{"packageName":"spdx-correct","version":"~1.0.0"}]},{"versionNumber":"3.0.0","timestamp":"2015-08-23T22:03:42.936Z","trustScore":9,"dependencies":[{"packageName":"spdx","version":"~0.4.0"},{"packageName":"spdx-correct","version":"~1.0.0"}]},{"versionNumber":"3.0.1","timestamp":"2015-08-23T23:36:10.977Z","trustScore":9,"dependencies":[{"packageName":"spdx-correct","version":"~1.0.0"},{"packageName":"spdx-expression-parse","version":"~1.0.0"}]},{"versionNumber":"3.0.2","timestamp":"2018-02-27T00:22:09.402Z","trustScore":10,"dependencies":[{"packageName":"spdx-correct","version":"^2.0.4"},{"packageName":"spdx-expression-parse","version":"^3.0.0"}]},{"versionNumber":"3.0.3","timestamp":"2018-02-27T18:18:49.179Z","trustScore":9,"dependencies":[{"packageName":"spdx-correct","version":"^3.0.0"},{"packageName":"spdx-expression-parse","version":"^3.0.0"}]},{"versionNumber":"3.0.4","timestamp":"2018-08-05T16:59:03.230Z","trustScore":21,"dependencies":[{"packageName":"spdx-correct","version":"^3.0.0"},{"packageName":"spdx-expression-parse","version":"^3.0.0"}]}]}},"__N_SSG":true}