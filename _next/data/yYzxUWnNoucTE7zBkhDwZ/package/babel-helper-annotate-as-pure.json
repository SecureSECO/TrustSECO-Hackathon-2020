{"pageProps":{"postData":{"_id":"5fb6692e9f9e7f16fd324a84","id":"babel-helper-annotate-as-pure","crawlTimestamp":"19/11/2020 12:46:36","packageName":"babel-helper-annotate-as-pure","description":"Helper function to annotate paths and nodes with #__PURE__ comment","repository":{"type":"git","url":"https://github.com/babel/babel/tree/master/packages/babel-helper-annotate-as-pure"},"readme":"# babel-helper-annotate-as-pure\n\n## API\n\n```js\ndeclare export default annotateAsPure(nodeOrPath: Node | NodePath);\n```\n\n## Usage\n\n```js\nimport traverse from \"babel-traverse\";\nimport annotateAsPure from \"babel-helper-annotate-as-pure\";\n\n// ...\n\ntraverse(file, {\n  CallExpression(path) {\n    annotateAsPure(path);\n  },\n});\n```\n\n## Caveat with UglifyJS pre v3.1.0\n\n`babel-helper-annotate-as-pure` will append any existing leading comments to the `#__PURE__` annotation. Versions of UglifyJS prior to v3.1.0 will **ignore** these annotations, as they only check the _last_ leading comment for the annotation.\n\nFor example, using the `Usage` snippet above:\n\n**In**\n\n```js\nconst four = /* foo */ add(2, 2);\n```\n\n**Out**\n\n```js\nconst four = /* #__PURE__ */ /* foo */ add(2, 2);\n```\n","homepage":"","trustScore":16,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":2,"dependent_repositories":3,"stars":5,"contributors":2,"subscribers":0,"all_prereleases":-2,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":16},"versions":[{"versionNumber":"7.0.0-beta.2","timestamp":"2017-09-26T15:15:20.783Z","trustScore":8,"dependencies":[{"packageName":"babel-types","version":"7.0.0-beta.2"}]},{"versionNumber":"7.0.0-beta.3","timestamp":"2017-10-15T13:11:45.072Z","trustScore":16,"dependencies":[{"packageName":"babel-types","version":"7.0.0-beta.3"}]}]}},"__N_SSG":true}