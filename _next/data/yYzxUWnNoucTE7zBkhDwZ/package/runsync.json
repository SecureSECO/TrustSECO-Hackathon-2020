{"pageProps":{"postData":{"_id":"5fb66a329f9e7f16fd324b5c","id":"runsync","crawlTimestamp":"19/11/2020 12:50:57","packageName":"runsync","description":"Polyfill of spawnSync and execSync for Node-0.10.x (Unix only yet)","repository":{"type":"git","url":"git://github.com/norahiko/runsync.git"},"readme":"# runsync \n\nPolyfill of spawnSync and execSync for Node-0.10.x ***(Unix only yet)***\n\n[![Build Status](https://travis-ci.org/norahiko/runsync.svg?branch=master)](https://travis-ci.org/norahiko/runsync)\n[![Coverage Status](https://coveralls.io/repos/norahiko/runsync/badge.png?branch=master)](https://coveralls.io/r/norahiko/runsync?branch=master)\n\n[![NPM](https://nodei.co/npm/runsync.png)](https://nodei.co/npm/runsync/)\n\n\n## Instllation\nRequires [node-gyp] (https://github.com/TooTallNate/node-gyp)\n\n```sh\n$ npm install runsync\n```\n\n\n## Usage\n\n```js\nvar runsync = require(\"runsync\");\nvar result = runsync.spawn(\"echo\", [\"Hello\", \"World!\"], { encoding: \"utf8\" });\nconsole.log(result.stdout); // => Hello world!\\n\n\nrunsync.exec(\"sleep 1\");\n\nresult = runsync.popen(\"echo Error message 1>&2\", { encoding: \"utf8\" });\nconsole.log(result.stderr); // => Error message\\n\n```\n\n\n## API\n\n### `runsync.spawn(executable, [args], [options])`\n* Polyfill of [child_process.spawnSync](http://nodejs.org/dist/v0.11.13/docs/api/child_process.html#child_process_child_process_spawnsync_command_args_options).\n\n```js\nvar res = runsync.spawn(\"node\", [\"-e\", \"console.log('Hello, World!')\"], { encoding: \"utf8\" });\nconsole.log(res.stdout) // => 'Hello, World!\\n'\n```\n\n-----\n\n### `runsync.exec(command, [options])`\n* Polyfill of [child_process.execSync](http://nodejs.org/dist/v0.11.13/docs/api/child_process.html#child_process_child_process_execsync_command_options).\n\n```js\nvar output = runsync.exec(\"sleep 3 && echo Hello!\", { timeout: 1000 });\n// => throw Exception because of timeout\n```\n\n-----\n\n### `runsync.execFile(command, [options])`\n* Polyfill of [child_process.execFileSync](http://nodejs.org/dist/v0.11.13/docs/api/child_process.html#child_process_child_process_execfilesync_command_args_options).\n\n```js\nvar html = runsync.execFile(\"curl\", [\"--silent\", \"-X\", \"GET\", \"http://example.com\"]);\nconsole.log(html.toString()); // => '<!doctype html>\\n<html>\\n<head>\\n ...'\n```\n\n-----\n\n### `runsync.popen(command, [options])`\n* This is similar to `runsync.exec`, but it returns **spawn object** likes `runsync.spawn`.\n* This method will not throw Exceptions even if command fails.\n\n```js\nvar result = runsync.popen(\"echo `cat` && echo strerr 1>&2\", { input: \"stdin\", encoding: \"utf8\" });\nconsole.log(result.stdout) // => \"stdin\\n\"\nconsole.log(result.stderr) // => \"stderr\\n\"\n```\n\n-----\n\n### `runsync.shell(command, [options])`\n* This is similar to `runsync.exec`, but always set **'inherit'** to **options.stdio**.\n* Returns Nothing(undefined).\n* This method will throw Exceptions if command fails.\n\n```js\ntry {\n  runsync.shell(\"mocha --reporter nyan\");\n  // 31  -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_,------,\n  // 1   -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_|   /\\_/\\ \n  // 0   -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-^|__( x .x) \n  //     -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-  \"\"  \"\" \n  //  31 passing (468ms)\n  //  1 failing\n\n} catch(err) {\n  console.log(err.message);\n  // => 'Command failed: `mocha -u tdd --reporter nyan`'\n}\n```\n","homepage":"https://github.com/norahiko/runsync","trustScore":9,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":0,"dependent_projects":2,"dependent_repositories":1,"stars":0,"contributors":0,"subscribers":0,"all_prereleases":0,"any_outdated_dependencies":-1,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":9},"versions":[{"versionNumber":"0.0.0","timestamp":"2014-08-03T12:45:16.554Z","trustScore":5,"dependencies":[]},{"versionNumber":"0.0.1","timestamp":"2014-08-04T08:10:50.597Z","trustScore":3,"dependencies":[]},{"versionNumber":"0.0.2","timestamp":"2014-08-04T14:18:09.916Z","trustScore":4,"dependencies":[]},{"versionNumber":"0.0.3","timestamp":"2014-08-08T12:15:33.574Z","trustScore":4,"dependencies":[{"packageName":"nan","version":"~1.3.0"}]},{"versionNumber":"0.0.4","timestamp":"2014-08-08T23:59:46.912Z","trustScore":4,"dependencies":[{"packageName":"nan","version":"~1.3.0"}]},{"versionNumber":"0.0.5","timestamp":"2014-08-09T15:52:28.087Z","trustScore":4,"dependencies":[{"packageName":"nan","version":"~1.3.0"}]},{"versionNumber":"0.0.6","timestamp":"2014-08-10T13:46:55.729Z","trustScore":4,"dependencies":[{"packageName":"nan","version":"~1.3.0"}]},{"versionNumber":"0.1.1","timestamp":"2014-08-10T16:03:57.363Z","trustScore":4,"dependencies":[{"packageName":"nan","version":"~1.3.0"}]},{"versionNumber":"0.1.2","timestamp":"2014-08-10T16:21:49.197Z","trustScore":4,"dependencies":[{"packageName":"nan","version":"~1.3.0"}]},{"versionNumber":"0.1.3","timestamp":"2014-08-13T07:46:23.212Z","trustScore":4,"dependencies":[{"packageName":"nan","version":"~1.3.0"}]},{"versionNumber":"0.1.4","timestamp":"2014-08-14T15:09:07.923Z","trustScore":5,"dependencies":[{"packageName":"nan","version":"~1.3.0"}]},{"versionNumber":"0.1.5","timestamp":"2014-08-16T12:51:19.919Z","trustScore":4,"dependencies":[{"packageName":"nan","version":"~1.3.0"}]},{"versionNumber":"0.1.6","timestamp":"2014-08-21T00:05:49.440Z","trustScore":4,"dependencies":[{"packageName":"nan","version":"~1.3.0"}]},{"versionNumber":"0.1.7","timestamp":"2014-08-21T05:00:53.520Z","trustScore":4,"dependencies":[{"packageName":"nan","version":"~1.3.0"}]},{"versionNumber":"0.1.8","timestamp":"2014-08-23T15:18:18.756Z","trustScore":9,"dependencies":[{"packageName":"nan","version":"~1.3.0"}]}]}},"__N_SSG":true}