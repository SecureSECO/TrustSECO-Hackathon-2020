{"pageProps":{"postData":{"_id":"5fb6661c9f9e7f16fd32481c","id":"readdir-glob","crawlTimestamp":"19/11/2020 12:33:31","packageName":"readdir-glob","description":"Recursive fs.readdir with streaming API and glob filtering.","repository":{"type":"git","url":"git://github.com/Yqnn/node-readdir-glob.git"},"readme":"# Readdir-Glob\n\n[![Build Status](https://travis-ci.com/Yqnn/node-readdir-glob.svg?branch=master)](https://travis-ci.com/Yqnn/node-readdir-glob) [![Coverage Status](https://coveralls.io/repos/github/Yqnn/node-readdir-glob/badge.svg?branch=master)](https://coveralls.io/github/Yqnn/node-readdir-glob?branch=master)\n\nRecursive version of fs.readdir wih stream API and glob filtering.\nUses the `minimatch` library to do its matching.\n\n## Usage\n\nInstall with npm\n```\nnpm i readdir-glob\n```\n\n```javascript\nconst readdirGlob = require('readdir-glob');\nconst globber = readdirGlob('.', {pattern: '**/*.js'});\nglobber.on('match', match => {\n    // m.relative: relative path of the matched file\n    // m.absolute: absolute path of the matched file\n    // m.stat: stat of the matched file (only if stat:true option is used)\n});\nglobber.on('error', err => {\n    console.error('fatal error', err);\n});\nglobber.on('end', (m) => {\n    console.log('done');\n});\n```\n\n## readdirGlob(root, [options])\n\n* `root` `{String}` Path to be read recursively, *default*: `'.'`\n* `options` `{Object}` Options, *default*: `{}`\n\nReturns a EventEmitter reading given root recursively.\n\n### Properties\n\n* `options`: The options object passed in.\n* `paused`: Boolean which is set to true when calling `pause()`.\n* `aborted` Boolean which is set to true when calling `abort()`.  There is no way at this time to continue a glob search after aborting.\n\n### Events\n\n* `match`: Every time a match is found, this is emitted with the specific thing that matched.\n* `end`: When the matching is finished, this is emitted with all the matches found. \n* `error`: Emitted when an unexpected error is encountered.\n\n### Methods\n\n* `pause()`: Temporarily stop the search\n* `resume()`: Resume the search\n* `abort()`: Stop the search forever\n\n### Options\n\n* `pattern`: Glob pattern or Array of Glob patterns to match the found files with. A file has to match at least one of the provided patterns to be returned.\n* `ignore`: Glob pattern or Array of Glob patterns to exclude matches. If a file or a folder matches at least one of the provided patterns, it's not returned. It doesn't prevent files from folder content to be returned. Note: `ignore` patterns are *always* in `dot:true` mode.\n* `skip`: Glob pattern or Array of Glob patterns to exclude folders. If a folder matches one of the provided patterns, it's not returned, and it's not explored: this prevents any of its children to be returned. Note: `skip` patterns are *always* in `dot:true` mode.\n* `mark`: Add a `/` character to directory matches.\n* `stat`: Set to true to stat *all* results.  This reduces performance.\n* `silent`: When an unusual error is encountered when attempting to read a directory, a warning will be printed to stderr.  Set the `silent` option to true to suppress these warnings.\n* `nodir`: Do not match directories, only files.\n* `follow`: Follow symlinked directories. Note that requires to stat *all* results, and so reduces performance.\n\nThe following options apply only if `pattern` option is set, and are forwarded to `minimatch`:\n* `dot`: Allow `pattern` to match filenames starting with a period, even if the pattern does not explicitly have a period in that spot.\n* `noglobstar`: Disable `**` matching against multiple folder names.\n* `nocase`: Perform a case-insensitive match.  Note: on case-insensitive filesystems, non-magic patterns will match by default, since `stat` and `readdir` will not raise errors.\n* `matchBase`: Perform a basename-only match if the pattern does not  contain any slash characters.  That is, `*.js` would be treated as equivalent to `**/*.js`, matching all js files in all directories.\n\n\n## References\n\nUnit-test set is based on [node-glob](https://www.npmjs.com/package/glob) tests.\n","homepage":"https://github.com/Yqnn/node-readdir-glob","trustScore":8,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":1,"not_brand_new":0,"one_point_oh":1,"dependent_projects":0,"dependent_repositories":0,"stars":0,"contributors":0,"subscribers":0,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":8},"versions":[{"versionNumber":"1.0.0","timestamp":"2020-07-22T12:35:38.614Z","trustScore":8,"dependencies":[{"packageName":"minimatch","version":"^3.0.4"}]},{"versionNumber":"1.1.0","timestamp":"2020-09-21T21:29:31.920Z","trustScore":8,"dependencies":[{"packageName":"minimatch","version":"^3.0.4"}]},{"versionNumber":"1.1.1","timestamp":"2020-10-06T22:03:33.433Z","trustScore":8,"dependencies":[{"packageName":"minimatch","version":"^3.0.4"}]}]}},"__N_SSG":true}