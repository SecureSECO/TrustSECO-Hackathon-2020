{"pageProps":{"postData":{"_id":"5fb663a89f9e7f16fd32461e","id":"once","crawlTimestamp":"19/11/2020 12:23:03","packageName":"once","description":"Run a function exactly one time","repository":{"type":"git","url":"git://github.com/isaacs/once.git"},"readme":"# once\n\nOnly call a function once.\n\n## usage\n\n```javascript\nvar once = require('once')\n\nfunction load (file, cb) {\n  cb = once(cb)\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n```\n\nOr add to the Function.prototype in a responsible way:\n\n```javascript\n// only has to be done once\nrequire('once').proto()\n\nfunction load (file, cb) {\n  cb = cb.once()\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n```\n\nIronically, the prototype feature makes this module twice as\ncomplicated as necessary.\n\nTo check whether you function has been called, use `fn.called`. Once the\nfunction is called for the first time the return value of the original\nfunction is saved in `fn.value` and subsequent calls will continue to\nreturn this value.\n\n```javascript\nvar once = require('once')\n\nfunction load (cb) {\n  cb = once(cb)\n  var stream = createStream()\n  stream.once('data', cb)\n  stream.once('end', function () {\n    if (!cb.called) cb(new Error('not found'))\n  })\n}\n```\n\n## `once.strict(func)`\n\nThrow an error if the function is called twice.\n\nSome functions are expected to be called only once. Using `once` for them would\npotentially hide logical errors.\n\nIn the example below, the `greet` function has to call the callback only once:\n\n```javascript\nfunction greet (name, cb) {\n  // return is missing from the if statement\n  // when no name is passed, the callback is called twice\n  if (!name) cb('Hello anonymous')\n  cb('Hello ' + name)\n}\n\nfunction log (msg) {\n  console.log(msg)\n}\n\n// this will print 'Hello anonymous' but the logical error will be missed\ngreet(null, once(msg))\n\n// once.strict will print 'Hello anonymous' and throw an error when the callback will be called the second time\ngreet(null, once.strict(msg))\n```\n","homepage":"https://github.com/isaacs/once#readme","trustScore":25,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":1,"dependent_projects":6,"dependent_repositories":6,"stars":2,"contributors":1,"subscribers":2,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":25},"versions":[{"versionNumber":"1.1.1","timestamp":"2012-08-14T07:25:58.262Z","trustScore":10,"dependencies":[]},{"versionNumber":"1.2.0","timestamp":"2013-08-12T02:55:21.962Z","trustScore":11,"dependencies":[]},{"versionNumber":"1.3.0","timestamp":"2013-10-24T06:27:26.638Z","trustScore":10,"dependencies":[]},{"versionNumber":"1.3.1","timestamp":"2014-09-18T23:05:04.887Z","trustScore":12,"dependencies":[{"packageName":"wrappy","version":"1"}]},{"versionNumber":"1.3.2","timestamp":"2015-05-04T23:09:54.026Z","trustScore":11,"dependencies":[{"packageName":"wrappy","version":"1"}]},{"versionNumber":"1.3.3","timestamp":"2015-11-20T21:45:14.765Z","trustScore":11,"dependencies":[{"packageName":"wrappy","version":"1"}]},{"versionNumber":"1.4.0","timestamp":"2016-09-06T21:11:09.367Z","trustScore":25,"dependencies":[{"packageName":"wrappy","version":"1"}]}]}},"__N_SSG":true}