{"pageProps":{"postData":{"_id":"5fb0678ea28b82fef5a67a4a","id":"stream-combiner","crawlTimestamp":"14/11/2020 23:26:05","packageName":"stream-combiner","description":"[![npm version](https://img.shields.io/npm/v/stream-combiner.svg)](https://npmjs.org/package/stream-combiner)  [![Travis CI](https://travis-ci.org/dominictarr/stream-combiner.svg)](https://travis-ci.org/dominictarr/stream-combiner)","repository":{"type":"git","url":"git://github.com/dominictarr/stream-combiner.git"},"readme":"# stream-combiner\n\n[![npm version](https://img.shields.io/npm/v/stream-combiner.svg)](https://npmjs.org/package/stream-combiner) \n[![Travis CI](https://travis-ci.org/dominictarr/stream-combiner.svg)](https://travis-ci.org/dominictarr/stream-combiner)\n\n## Combine (stream1,...,streamN)\n\nTurn a pipeline into a single stream. `Combine` returns a stream that writes to the first stream\nand reads from the last stream. \n\nListening for 'error' will recieve errors from all streams inside the pipe.\n\n```js\nvar Combine = require('stream-combiner')\nvar es      = require('event-stream')\n\nCombine(                                  // connect streams together with `pipe`\n  process.openStdin(),                    // open stdin\n  es.split(),                             // split stream to break on newlines\n  es.map(function (data, callback) {      // turn this async function into a stream\n    var repr = util.inspect(JSON.parse(data))  // render it nicely\n    callback(null, repr)\n  }),\n  process.stdout                          // pipe it to stdout !\n)\n```\n\nCan also be called with an array:\n\n```js\nvar combinedStream = Combine([\n  stream1,\n  stream2,\n]);\n```\n\nOr to combine gulp plugins:\n\n```js\nfunction coffeePipe() {\n  return Combine(\n    coffeescript(),\n    coffeelint.reporter('fail').on('error', function(){\n      gutil.beep()\n      gulp.run('lint')\n    })\n}\n\n//usage:\ngulp.src().pipe(coffeePipe());\n```\n\n## License\n\nMIT\n","homepage":"https://github.com/dominictarr/stream-combiner","trustScore":20,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":0,"not_brand_new":1,"one_point_oh":0,"dependent_projects":4,"dependent_repositories":5,"stars":2,"contributors":1,"subscribers":1,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":20},"versions":[{"versionNumber":"0.0.0","timestamp":"2012-11-27T07:24:49.721Z","trustScore":20,"dependencies":[{"packageName":"duplexer","version":"0.0.2"}]},{"versionNumber":"0.0.1","timestamp":"2013-01-31T21:17:59.894Z","trustScore":20,"dependencies":[{"packageName":"duplexer","version":"~0.0.3"}]},{"versionNumber":"0.0.2","timestamp":"2013-03-18T01:18:20.646Z","trustScore":21,"dependencies":[{"packageName":"duplexer","version":"~0.0.3"}]},{"versionNumber":"0.0.4","timestamp":"2013-12-11T17:01:21.554Z","trustScore":21,"dependencies":[{"packageName":"duplexer","version":"~0.1.1"}]},{"versionNumber":"0.1.0","timestamp":"2014-05-09T10:54:26.499Z","trustScore":18,"dependencies":[{"packageName":"duplexer","version":"~0.1.1"},{"packageName":"through","version":"~2.3.4"}]},{"versionNumber":"0.2.0","timestamp":"2014-05-18T08:20:50.712Z","trustScore":16,"dependencies":[{"packageName":"duplexer","version":"~0.1.1"},{"packageName":"through","version":"~2.3.4"}]},{"versionNumber":"0.2.1","timestamp":"2014-05-29T20:11:38.164Z","trustScore":19,"dependencies":[{"packageName":"duplexer","version":"~0.1.1"},{"packageName":"through","version":"~2.3.4"}]},{"versionNumber":"0.2.2","timestamp":"2015-06-05T08:49:04.050Z","trustScore":20,"dependencies":[{"packageName":"duplexer","version":"~0.1.1"},{"packageName":"through","version":"~2.3.4"}]}]}},"__N_SSG":true}