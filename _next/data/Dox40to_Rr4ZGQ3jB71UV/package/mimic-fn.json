{"pageProps":{"postData":{"_id":"5fb067fca28b82fef5a67a9d","id":"mimic-fn","crawlTimestamp":"14/11/2020 23:27:55","packageName":"mimic-fn","description":"Make a function mimic another one","repository":{"type":"git","url":"git+https://github.com/sindresorhus/mimic-fn.git"},"readme":"<img src=\"media/logo.svg\" alt=\"mimic-fn\" width=\"400\">\n<br>\n\n[![Build Status](https://travis-ci.org/sindresorhus/mimic-fn.svg?branch=master)](https://travis-ci.org/sindresorhus/mimic-fn)\n\n> Make a function mimic another one\n\nUseful when you wrap a function in another function and like to preserve the original name and other properties.\n\n\n## Install\n\n```\n$ npm install mimic-fn\n```\n\n\n## Usage\n\n```js\nconst mimicFn = require('mimic-fn');\n\nfunction foo() {}\nfoo.unicorn = 'ðŸ¦„';\n\nfunction wrapper() {\n\treturn foo();\n}\n\nconsole.log(wrapper.name);\n//=> 'wrapper'\n\nmimicFn(wrapper, foo);\n\nconsole.log(wrapper.name);\n//=> 'foo'\n\nconsole.log(wrapper.unicorn);\n//=> 'ðŸ¦„'\n\nconsole.log(String(wrapper));\n//=> '/* Wrapped with wrapper() */\\nfunction foo() {}'\n```\n\n\n## API\n\n### mimicFn(to, from, options?)\n\nModifies the `to` function to mimic the `from` function. Returns the `to` function.\n\n`name`, `displayName`, and any other properties of `from` are copied. The `length` property is not copied. Prototype, class, and inherited properties are copied.\n\n`to.toString()` will return the same as `from.toString()` but prepended with a `Wrapped with to()` comment.\n\n#### to\n\nType: `Function`\n\nMimicking function.\n\n#### from\n\nType: `Function`\n\nFunction to mimic.\n\n#### options\n\nType: `object`\n\n##### ignoreNonConfigurable\n\nType: `boolean`<br>\nDefault: `false`\n\nSkip modifying [non-configurable properties](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor#Description) instead of throwing an error.\n\n## Related\n\n- [rename-fn](https://github.com/sindresorhus/rename-fn) - Rename a function\n- [keep-func-props](https://github.com/ehmicky/keep-func-props) - Wrap a function without changing its name and other properties\n\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-mimic-fn?utm_source=npm-mimic-fn&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n","homepage":"https://github.com/sindresorhus/mimic-fn#readme","trustScore":24,"sourceRank":{"basic_info_present":1,"repository_present":1,"readme_present":1,"license_present":1,"versions_present":1,"follows_semver":1,"recent_release":1,"not_brand_new":1,"one_point_oh":1,"dependent_projects":4,"dependent_repositories":6,"stars":2,"contributors":1,"subscribers":2,"all_prereleases":0,"any_outdated_dependencies":0,"is_deprecated":0,"is_unmaintained":0,"is_removed":0,"trustScore":24},"versions":[{"versionNumber":"1.0.0","timestamp":"2016-10-19T17:27:32.921Z","trustScore":30,"dependencies":[]},{"versionNumber":"1.1.0","timestamp":"2016-11-01T09:35:10.608Z","trustScore":26,"dependencies":[]},{"versionNumber":"1.2.0","timestamp":"2018-02-02T03:28:18.400Z","trustScore":27,"dependencies":[]},{"versionNumber":"2.0.0","timestamp":"2019-03-07T19:00:04.908Z","trustScore":20,"dependencies":[]},{"versionNumber":"2.1.0","timestamp":"2019-03-31T17:53:34.125Z","trustScore":23,"dependencies":[]},{"versionNumber":"3.0.0","timestamp":"2019-06-13T16:07:20.324Z","trustScore":26,"dependencies":[]},{"versionNumber":"3.1.0","timestamp":"2020-07-24T09:13:36.810Z","trustScore":11,"dependencies":[]}]}},"__N_SSG":true}