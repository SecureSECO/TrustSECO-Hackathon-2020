{"ast":null,"code":"import data from '../testData/data.json';\nexport function getPackagePaths() {\n  // paths = data.slice().map((record) => {\n  //     console.log(\"records\")\n  //     console.log(record.title)\n  //     return(record.title)})\n  //     let pathsexp = paths.map((record) => {\n  //         console.log(\"records\")\n  //         console.log(record.title)\n  //         return(record.title)})\n  //     console.log(pathsexp)\n  var jp = require('jsonpath');\n\n  var paths = jp.query(data, '$..title');\n  return paths;\n}\nexport function getAllPackageIds() {\n  paths = data.slice().map(function (record) {\n    return record.title;\n  });\n  return paths;\n}\nexport function getPackageData(id) {\n  for (var i = 0; i < data.length; i++) {\n    if (data[i].title == id) return data[i];\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/jozef/Documents/Projects/SiuNextJS/lib/packageData.js"],"names":["data","getPackagePaths","jp","require","paths","query","getAllPackageIds","slice","map","record","title","getPackageData","id","i","length"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,uBAAjB;AAGA,OAAO,SAASC,eAAT,GAA0B;AAC7B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA,MAAIC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAhB;;AACA,MAAIC,KAAK,GAAGF,EAAE,CAACG,KAAH,CAASL,IAAT,EAAe,UAAf,CAAZ;AACA,SAAOI,KAAP;AACH;AACD,OAAO,SAASE,gBAAT,GAA2B;AAC9BF,EAAAA,KAAK,GAAGJ,IAAI,CAACO,KAAL,GAAaC,GAAb,CAAiB,UAACC,MAAD,EAAY;AACjC,WAAOA,MAAM,CAACC,KAAd;AACH,GAFO,CAAR;AAGA,SAAON,KAAP;AACH;AAGD,OAAO,SAASO,cAAT,CAAwBC,EAAxB,EAA2B;AAC9B,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,IAAI,CAACc,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjC,QAAGb,IAAI,CAACa,CAAD,CAAJ,CAAQH,KAAR,IAAiBE,EAApB,EACI,OAAOZ,IAAI,CAACa,CAAD,CAAX;AACP;;AACD,SAAO,IAAP;AACH","sourcesContent":["import data from '../testData/data.json'\n\n\nexport function getPackagePaths(){\n    // paths = data.slice().map((record) => {\n    //     console.log(\"records\")\n    //     console.log(record.title)\n    //     return(record.title)})\n\n    //     let pathsexp = paths.map((record) => {\n    //         console.log(\"records\")\n    //         console.log(record.title)\n    //         return(record.title)})\n    //     console.log(pathsexp)\n    var jp = require('jsonpath')\n    let paths = jp.query(data, '$..title')\n    return paths\n}\nexport function getAllPackageIds(){\n    paths = data.slice().map((record) => {\n        return(record.title)\n    })\n    return paths\n}\n\n\nexport function getPackageData(id){\n    for (let i = 0; i < data.length; i++){\n        if(data[i].title == id)\n            return data[i]\n    }\n    return null\n}"]},"metadata":{},"sourceType":"module"}